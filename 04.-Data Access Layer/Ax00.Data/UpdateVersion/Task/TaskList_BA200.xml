<DatabaseUpdatesManager xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <Releases>
    <Release Version="03.00.04">
        <DataRevisions>
          <DataRevision JiraID="BA-2469" SequenceNumber="0">
            <PrerequisiteScript>
            </PrerequisiteScript>
            <DataScript>
			        UPDATE dbo.tfmwVersions SET UserSoftware = '3.0.4', ServiceSoftware = '1.2.4', FirmwareScripts = '1.1.0', Firmware = '0.13'
			        GO
            </DataScript>
            <IntegrityScript>
            </IntegrityScript>
          </DataRevision>
        </DataRevisions>
    </Release>
    <Release Version="03.00.05">
      <DataRevisions>
        <DataRevision JiraID="BA-2469" SequenceNumber="0">
          <PrerequisiteScript>
          </PrerequisiteScript>
          <DataScript>
            UPDATE dbo.tfmwVersions SET UserSoftware = '3.0.5', ServiceSoftware = '1.2.4', FirmwareScripts = '1.1.0', Firmware = '0.20'
            GO

            IF ((SELECT COUNT(*) FROM [dbo].[tcfgAnalyzers] WHERE [AnalyzerID] = 'SN0000099999_Ax200' ) = 0)
            BEGIN
            INSERT INTO [dbo].[tcfgAnalyzers] ([AnalyzerID],[AnalyzerModel],[FirmwareVersion],[Generic],[Active]) VALUES('SN0000099999_Ax200', 'A200', '0.0', 1, 0)

            END
            GO

            IF ((SELECT COUNT(*) FROM sys.sysobjects WHERE xtype = 'U' AND name = 'tfmwAnalyzerModelTubesByRing') = 1)
            BEGIN
            INSERT INTO [dbo].[tfmwAnalyzerModelTubesByRing] ([AnalyzerModel],[RotorType],[RingNumber],[TubeType],[ApplyToAllFlag]) VALUES ('A200', 'SAMPLES',1,'T13',1)
            INSERT INTO [dbo].[tfmwAnalyzerModelTubesByRing] ([AnalyzerModel],[RotorType],[RingNumber],[TubeType],[ApplyToAllFlag]) VALUES ('A200', 'SAMPLES',1,'T15',1)
            INSERT INTO [dbo].[tfmwAnalyzerModelTubesByRing] ([AnalyzerModel],[RotorType],[RingNumber],[TubeType],[ApplyToAllFlag]) VALUES ('A200', 'SAMPLES',1,'PED',0)
            INSERT INTO [dbo].[tfmwAnalyzerModelTubesByRing] ([AnalyzerModel],[RotorType],[RingNumber],[TubeType],[ApplyToAllFlag]) VALUES ('A200', 'REAGENTS',2,'BOTTLE3',1)
            INSERT INTO [dbo].[tfmwAnalyzerModelTubesByRing] ([AnalyzerModel],[RotorType],[RingNumber],[TubeType],[ApplyToAllFlag]) VALUES ('A200', 'REAGENTS',2,'BOTTLE2',1)
            INSERT INTO [dbo].[tfmwAnalyzerModelTubesByRing] ([AnalyzerModel],[RotorType],[RingNumber],[TubeType],[ApplyToAllFlag]) VALUES ('A200', 'REAGENTS',2,'BOTTLE1',1)
            END
            GO


            IF ((SELECT COUNT(*) FROM sys.sysobjects WHERE xtype = 'U' AND name = 'tfmwAnalyzerModelRotorsConfig') = 1)
            BEGIN
            UPDATE tfmwAnalyzerModelRotorsConfig SET RotorType = 'SAMPLES', RingPositions = 44, FirstCellNumber = 1, LastCellNumber = 44
            WHERE AnalyzerModel = 'A200' AND RotorType = 'SAMP_REAG' AND RingNumber = 1

            UPDATE tfmwAnalyzerModelRotorsConfig SET RotorType = 'REAGENTS', RingPositions = 44, FirstCellNumber = 45, LastCellNumber = 88
            WHERE AnalyzerModel = 'A200' AND RotorType = 'SAMP_REAG' AND RingNumber = 2

            END
            GO

            IF ((SELECT COUNT(*) FROM sys.sysobjects WHERE xtype = 'U' AND name = 'tfmwSwFlags') = 1)
            BEGIN
            IF ((SELECT COUNT(*) FROM [dbo].[tfmwSwFlags] WHERE [FlagID] = 'DynamicBL_Fill' ) = 0)
            BEGIN
            INSERT INTO [dbo].[tfmwSwFlags] ([FlagID] ,[AllowedValues]) VALUES ('DynamicBL_Fill' ,'INI, END, CANCELED or NULL')
            END

            IF ((SELECT COUNT(*) FROM [dbo].[tfmwSwFlags] WHERE [FlagID] = 'DynamicBL_Read' ) = 0)
            BEGIN
            INSERT INTO [dbo].[tfmwSwFlags] ([FlagID] ,[AllowedValues]) VALUES ('DynamicBL_Read' ,'INI, END, CANCELED or NULL')
            END

            IF ((SELECT COUNT(*) FROM [dbo].[tfmwSwFlags] WHERE [FlagID] = 'DynamicBL_Empty' ) = 0)
            BEGIN
            INSERT INTO [dbo].[tfmwSwFlags] ([FlagID] ,[AllowedValues]) VALUES ('DynamicBL_Empty' ,'INI, END, CANCELED or NULL')
            END

            END
            GO
          </DataScript>
        </DataRevision>
        <IntegrityScript>
        </IntegrityScript>
      </DataRevisions>
    </Release>
    <Release Version="03.00.07">
      <DataRevisions>
        <DataRevision JiraID="BA-2469" SequenceNumber="0">
          <PrerequisiteScript>
          </PrerequisiteScript>
          <DataScript>
            UPDATE dbo.tfmwVersions SET UserSoftware = '3.0.7', ServiceSoftware = '1.2.4', FirmwareScripts = '1.3.0', Firmware = '0.44.2'
            GO

            -- BA-2396 ERR560
            IF((SELECT COUNT(*) FROM dbo.tfmwAlarms WHERE AlarmID LIKE 'GLF_BOARD_FBLD_ERR') = 0)
            BEGIN
            INSERT INTO dbo.tfmwAlarms ([AlarmID],[AlarmSource],[AlarmType],[Name],[NameResourceID],[Description],[DescResourceID],[Solution],[SolResourceID],[Sound],[OnRunningSound],[Freeze],[OKType],[LISValue])
            VALUES ('GLF_BOARD_FBLD_ERR','INS','ERROR','Photometric board error during FBLD','GLF_BOARD_ERR','Photometric board does not respond','ALM_GLF_BOARD_ERR','Switch off the analyzer and the application, wait 30 seconds and then switch them on both again. Then press the Connect button','SOL_RECOVER_ERR',0,0,'RESET',1,0)
            END
            GO
            IF((SELECT COUNT(*) FROM dbo.tfmwAlarmErrorCodes WHERE AlarmID LIKE 'GLF_BOARD_FBLD_ERR') = 0)
            BEGIN
            INSERT INTO dbo.tfmwAlarmErrorCodes (AlarmID, ErrorCode, ManagementID)
            VALUES ('GLF_BOARD_FBLD_ERR',560,'3_RECOVER_ERROR')
            END
            GO

            -- BA-2358 ERR551

            IF((SELECT COUNT(*) FROM dbo.tfmwAlarms WHERE AlarmID LIKE 'FBLD_ROTOR_FULL') = 0)
            BEGIN
            INSERT INTO dbo.tfmwAlarms ([AlarmID],[AlarmSource],[AlarmType],[Name],[NameResourceID],[Description],[DescResourceID],[Solution],[SolResourceID],[Sound],[OnRunningSound],[Freeze],[OKType],[LISValue])
            VALUES ('FBLD_ROTOR_FULL','INS','REMARK','Photometric Rotor full','FBLD_ROTOR_FULL','Photometric Rotor is full','ALM_FBLD_ROTOR_FULL',NULL,NULL,0,0,NULL,0,0)
            END
            GO
            IF((SELECT COUNT(*) FROM dbo.tfmwAlarmErrorCodes WHERE AlarmID LIKE 'FBLD_ROTOR_FULL') = 0)
            BEGIN
            INSERT INTO dbo.tfmwAlarmErrorCodes (AlarmID, ErrorCode, ManagementID)
            VALUES ('FBLD_ROTOR_FULL',551,'6_OMMIT_ERROR')
            END
            GO

            -- BA-2358 ERR552

            IF((SELECT COUNT(*) FROM dbo.tfmwAlarms WHERE AlarmID LIKE 'UNKNOW_ROTOR_FULL') = 0)
            BEGIN
            INSERT INTO dbo.tfmwAlarms ([AlarmID],[AlarmSource],[AlarmType],[Name],[NameResourceID],[Description],[DescResourceID],[Solution],[SolResourceID],[Sound],[OnRunningSound],[Freeze],[OKType],[LISValue])
            VALUES ('UNKNOW_ROTOR_FULL','INS','REMARK','Unknow Photometric rotor state','UNKNOW_ROTOR_FULL','Photometric Rotor has some wells full','ALM_UNKNOW_ROTOR_FULL',NULL,NULL,0,0,NULL,0,0)
            END
            GO
            IF((SELECT COUNT(*) FROM dbo.tfmwAlarmErrorCodes WHERE AlarmID LIKE 'UNKNOW_ROTOR_FULL') = 0)
            BEGIN
            INSERT INTO dbo.tfmwAlarmErrorCodes (AlarmID, ErrorCode, ManagementID)
            VALUES ('UNKNOW_ROTOR_FULL',552,'2_FATAL_ERROR')
            END
            GO

            -- BA-2358
            IF((SELECT COUNT(*) FROM dbo.tfmwGeneralSettings WHERE SettingID LIKE 'FLIGHT_FULL_ROTOR_CADUCITY') = 0)
            BEGIN
            INSERT INTO dbo.tfmwGeneralSettings (SettingID, FixedItemDesc, CurrentValue, Status)
            VALUES ('FLIGHT_FULL_ROTOR_CADUCITY','Minutes that a full clean rotor is considered good to be read in a FLIGHT operation','30', 1)
            END
            GO

            -- BA-2406
            IF((SELECT COUNT(*) FROM dbo.tfmwSwFlags WHERE FlagID LIKE 'Barcode') = 0)
            BEGIN
            INSERT INTO [dbo].[tfmwSwFlags] VALUES ('Barcode', 'INI, END, CANCELED or NULL')
            END
            GO
          </DataScript>
          <IntegrityScript>
          </IntegrityScript>
        </DataRevision>
      </DataRevisions>
    </Release>
    <Release Version="03.00.08">
      <DataRevisions>
        <DataRevision JiraID="BA-2345" SequenceNumber="1">
          <PrerequisiteScript>
          </PrerequisiteScript>
          <DataScript>
            UPDATE dbo.tfmwVersions SET UserSoftware = '3.0.8', ServiceSoftware = '1.2.4', FirmwareScripts = '1.3.0', Firmware = '1.00.1'
            GO
          </DataScript>
          <IntegrityScript>
          </IntegrityScript> 
          </DataRevision>
      </DataRevisions>
    </Release>
    <Release Version="03.00.09">
      <DataRevisions>
        <DataRevision JiraID="BA-2601" SequenceNumber="1">
          <PrerequisiteScript>
            IF ((SELECT COUNT(*) FROM tfmwSWParameters WHERE ParameterName = 'BL_LIFETIME ') = 0)
            AND
            ((SELECT COUNT(*) FROM tcfgAnalyzerSettings WHERE SettingID = 'BL_DATETIME') = 0)
            Select 'True'
            ELSE
            Select 'False'
          </PrerequisiteScript>
          <DataScript>

            SET IDENTITY_INSERT tfmwSWParameters ON
            DECLARE @maxParamID INT = (SELECT MAX(ParameterID)+1 FROM tfmwSwParameters)

            INSERT INTO tfmwSWParameters (ParameterID, ParameterName, DependByModel, AnalyzerModel, ValueNumeric, ValueText, Description)
            VALUES (@maxParamID, 'BL_LIFETIME',1,'A200', 480, NULL, 'dynamic base line lifetime, in minutes')
            SET IDENTITY_INSERT tfmwSWParameters OFF

            GO
            INSERT INTO tcfgAnalyzerSettings (AnalyzerID, SettingID, SettingDataType, CurrentValue)
            VALUES ('SN0000099999_Ax200','BL_DATETIME','DATETIME','')
            GO
            
            IF NOT EXISTS (SELECT * FROM [tfmwMultiLanguageResources] WHERE (UPPER([ResourceID]) = 'BASELINE_EXPIRED') AND (UPPER([LanguageID]) = 'ENG')) 
            BEGIN 
            INSERT INTO tfmwMultiLanguageResources (ResourceID, LanguageID, ResourceText, OnlyService,CreationDate, CreationUser, ApplicationVersion, Translated,TranslatedDate, TranslatedUser, TS_User, TS_DateTime)  VALUES('BASELINE_EXPIRED', 'ENG', N'Expired Baseline', 0, convert(datetime,'20150701 07:40:29',112) ,  'SA', '03.00.09',  0, NULL, NULL, 'SA', convert(datetime,'20150701 07:40:29',112) ) 
            END 
            ELSE 
            BEGIN 
            UPDATE tfmwMultiLanguageResources SET ResourceText = N'Expired Baseline', OnlyService  = 0, TS_User = 'SA', TS_DateTime  = convert(datetime,'20150701 07:40:29',112) , Translated = 0, ApplicationVersion = '03.00.09' WHERE  UPPER(ResourceID) = 'BASELINE_EXPIRED' AND UPPER(LanguageID) = 'ENG'
            END 
            GO
            IF NOT EXISTS (SELECT * FROM [tfmwMultiLanguageResources] WHERE (UPPER([ResourceID]) = 'BASELINE_EXPIRED') AND (UPPER([LanguageID]) = 'FRE')) 
            BEGIN 
            INSERT INTO tfmwMultiLanguageResources (ResourceID, LanguageID, ResourceText, OnlyService,CreationDate, CreationUser, ApplicationVersion, Translated,TranslatedDate, TranslatedUser, TS_User, TS_DateTime)  VALUES('BASELINE_EXPIRED', 'FRE', N'Expired Baseline', 0, convert(datetime,'20150701 07:40:29',112) ,  'SA', '03.00.09',  0, NULL, NULL, 'SA', convert(datetime,'20150701 07:40:29',112) ) 
            END 
            ELSE 
            BEGIN 
            UPDATE tfmwMultiLanguageResources SET ResourceText = N'Expired Baseline', OnlyService  = 0, TS_User = 'SA', TS_DateTime  = convert(datetime,'20150701 07:40:29',112) , Translated = 0, ApplicationVersion = '03.00.09' WHERE  UPPER(ResourceID) = 'BASELINE_EXPIRED' AND UPPER(LanguageID) = 'FRE'
            END 
            GO
            IF NOT EXISTS (SELECT * FROM [tfmwMultiLanguageResources] WHERE (UPPER([ResourceID]) = 'BASELINE_EXPIRED') AND (UPPER([LanguageID]) = 'GRE')) 
            BEGIN 
            INSERT INTO tfmwMultiLanguageResources (ResourceID, LanguageID, ResourceText, OnlyService,CreationDate, CreationUser, ApplicationVersion, Translated,TranslatedDate, TranslatedUser, TS_User, TS_DateTime)  VALUES('BASELINE_EXPIRED', 'GRE', N'Expired Baseline', 0, convert(datetime,'20150701 07:40:29',112) ,  'SA', '03.00.09',  0, NULL, NULL, 'SA', convert(datetime,'20150701 07:40:29',112) ) 
            END 
            ELSE 
            BEGIN 
            UPDATE tfmwMultiLanguageResources SET ResourceText = N'Expired Baseline', OnlyService  = 0, TS_User = 'SA', TS_DateTime  = convert(datetime,'20150701 07:40:29',112) , Translated = 0, ApplicationVersion = '03.00.09' WHERE  UPPER(ResourceID) = 'BASELINE_EXPIRED' AND UPPER(LanguageID) = 'GRE'
            END 
            GO
            IF NOT EXISTS (SELECT * FROM [tfmwMultiLanguageResources] WHERE (UPPER([ResourceID]) = 'BASELINE_EXPIRED') AND (UPPER([LanguageID]) = 'HUN')) 
            BEGIN 
            INSERT INTO tfmwMultiLanguageResources (ResourceID, LanguageID, ResourceText, OnlyService,CreationDate, CreationUser, ApplicationVersion, Translated,TranslatedDate, TranslatedUser, TS_User, TS_DateTime)  VALUES('BASELINE_EXPIRED', 'HUN', N'Expired Baseline', 0, convert(datetime,'20150701 07:40:29',112) ,  'SA', '03.00.09',  0, NULL, NULL, 'SA', convert(datetime,'20150701 07:40:29',112) ) 
            END 
            ELSE 
            BEGIN 
            UPDATE tfmwMultiLanguageResources SET ResourceText = N'Expired Baseline', OnlyService  = 0, TS_User = 'SA', TS_DateTime  = convert(datetime,'20150701 07:40:29',112) , Translated = 0, ApplicationVersion = '03.00.09' WHERE  UPPER(ResourceID) = 'BASELINE_EXPIRED' AND UPPER(LanguageID) = 'HUN'
            END 
            GO
            IF NOT EXISTS (SELECT * FROM [tfmwMultiLanguageResources] WHERE (UPPER([ResourceID]) = 'BASELINE_EXPIRED') AND (UPPER([LanguageID]) = 'IND')) 
            BEGIN 
            INSERT INTO tfmwMultiLanguageResources (ResourceID, LanguageID, ResourceText, OnlyService,CreationDate, CreationUser, ApplicationVersion, Translated,TranslatedDate, TranslatedUser, TS_User, TS_DateTime)  VALUES('BASELINE_EXPIRED', 'IND', N'Expired Baseline', 0, convert(datetime,'20150701 07:40:29',112) ,  'SA', '03.00.09',  0, NULL, NULL, 'SA', convert(datetime,'20150701 07:40:29',112) ) 
            END 
            ELSE 
            BEGIN 
            UPDATE tfmwMultiLanguageResources SET ResourceText = N'Expired Baseline', OnlyService  = 0, TS_User = 'SA', TS_DateTime  = convert(datetime,'20150701 07:40:29',112) , Translated = 0, ApplicationVersion = '03.00.09' WHERE  UPPER(ResourceID) = 'BASELINE_EXPIRED' AND UPPER(LanguageID) = 'IND'
            END 
            GO
            IF NOT EXISTS (SELECT * FROM [tfmwMultiLanguageResources] WHERE (UPPER([ResourceID]) = 'BASELINE_EXPIRED') AND (UPPER([LanguageID]) = 'ITA')) 
            BEGIN 
            INSERT INTO tfmwMultiLanguageResources (ResourceID, LanguageID, ResourceText, OnlyService,CreationDate, CreationUser, ApplicationVersion, Translated,TranslatedDate, TranslatedUser, TS_User, TS_DateTime)  VALUES('BASELINE_EXPIRED', 'ITA', N'Expired Baseline', 0, convert(datetime,'20150701 07:40:29',112) ,  'SA', '03.00.09',  0, NULL, NULL, 'SA', convert(datetime,'20150701 07:40:29',112) ) 
            END 
            ELSE 
            BEGIN 
            UPDATE tfmwMultiLanguageResources SET ResourceText = N'Expired Baseline', OnlyService  = 0, TS_User = 'SA', TS_DateTime  = convert(datetime,'20150701 07:40:29',112) , Translated = 0, ApplicationVersion = '03.00.09' WHERE  UPPER(ResourceID) = 'BASELINE_EXPIRED' AND UPPER(LanguageID) = 'ITA'
            END 
            GO
            IF NOT EXISTS (SELECT * FROM [tfmwMultiLanguageResources] WHERE (UPPER([ResourceID]) = 'BASELINE_EXPIRED') AND (UPPER([LanguageID]) = 'KOR')) 
            BEGIN 
            INSERT INTO tfmwMultiLanguageResources (ResourceID, LanguageID, ResourceText, OnlyService,CreationDate, CreationUser, ApplicationVersion, Translated,TranslatedDate, TranslatedUser, TS_User, TS_DateTime)  VALUES('BASELINE_EXPIRED', 'KOR', N'Expired Baseline', 0, convert(datetime,'20150701 07:40:29',112) ,  'SA', '03.00.09',  0, NULL, NULL, 'SA', convert(datetime,'20150701 07:40:29',112) ) 
            END 
            ELSE 
            BEGIN 
            UPDATE tfmwMultiLanguageResources SET ResourceText = N'Expired Baseline', OnlyService  = 0, TS_User = 'SA', TS_DateTime  = convert(datetime,'20150701 07:40:29',112) , Translated = 0, ApplicationVersion = '03.00.09' WHERE  UPPER(ResourceID) = 'BASELINE_EXPIRED' AND UPPER(LanguageID) = 'KOR'
            END 
            GO
            IF NOT EXISTS (SELECT * FROM [tfmwMultiLanguageResources] WHERE (UPPER([ResourceID]) = 'BASELINE_EXPIRED') AND (UPPER([LanguageID]) = 'POL')) 
            BEGIN 
            INSERT INTO tfmwMultiLanguageResources (ResourceID, LanguageID, ResourceText, OnlyService,CreationDate, CreationUser, ApplicationVersion, Translated,TranslatedDate, TranslatedUser, TS_User, TS_DateTime)  VALUES('BASELINE_EXPIRED', 'POL', N'Expired Baseline', 0, convert(datetime,'20150701 07:40:29',112) ,  'SA', '03.00.09',  0, NULL, NULL, 'SA', convert(datetime,'20150701 07:40:29',112) ) 
            END 
            ELSE 
            BEGIN 
            UPDATE tfmwMultiLanguageResources SET ResourceText = N'Expired Baseline', OnlyService  = 0, TS_User = 'SA', TS_DateTime  = convert(datetime,'20150701 07:40:29',112) , Translated = 0, ApplicationVersion = '03.00.09' WHERE  UPPER(ResourceID) = 'BASELINE_EXPIRED' AND UPPER(LanguageID) = 'POL'
            END 
            GO
            IF NOT EXISTS (SELECT * FROM [tfmwMultiLanguageResources] WHERE (UPPER([ResourceID]) = 'BASELINE_EXPIRED') AND (UPPER([LanguageID]) = 'POR')) 
            BEGIN 
            INSERT INTO tfmwMultiLanguageResources (ResourceID, LanguageID, ResourceText, OnlyService,CreationDate, CreationUser, ApplicationVersion, Translated,TranslatedDate, TranslatedUser, TS_User, TS_DateTime)  VALUES('BASELINE_EXPIRED', 'POR', N'Expired Baseline', 0, convert(datetime,'20150701 07:40:29',112) ,  'SA', '03.00.09',  0, NULL, NULL, 'SA', convert(datetime,'20150701 07:40:29',112) ) 
            END 
            ELSE 
            BEGIN 
            UPDATE tfmwMultiLanguageResources SET ResourceText = N'Expired Baseline', OnlyService  = 0, TS_User = 'SA', TS_DateTime  = convert(datetime,'20150701 07:40:29',112) , Translated = 0, ApplicationVersion = '03.00.09' WHERE  UPPER(ResourceID) = 'BASELINE_EXPIRED' AND UPPER(LanguageID) = 'POR'
            END 
            GO
            IF NOT EXISTS (SELECT * FROM [tfmwMultiLanguageResources] WHERE (UPPER([ResourceID]) = 'BASELINE_EXPIRED') AND (UPPER([LanguageID]) = 'ROM')) 
            BEGIN 
            INSERT INTO tfmwMultiLanguageResources (ResourceID, LanguageID, ResourceText, OnlyService,CreationDate, CreationUser, ApplicationVersion, Translated,TranslatedDate, TranslatedUser, TS_User, TS_DateTime)  VALUES('BASELINE_EXPIRED', 'ROM', N'Expired Baseline', 0, convert(datetime,'20150701 07:40:29',112) ,  'SA', '03.00.09',  0, NULL, NULL, 'SA', convert(datetime,'20150701 07:40:29',112) ) 
            END 
            ELSE 
            BEGIN 
            UPDATE tfmwMultiLanguageResources SET ResourceText = N'Expired Baseline', OnlyService  = 0, TS_User = 'SA', TS_DateTime  = convert(datetime,'20150701 07:40:29',112) , Translated = 0, ApplicationVersion = '03.00.09' WHERE  UPPER(ResourceID) = 'BASELINE_EXPIRED' AND UPPER(LanguageID) = 'ROM'
            END 
            GO
            IF NOT EXISTS (SELECT * FROM [tfmwMultiLanguageResources] WHERE (UPPER([ResourceID]) = 'BASELINE_EXPIRED') AND (UPPER([LanguageID]) = 'RUS')) 
            BEGIN 
            INSERT INTO tfmwMultiLanguageResources (ResourceID, LanguageID, ResourceText, OnlyService,CreationDate, CreationUser, ApplicationVersion, Translated,TranslatedDate, TranslatedUser, TS_User, TS_DateTime)  VALUES('BASELINE_EXPIRED', 'RUS', N'Expired Baseline', 0, convert(datetime,'20150701 07:40:29',112) ,  'SA', '03.00.09',  0, NULL, NULL, 'SA', convert(datetime,'20150701 07:40:29',112) ) 
            END 
            ELSE 
            BEGIN 
            UPDATE tfmwMultiLanguageResources SET ResourceText = N'Expired Baseline', OnlyService  = 0, TS_User = 'SA', TS_DateTime  = convert(datetime,'20150701 07:40:29',112) , Translated = 0, ApplicationVersion = '03.00.09' WHERE  UPPER(ResourceID) = 'BASELINE_EXPIRED' AND UPPER(LanguageID) = 'RUS'
            END 
            GO
            IF NOT EXISTS (SELECT * FROM [tfmwMultiLanguageResources] WHERE (UPPER([ResourceID]) = 'BASELINE_EXPIRED') AND (UPPER([LanguageID]) = 'SCH')) 
            BEGIN 
            INSERT INTO tfmwMultiLanguageResources (ResourceID, LanguageID, ResourceText, OnlyService,CreationDate, CreationUser, ApplicationVersion, Translated,TranslatedDate, TranslatedUser, TS_User, TS_DateTime)  VALUES('BASELINE_EXPIRED', 'SCH', N'Expired Baseline', 0, convert(datetime,'20150701 07:40:29',112) ,  'SA', '03.00.09',  0, NULL, NULL, 'SA', convert(datetime,'20150701 07:40:29',112) ) 
            END 
            ELSE 
            BEGIN 
            UPDATE tfmwMultiLanguageResources SET ResourceText = N'Expired Baseline', OnlyService  = 0, TS_User = 'SA', TS_DateTime  = convert(datetime,'20150701 07:40:29',112) , Translated = 0, ApplicationVersion = '03.00.09' WHERE  UPPER(ResourceID) = 'BASELINE_EXPIRED' AND UPPER(LanguageID) = 'SCH'
            END 
            GO
            IF NOT EXISTS (SELECT * FROM [tfmwMultiLanguageResources] WHERE (UPPER([ResourceID]) = 'BASELINE_EXPIRED') AND (UPPER([LanguageID]) = 'SER')) 
            BEGIN 
            INSERT INTO tfmwMultiLanguageResources (ResourceID, LanguageID, ResourceText, OnlyService,CreationDate, CreationUser, ApplicationVersion, Translated,TranslatedDate, TranslatedUser, TS_User, TS_DateTime)  VALUES('BASELINE_EXPIRED', 'SER', N'Expired Baseline', 0, convert(datetime,'20150701 07:40:29',112) ,  'SA', '03.00.09',  0, NULL, NULL, 'SA', convert(datetime,'20150701 07:40:29',112) ) 
            END 
            ELSE 
            BEGIN 
            UPDATE tfmwMultiLanguageResources SET ResourceText = N'Expired Baseline', OnlyService  = 0, TS_User = 'SA', TS_DateTime  = convert(datetime,'20150701 07:40:29',112) , Translated = 0, ApplicationVersion = '03.00.09' WHERE  UPPER(ResourceID) = 'BASELINE_EXPIRED' AND UPPER(LanguageID) = 'SER'
            END 
            GO
            IF NOT EXISTS (SELECT * FROM [tfmwMultiLanguageResources] WHERE (UPPER([ResourceID]) = 'BASELINE_EXPIRED') AND (UPPER([LanguageID]) = 'SPA')) 
            BEGIN 
            INSERT INTO tfmwMultiLanguageResources (ResourceID, LanguageID, ResourceText, OnlyService,CreationDate, CreationUser, ApplicationVersion, Translated,TranslatedDate, TranslatedUser, TS_User, TS_DateTime)  VALUES('BASELINE_EXPIRED', 'SPA', N'Expired Baseline', 0, convert(datetime,'20150701 07:40:29',112) ,  'SA', '03.00.09',  0, NULL, NULL, 'SA', convert(datetime,'20150701 07:40:29',112) ) 
            END 
            ELSE 
            BEGIN 
            UPDATE tfmwMultiLanguageResources SET ResourceText = N'Expired Baseline', OnlyService  = 0, TS_User = 'SA', TS_DateTime  = convert(datetime,'20150701 07:40:29',112) , Translated = 0, ApplicationVersion = '03.00.09' WHERE  UPPER(ResourceID) = 'BASELINE_EXPIRED' AND UPPER(LanguageID) = 'SPA'
            END 
            GO
            IF NOT EXISTS (SELECT * FROM [tfmwMultiLanguageResources] WHERE (UPPER([ResourceID]) = 'BASELINE_EXPIRED') AND (UPPER([LanguageID]) = 'TCH')) 
            BEGIN 
            INSERT INTO tfmwMultiLanguageResources (ResourceID, LanguageID, ResourceText, OnlyService,CreationDate, CreationUser, ApplicationVersion, Translated,TranslatedDate, TranslatedUser, TS_User, TS_DateTime)  VALUES('BASELINE_EXPIRED', 'TCH', N'Expired Baseline', 0, convert(datetime,'20150701 07:40:29',112) ,  'SA', '03.00.09',  0, NULL, NULL, 'SA', convert(datetime,'20150701 07:40:29',112) ) 
            END 
            ELSE 
            BEGIN 
            UPDATE tfmwMultiLanguageResources SET ResourceText = N'Expired Baseline', OnlyService  = 0, TS_User = 'SA', TS_DateTime  = convert(datetime,'20150701 07:40:29',112) , Translated = 0, ApplicationVersion = '03.00.09' WHERE  UPPER(ResourceID) = 'BASELINE_EXPIRED' AND UPPER(LanguageID) = 'TCH'
            END 
            GO
            IF NOT EXISTS (SELECT * FROM [tfmwMultiLanguageResources] WHERE (UPPER([ResourceID]) = 'BASELINE_EXPIRED') AND (UPPER([LanguageID]) = 'TUR')) 
            BEGIN 
            INSERT INTO tfmwMultiLanguageResources (ResourceID, LanguageID, ResourceText, OnlyService,CreationDate, CreationUser, ApplicationVersion, Translated,TranslatedDate, TranslatedUser, TS_User, TS_DateTime)  VALUES('BASELINE_EXPIRED', 'TUR', N'Expired Baseline', 0, convert(datetime,'20150701 07:40:29',112) ,  'SA', '03.00.09',  0, NULL, NULL, 'SA', convert(datetime,'20150701 07:40:29',112) ) 
            END 
            ELSE 
            BEGIN 
            UPDATE tfmwMultiLanguageResources SET ResourceText = N'Expired Baseline', OnlyService  = 0, TS_User = 'SA', TS_DateTime  = convert(datetime,'20150701 07:40:29',112) , Translated = 0, ApplicationVersion = '03.00.09' WHERE  UPPER(ResourceID) = 'BASELINE_EXPIRED' AND UPPER(LanguageID) = 'TUR'
            END 
            GO
            IF NOT EXISTS (SELECT * FROM [tfmwMultiLanguageResources] WHERE (UPPER([ResourceID]) = 'BASELINE_EXPIRED') AND (UPPER([LanguageID]) = 'SPA')) 
            BEGIN 
            INSERT INTO tfmwMultiLanguageResources (ResourceID, LanguageID, ResourceText, OnlyService,CreationDate, CreationUser, ApplicationVersion, Translated,TranslatedDate, TranslatedUser, TS_User, TS_DateTime)  VALUES('BASELINE_EXPIRED', 'SPA', N'Linea Base expirada', 0, convert(datetime,'20150701 07:41:14',112) ,  '', '03.00.09',  0, NULL, '', 'SA', convert(datetime,'20150701 07:41:14',112) ) 
            END 
            ELSE 
            BEGIN 
            UPDATE tfmwMultiLanguageResources SET ResourceText = N'Linea Base expirada', OnlyService  = 0, TS_User = 'SA', TS_DateTime  = convert(datetime,'20150701 07:41:14',112) , Translated = 0, TranslatedUser = 'SA', ApplicationVersion = '03.00.09' WHERE  UPPER(ResourceID) = 'BASELINE_EXPIRED' AND UPPER(LanguageID) = 'SPA'
            END 
            GO
            IF NOT EXISTS (SELECT * FROM [tfmwMultiLanguageResources] WHERE (UPPER([ResourceID]) = 'ALM_BASELINE_EXPIRED') AND (UPPER([LanguageID]) = 'ENG')) 
            BEGIN 
            INSERT INTO tfmwMultiLanguageResources (ResourceID, LanguageID, ResourceText, OnlyService,CreationDate, CreationUser, ApplicationVersion, Translated,TranslatedDate, TranslatedUser, TS_User, TS_DateTime)  VALUES('ALM_BASELINE_EXPIRED', 'ENG', N'Baseline is expired', 0, convert(datetime,'20150701 07:42:08',112) ,  'SA', '03.00.09',  0, NULL, NULL, 'SA', convert(datetime,'20150701 07:42:08',112) ) 
            END 
            ELSE 
            BEGIN 
            UPDATE tfmwMultiLanguageResources SET ResourceText = N'Baseline is expired', OnlyService  = 0, TS_User = 'SA', TS_DateTime  = convert(datetime,'20150701 07:42:08',112) , Translated = 0, ApplicationVersion = '03.00.09' WHERE  UPPER(ResourceID) = 'ALM_BASELINE_EXPIRED' AND UPPER(LanguageID) = 'ENG'
            END 
            GO
            IF NOT EXISTS (SELECT * FROM [tfmwMultiLanguageResources] WHERE (UPPER([ResourceID]) = 'ALM_BASELINE_EXPIRED') AND (UPPER([LanguageID]) = 'FRE')) 
            BEGIN 
            INSERT INTO tfmwMultiLanguageResources (ResourceID, LanguageID, ResourceText, OnlyService,CreationDate, CreationUser, ApplicationVersion, Translated,TranslatedDate, TranslatedUser, TS_User, TS_DateTime)  VALUES('ALM_BASELINE_EXPIRED', 'FRE', N'Baseline is expired', 0, convert(datetime,'20150701 07:42:08',112) ,  'SA', '03.00.09',  0, NULL, NULL, 'SA', convert(datetime,'20150701 07:42:08',112) ) 
            END 
            ELSE 
            BEGIN 
            UPDATE tfmwMultiLanguageResources SET ResourceText = N'Baseline is expired', OnlyService  = 0, TS_User = 'SA', TS_DateTime  = convert(datetime,'20150701 07:42:08',112) , Translated = 0, ApplicationVersion = '03.00.09' WHERE  UPPER(ResourceID) = 'ALM_BASELINE_EXPIRED' AND UPPER(LanguageID) = 'FRE'
            END 
            GO
            IF NOT EXISTS (SELECT * FROM [tfmwMultiLanguageResources] WHERE (UPPER([ResourceID]) = 'ALM_BASELINE_EXPIRED') AND (UPPER([LanguageID]) = 'GRE')) 
            BEGIN 
            INSERT INTO tfmwMultiLanguageResources (ResourceID, LanguageID, ResourceText, OnlyService,CreationDate, CreationUser, ApplicationVersion, Translated,TranslatedDate, TranslatedUser, TS_User, TS_DateTime)  VALUES('ALM_BASELINE_EXPIRED', 'GRE', N'Baseline is expired', 0, convert(datetime,'20150701 07:42:08',112) ,  'SA', '03.00.09',  0, NULL, NULL, 'SA', convert(datetime,'20150701 07:42:08',112) ) 
            END 
            ELSE 
            BEGIN 
            UPDATE tfmwMultiLanguageResources SET ResourceText = N'Baseline is expired', OnlyService  = 0, TS_User = 'SA', TS_DateTime  = convert(datetime,'20150701 07:42:08',112) , Translated = 0, ApplicationVersion = '03.00.09' WHERE  UPPER(ResourceID) = 'ALM_BASELINE_EXPIRED' AND UPPER(LanguageID) = 'GRE'
            END 
            GO
            IF NOT EXISTS (SELECT * FROM [tfmwMultiLanguageResources] WHERE (UPPER([ResourceID]) = 'ALM_BASELINE_EXPIRED') AND (UPPER([LanguageID]) = 'HUN')) 
            BEGIN 
            INSERT INTO tfmwMultiLanguageResources (ResourceID, LanguageID, ResourceText, OnlyService,CreationDate, CreationUser, ApplicationVersion, Translated,TranslatedDate, TranslatedUser, TS_User, TS_DateTime)  VALUES('ALM_BASELINE_EXPIRED', 'HUN', N'Baseline is expired', 0, convert(datetime,'20150701 07:42:08',112) ,  'SA', '03.00.09',  0, NULL, NULL, 'SA', convert(datetime,'20150701 07:42:08',112) ) 
            END 
            ELSE 
            BEGIN 
            UPDATE tfmwMultiLanguageResources SET ResourceText = N'Baseline is expired', OnlyService  = 0, TS_User = 'SA', TS_DateTime  = convert(datetime,'20150701 07:42:08',112) , Translated = 0, ApplicationVersion = '03.00.09' WHERE  UPPER(ResourceID) = 'ALM_BASELINE_EXPIRED' AND UPPER(LanguageID) = 'HUN'
            END 
            GO
            IF NOT EXISTS (SELECT * FROM [tfmwMultiLanguageResources] WHERE (UPPER([ResourceID]) = 'ALM_BASELINE_EXPIRED') AND (UPPER([LanguageID]) = 'IND')) 
            BEGIN 
            INSERT INTO tfmwMultiLanguageResources (ResourceID, LanguageID, ResourceText, OnlyService,CreationDate, CreationUser, ApplicationVersion, Translated,TranslatedDate, TranslatedUser, TS_User, TS_DateTime)  VALUES('ALM_BASELINE_EXPIRED', 'IND', N'Baseline is expired', 0, convert(datetime,'20150701 07:42:08',112) ,  'SA', '03.00.09',  0, NULL, NULL, 'SA', convert(datetime,'20150701 07:42:08',112) ) 
            END 
            ELSE 
            BEGIN 
            UPDATE tfmwMultiLanguageResources SET ResourceText = N'Baseline is expired', OnlyService  = 0, TS_User = 'SA', TS_DateTime  = convert(datetime,'20150701 07:42:08',112) , Translated = 0, ApplicationVersion = '03.00.09' WHERE  UPPER(ResourceID) = 'ALM_BASELINE_EXPIRED' AND UPPER(LanguageID) = 'IND'
            END 
            GO
            IF NOT EXISTS (SELECT * FROM [tfmwMultiLanguageResources] WHERE (UPPER([ResourceID]) = 'ALM_BASELINE_EXPIRED') AND (UPPER([LanguageID]) = 'ITA')) 
            BEGIN 
            INSERT INTO tfmwMultiLanguageResources (ResourceID, LanguageID, ResourceText, OnlyService,CreationDate, CreationUser, ApplicationVersion, Translated,TranslatedDate, TranslatedUser, TS_User, TS_DateTime)  VALUES('ALM_BASELINE_EXPIRED', 'ITA', N'Baseline is expired', 0, convert(datetime,'20150701 07:42:08',112) ,  'SA', '03.00.09',  0, NULL, NULL, 'SA', convert(datetime,'20150701 07:42:08',112) ) 
            END 
            ELSE 
            BEGIN 
            UPDATE tfmwMultiLanguageResources SET ResourceText = N'Baseline is expired', OnlyService  = 0, TS_User = 'SA', TS_DateTime  = convert(datetime,'20150701 07:42:08',112) , Translated = 0, ApplicationVersion = '03.00.09' WHERE  UPPER(ResourceID) = 'ALM_BASELINE_EXPIRED' AND UPPER(LanguageID) = 'ITA'
            END 
            GO
            IF NOT EXISTS (SELECT * FROM [tfmwMultiLanguageResources] WHERE (UPPER([ResourceID]) = 'ALM_BASELINE_EXPIRED') AND (UPPER([LanguageID]) = 'KOR')) 
            BEGIN 
            INSERT INTO tfmwMultiLanguageResources (ResourceID, LanguageID, ResourceText, OnlyService,CreationDate, CreationUser, ApplicationVersion, Translated,TranslatedDate, TranslatedUser, TS_User, TS_DateTime)  VALUES('ALM_BASELINE_EXPIRED', 'KOR', N'Baseline is expired', 0, convert(datetime,'20150701 07:42:08',112) ,  'SA', '03.00.09',  0, NULL, NULL, 'SA', convert(datetime,'20150701 07:42:08',112) ) 
            END 
            ELSE 
            BEGIN 
            UPDATE tfmwMultiLanguageResources SET ResourceText = N'Baseline is expired', OnlyService  = 0, TS_User = 'SA', TS_DateTime  = convert(datetime,'20150701 07:42:08',112) , Translated = 0, ApplicationVersion = '03.00.09' WHERE  UPPER(ResourceID) = 'ALM_BASELINE_EXPIRED' AND UPPER(LanguageID) = 'KOR'
            END 
            GO
            IF NOT EXISTS (SELECT * FROM [tfmwMultiLanguageResources] WHERE (UPPER([ResourceID]) = 'ALM_BASELINE_EXPIRED') AND (UPPER([LanguageID]) = 'POL')) 
            BEGIN 
            INSERT INTO tfmwMultiLanguageResources (ResourceID, LanguageID, ResourceText, OnlyService,CreationDate, CreationUser, ApplicationVersion, Translated,TranslatedDate, TranslatedUser, TS_User, TS_DateTime)  VALUES('ALM_BASELINE_EXPIRED', 'POL', N'Baseline is expired', 0, convert(datetime,'20150701 07:42:08',112) ,  'SA', '03.00.09',  0, NULL, NULL, 'SA', convert(datetime,'20150701 07:42:08',112) ) 
            END 
            ELSE 
            BEGIN 
            UPDATE tfmwMultiLanguageResources SET ResourceText = N'Baseline is expired', OnlyService  = 0, TS_User = 'SA', TS_DateTime  = convert(datetime,'20150701 07:42:08',112) , Translated = 0, ApplicationVersion = '03.00.09' WHERE  UPPER(ResourceID) = 'ALM_BASELINE_EXPIRED' AND UPPER(LanguageID) = 'POL'
            END 
            GO
            IF NOT EXISTS (SELECT * FROM [tfmwMultiLanguageResources] WHERE (UPPER([ResourceID]) = 'ALM_BASELINE_EXPIRED') AND (UPPER([LanguageID]) = 'POR')) 
            BEGIN 
            INSERT INTO tfmwMultiLanguageResources (ResourceID, LanguageID, ResourceText, OnlyService,CreationDate, CreationUser, ApplicationVersion, Translated,TranslatedDate, TranslatedUser, TS_User, TS_DateTime)  VALUES('ALM_BASELINE_EXPIRED', 'POR', N'Baseline is expired', 0, convert(datetime,'20150701 07:42:08',112) ,  'SA', '03.00.09',  0, NULL, NULL, 'SA', convert(datetime,'20150701 07:42:08',112) ) 
            END 
            ELSE 
            BEGIN 
            UPDATE tfmwMultiLanguageResources SET ResourceText = N'Baseline is expired', OnlyService  = 0, TS_User = 'SA', TS_DateTime  = convert(datetime,'20150701 07:42:08',112) , Translated = 0, ApplicationVersion = '03.00.09' WHERE  UPPER(ResourceID) = 'ALM_BASELINE_EXPIRED' AND UPPER(LanguageID) = 'POR'
            END 
            GO
            IF NOT EXISTS (SELECT * FROM [tfmwMultiLanguageResources] WHERE (UPPER([ResourceID]) = 'ALM_BASELINE_EXPIRED') AND (UPPER([LanguageID]) = 'ROM')) 
            BEGIN 
            INSERT INTO tfmwMultiLanguageResources (ResourceID, LanguageID, ResourceText, OnlyService,CreationDate, CreationUser, ApplicationVersion, Translated,TranslatedDate, TranslatedUser, TS_User, TS_DateTime)  VALUES('ALM_BASELINE_EXPIRED', 'ROM', N'Baseline is expired', 0, convert(datetime,'20150701 07:42:08',112) ,  'SA', '03.00.09',  0, NULL, NULL, 'SA', convert(datetime,'20150701 07:42:08',112) ) 
            END 
            ELSE 
            BEGIN 
            UPDATE tfmwMultiLanguageResources SET ResourceText = N'Baseline is expired', OnlyService  = 0, TS_User = 'SA', TS_DateTime  = convert(datetime,'20150701 07:42:08',112) , Translated = 0, ApplicationVersion = '03.00.09' WHERE  UPPER(ResourceID) = 'ALM_BASELINE_EXPIRED' AND UPPER(LanguageID) = 'ROM'
            END 
            GO
            IF NOT EXISTS (SELECT * FROM [tfmwMultiLanguageResources] WHERE (UPPER([ResourceID]) = 'ALM_BASELINE_EXPIRED') AND (UPPER([LanguageID]) = 'RUS')) 
            BEGIN 
            INSERT INTO tfmwMultiLanguageResources (ResourceID, LanguageID, ResourceText, OnlyService,CreationDate, CreationUser, ApplicationVersion, Translated,TranslatedDate, TranslatedUser, TS_User, TS_DateTime)  VALUES('ALM_BASELINE_EXPIRED', 'RUS', N'Baseline is expired', 0, convert(datetime,'20150701 07:42:08',112) ,  'SA', '03.00.09',  0, NULL, NULL, 'SA', convert(datetime,'20150701 07:42:08',112) ) 
            END 
            ELSE 
            BEGIN 
            UPDATE tfmwMultiLanguageResources SET ResourceText = N'Baseline is expired', OnlyService  = 0, TS_User = 'SA', TS_DateTime  = convert(datetime,'20150701 07:42:08',112) , Translated = 0, ApplicationVersion = '03.00.09' WHERE  UPPER(ResourceID) = 'ALM_BASELINE_EXPIRED' AND UPPER(LanguageID) = 'RUS'
            END 
            GO
            IF NOT EXISTS (SELECT * FROM [tfmwMultiLanguageResources] WHERE (UPPER([ResourceID]) = 'ALM_BASELINE_EXPIRED') AND (UPPER([LanguageID]) = 'SCH')) 
            BEGIN 
            INSERT INTO tfmwMultiLanguageResources (ResourceID, LanguageID, ResourceText, OnlyService,CreationDate, CreationUser, ApplicationVersion, Translated,TranslatedDate, TranslatedUser, TS_User, TS_DateTime)  VALUES('ALM_BASELINE_EXPIRED', 'SCH', N'Baseline is expired', 0, convert(datetime,'20150701 07:42:08',112) ,  'SA', '03.00.09',  0, NULL, NULL, 'SA', convert(datetime,'20150701 07:42:08',112) ) 
            END 
            ELSE 
            BEGIN 
            UPDATE tfmwMultiLanguageResources SET ResourceText = N'Baseline is expired', OnlyService  = 0, TS_User = 'SA', TS_DateTime  = convert(datetime,'20150701 07:42:08',112) , Translated = 0, ApplicationVersion = '03.00.09' WHERE  UPPER(ResourceID) = 'ALM_BASELINE_EXPIRED' AND UPPER(LanguageID) = 'SCH'
            END 
            GO
            IF NOT EXISTS (SELECT * FROM [tfmwMultiLanguageResources] WHERE (UPPER([ResourceID]) = 'ALM_BASELINE_EXPIRED') AND (UPPER([LanguageID]) = 'SER')) 
            BEGIN 
            INSERT INTO tfmwMultiLanguageResources (ResourceID, LanguageID, ResourceText, OnlyService,CreationDate, CreationUser, ApplicationVersion, Translated,TranslatedDate, TranslatedUser, TS_User, TS_DateTime)  VALUES('ALM_BASELINE_EXPIRED', 'SER', N'Baseline is expired', 0, convert(datetime,'20150701 07:42:08',112) ,  'SA', '03.00.09',  0, NULL, NULL, 'SA', convert(datetime,'20150701 07:42:08',112) ) 
            END 
            ELSE 
            BEGIN 
            UPDATE tfmwMultiLanguageResources SET ResourceText = N'Baseline is expired', OnlyService  = 0, TS_User = 'SA', TS_DateTime  = convert(datetime,'20150701 07:42:08',112) , Translated = 0, ApplicationVersion = '03.00.09' WHERE  UPPER(ResourceID) = 'ALM_BASELINE_EXPIRED' AND UPPER(LanguageID) = 'SER'
            END 
            GO
            IF NOT EXISTS (SELECT * FROM [tfmwMultiLanguageResources] WHERE (UPPER([ResourceID]) = 'ALM_BASELINE_EXPIRED') AND (UPPER([LanguageID]) = 'SPA')) 
            BEGIN 
            INSERT INTO tfmwMultiLanguageResources (ResourceID, LanguageID, ResourceText, OnlyService,CreationDate, CreationUser, ApplicationVersion, Translated,TranslatedDate, TranslatedUser, TS_User, TS_DateTime)  VALUES('ALM_BASELINE_EXPIRED', 'SPA', N'Baseline is expired', 0, convert(datetime,'20150701 07:42:08',112) ,  'SA', '03.00.09',  0, NULL, NULL, 'SA', convert(datetime,'20150701 07:42:08',112) ) 
            END 
            ELSE 
            BEGIN 
            UPDATE tfmwMultiLanguageResources SET ResourceText = N'Baseline is expired', OnlyService  = 0, TS_User = 'SA', TS_DateTime  = convert(datetime,'20150701 07:42:08',112) , Translated = 0, ApplicationVersion = '03.00.09' WHERE  UPPER(ResourceID) = 'ALM_BASELINE_EXPIRED' AND UPPER(LanguageID) = 'SPA'
            END 
            GO
            IF NOT EXISTS (SELECT * FROM [tfmwMultiLanguageResources] WHERE (UPPER([ResourceID]) = 'ALM_BASELINE_EXPIRED') AND (UPPER([LanguageID]) = 'TCH')) 
            BEGIN 
            INSERT INTO tfmwMultiLanguageResources (ResourceID, LanguageID, ResourceText, OnlyService,CreationDate, CreationUser, ApplicationVersion, Translated,TranslatedDate, TranslatedUser, TS_User, TS_DateTime)  VALUES('ALM_BASELINE_EXPIRED', 'TCH', N'Baseline is expired', 0, convert(datetime,'20150701 07:42:08',112) ,  'SA', '03.00.09',  0, NULL, NULL, 'SA', convert(datetime,'20150701 07:42:08',112) ) 
            END 
            ELSE 
            BEGIN 
            UPDATE tfmwMultiLanguageResources SET ResourceText = N'Baseline is expired', OnlyService  = 0, TS_User = 'SA', TS_DateTime  = convert(datetime,'20150701 07:42:08',112) , Translated = 0, ApplicationVersion = '03.00.09' WHERE  UPPER(ResourceID) = 'ALM_BASELINE_EXPIRED' AND UPPER(LanguageID) = 'TCH'
            END 
            GO
            IF NOT EXISTS (SELECT * FROM [tfmwMultiLanguageResources] WHERE (UPPER([ResourceID]) = 'ALM_BASELINE_EXPIRED') AND (UPPER([LanguageID]) = 'TUR')) 
            BEGIN 
            INSERT INTO tfmwMultiLanguageResources (ResourceID, LanguageID, ResourceText, OnlyService,CreationDate, CreationUser, ApplicationVersion, Translated,TranslatedDate, TranslatedUser, TS_User, TS_DateTime)  VALUES('ALM_BASELINE_EXPIRED', 'TUR', N'Baseline is expired', 0, convert(datetime,'20150701 07:42:08',112) ,  'SA', '03.00.09',  0, NULL, NULL, 'SA', convert(datetime,'20150701 07:42:08',112) ) 
            END 
            ELSE 
            BEGIN 
            UPDATE tfmwMultiLanguageResources SET ResourceText = N'Baseline is expired', OnlyService  = 0, TS_User = 'SA', TS_DateTime  = convert(datetime,'20150701 07:42:08',112) , Translated = 0, ApplicationVersion = '03.00.09' WHERE  UPPER(ResourceID) = 'ALM_BASELINE_EXPIRED' AND UPPER(LanguageID) = 'TUR'
            END 
            GO
            IF NOT EXISTS (SELECT * FROM [tfmwMultiLanguageResources] WHERE (UPPER([ResourceID]) = 'ALM_BASELINE_EXPIRED') AND (UPPER([LanguageID]) = 'SPA')) 
            BEGIN 
            INSERT INTO tfmwMultiLanguageResources (ResourceID, LanguageID, ResourceText, OnlyService,CreationDate, CreationUser, ApplicationVersion, Translated,TranslatedDate, TranslatedUser, TS_User, TS_DateTime)  VALUES('ALM_BASELINE_EXPIRED', 'SPA', N'Linea Base ha expirado', 0, convert(datetime,'20150701 07:42:40',112) ,  '', '03.00.09',  0, NULL, '', 'SA', convert(datetime,'20150701 07:42:40',112) ) 
            END 
            ELSE 
            BEGIN 
            UPDATE tfmwMultiLanguageResources SET ResourceText = N'Linea Base ha expirado', OnlyService  = 0, TS_User = 'SA', TS_DateTime  = convert(datetime,'20150701 07:42:40',112) , Translated = 0, TranslatedUser = 'SA', ApplicationVersion = '03.00.09' WHERE  UPPER(ResourceID) = 'ALM_BASELINE_EXPIRED' AND UPPER(LanguageID) = 'SPA'
            END 
            GO
            IF NOT EXISTS (SELECT * FROM [tfmwMultiLanguageResources] WHERE (UPPER([ResourceID]) = 'SOL_BASELINE_EXPIRED') AND (UPPER([LanguageID]) = 'ENG')) 
            BEGIN 
            INSERT INTO tfmwMultiLanguageResources (ResourceID, LanguageID, ResourceText, OnlyService,CreationDate, CreationUser, ApplicationVersion, Translated,TranslatedDate, TranslatedUser, TS_User, TS_DateTime)  VALUES('SOL_BASELINE_EXPIRED', 'ENG', N'Baseline will be repeated automatically before next start or continue workession or during next start of analyzer', 0, convert(datetime,'20150701 07:43:36',112) ,  'SA', '03.00.09',  0, NULL, NULL, 'SA', convert(datetime,'20150701 07:43:36',112) ) 
            END 
            ELSE 
            BEGIN 
            UPDATE tfmwMultiLanguageResources SET ResourceText = N'Baseline will be repeated automatically before next start or continue workession or during next start of analyzer', OnlyService  = 0, TS_User = 'SA', TS_DateTime  = convert(datetime,'20150701 07:43:36',112) , Translated = 0, ApplicationVersion = '03.00.09' WHERE  UPPER(ResourceID) = 'SOL_BASELINE_EXPIRED' AND UPPER(LanguageID) = 'ENG'
            END 
            GO
            IF NOT EXISTS (SELECT * FROM [tfmwMultiLanguageResources] WHERE (UPPER([ResourceID]) = 'SOL_BASELINE_EXPIRED') AND (UPPER([LanguageID]) = 'FRE')) 
            BEGIN 
            INSERT INTO tfmwMultiLanguageResources (ResourceID, LanguageID, ResourceText, OnlyService,CreationDate, CreationUser, ApplicationVersion, Translated,TranslatedDate, TranslatedUser, TS_User, TS_DateTime)  VALUES('SOL_BASELINE_EXPIRED', 'FRE', N'Baseline will be repeated automatically before next start or continue workession or during next start of analyzer', 0, convert(datetime,'20150701 07:43:36',112) ,  'SA', '03.00.09',  0, NULL, NULL, 'SA', convert(datetime,'20150701 07:43:36',112) ) 
            END 
            ELSE 
            BEGIN 
            UPDATE tfmwMultiLanguageResources SET ResourceText = N'Baseline will be repeated automatically before next start or continue workession or during next start of analyzer', OnlyService  = 0, TS_User = 'SA', TS_DateTime  = convert(datetime,'20150701 07:43:36',112) , Translated = 0, ApplicationVersion = '03.00.09' WHERE  UPPER(ResourceID) = 'SOL_BASELINE_EXPIRED' AND UPPER(LanguageID) = 'FRE'
            END 
            GO
            IF NOT EXISTS (SELECT * FROM [tfmwMultiLanguageResources] WHERE (UPPER([ResourceID]) = 'SOL_BASELINE_EXPIRED') AND (UPPER([LanguageID]) = 'GRE')) 
            BEGIN 
            INSERT INTO tfmwMultiLanguageResources (ResourceID, LanguageID, ResourceText, OnlyService,CreationDate, CreationUser, ApplicationVersion, Translated,TranslatedDate, TranslatedUser, TS_User, TS_DateTime)  VALUES('SOL_BASELINE_EXPIRED', 'GRE', N'Baseline will be repeated automatically before next start or continue workession or during next start of analyzer', 0, convert(datetime,'20150701 07:43:36',112) ,  'SA', '03.00.09',  0, NULL, NULL, 'SA', convert(datetime,'20150701 07:43:36',112) ) 
            END 
            ELSE 
            BEGIN 
            UPDATE tfmwMultiLanguageResources SET ResourceText = N'Baseline will be repeated automatically before next start or continue workession or during next start of analyzer', OnlyService  = 0, TS_User = 'SA', TS_DateTime  = convert(datetime,'20150701 07:43:36',112) , Translated = 0, ApplicationVersion = '03.00.09' WHERE  UPPER(ResourceID) = 'SOL_BASELINE_EXPIRED' AND UPPER(LanguageID) = 'GRE'
            END 
            GO
            IF NOT EXISTS (SELECT * FROM [tfmwMultiLanguageResources] WHERE (UPPER([ResourceID]) = 'SOL_BASELINE_EXPIRED') AND (UPPER([LanguageID]) = 'HUN')) 
            BEGIN 
            INSERT INTO tfmwMultiLanguageResources (ResourceID, LanguageID, ResourceText, OnlyService,CreationDate, CreationUser, ApplicationVersion, Translated,TranslatedDate, TranslatedUser, TS_User, TS_DateTime)  VALUES('SOL_BASELINE_EXPIRED', 'HUN', N'Baseline will be repeated automatically before next start or continue workession or during next start of analyzer', 0, convert(datetime,'20150701 07:43:36',112) ,  'SA', '03.00.09',  0, NULL, NULL, 'SA', convert(datetime,'20150701 07:43:36',112) ) 
            END 
            ELSE 
            BEGIN 
            UPDATE tfmwMultiLanguageResources SET ResourceText = N'Baseline will be repeated automatically before next start or continue workession or during next start of analyzer', OnlyService  = 0, TS_User = 'SA', TS_DateTime  = convert(datetime,'20150701 07:43:36',112) , Translated = 0, ApplicationVersion = '03.00.09' WHERE  UPPER(ResourceID) = 'SOL_BASELINE_EXPIRED' AND UPPER(LanguageID) = 'HUN'
            END 
            GO
            IF NOT EXISTS (SELECT * FROM [tfmwMultiLanguageResources] WHERE (UPPER([ResourceID]) = 'SOL_BASELINE_EXPIRED') AND (UPPER([LanguageID]) = 'IND')) 
            BEGIN 
            INSERT INTO tfmwMultiLanguageResources (ResourceID, LanguageID, ResourceText, OnlyService,CreationDate, CreationUser, ApplicationVersion, Translated,TranslatedDate, TranslatedUser, TS_User, TS_DateTime)  VALUES('SOL_BASELINE_EXPIRED', 'IND', N'Baseline will be repeated automatically before next start or continue workession or during next start of analyzer', 0, convert(datetime,'20150701 07:43:36',112) ,  'SA', '03.00.09',  0, NULL, NULL, 'SA', convert(datetime,'20150701 07:43:36',112) ) 
            END 
            ELSE 
            BEGIN 
            UPDATE tfmwMultiLanguageResources SET ResourceText = N'Baseline will be repeated automatically before next start or continue workession or during next start of analyzer', OnlyService  = 0, TS_User = 'SA', TS_DateTime  = convert(datetime,'20150701 07:43:36',112) , Translated = 0, ApplicationVersion = '03.00.09' WHERE  UPPER(ResourceID) = 'SOL_BASELINE_EXPIRED' AND UPPER(LanguageID) = 'IND'
            END 
            GO
            IF NOT EXISTS (SELECT * FROM [tfmwMultiLanguageResources] WHERE (UPPER([ResourceID]) = 'SOL_BASELINE_EXPIRED') AND (UPPER([LanguageID]) = 'ITA')) 
            BEGIN 
            INSERT INTO tfmwMultiLanguageResources (ResourceID, LanguageID, ResourceText, OnlyService,CreationDate, CreationUser, ApplicationVersion, Translated,TranslatedDate, TranslatedUser, TS_User, TS_DateTime)  VALUES('SOL_BASELINE_EXPIRED', 'ITA', N'Baseline will be repeated automatically before next start or continue workession or during next start of analyzer', 0, convert(datetime,'20150701 07:43:36',112) ,  'SA', '03.00.09',  0, NULL, NULL, 'SA', convert(datetime,'20150701 07:43:36',112) ) 
            END 
            ELSE 
            BEGIN 
            UPDATE tfmwMultiLanguageResources SET ResourceText = N'Baseline will be repeated automatically before next start or continue workession or during next start of analyzer', OnlyService  = 0, TS_User = 'SA', TS_DateTime  = convert(datetime,'20150701 07:43:36',112) , Translated = 0, ApplicationVersion = '03.00.09' WHERE  UPPER(ResourceID) = 'SOL_BASELINE_EXPIRED' AND UPPER(LanguageID) = 'ITA'
            END 
            GO
            IF NOT EXISTS (SELECT * FROM [tfmwMultiLanguageResources] WHERE (UPPER([ResourceID]) = 'SOL_BASELINE_EXPIRED') AND (UPPER([LanguageID]) = 'KOR')) 
            BEGIN 
            INSERT INTO tfmwMultiLanguageResources (ResourceID, LanguageID, ResourceText, OnlyService,CreationDate, CreationUser, ApplicationVersion, Translated,TranslatedDate, TranslatedUser, TS_User, TS_DateTime)  VALUES('SOL_BASELINE_EXPIRED', 'KOR', N'Baseline will be repeated automatically before next start or continue workession or during next start of analyzer', 0, convert(datetime,'20150701 07:43:36',112) ,  'SA', '03.00.09',  0, NULL, NULL, 'SA', convert(datetime,'20150701 07:43:36',112) ) 
            END 
            ELSE 
            BEGIN 
            UPDATE tfmwMultiLanguageResources SET ResourceText = N'Baseline will be repeated automatically before next start or continue workession or during next start of analyzer', OnlyService  = 0, TS_User = 'SA', TS_DateTime  = convert(datetime,'20150701 07:43:36',112) , Translated = 0, ApplicationVersion = '03.00.09' WHERE  UPPER(ResourceID) = 'SOL_BASELINE_EXPIRED' AND UPPER(LanguageID) = 'KOR'
            END 
            GO
            IF NOT EXISTS (SELECT * FROM [tfmwMultiLanguageResources] WHERE (UPPER([ResourceID]) = 'SOL_BASELINE_EXPIRED') AND (UPPER([LanguageID]) = 'POL')) 
            BEGIN 
            INSERT INTO tfmwMultiLanguageResources (ResourceID, LanguageID, ResourceText, OnlyService,CreationDate, CreationUser, ApplicationVersion, Translated,TranslatedDate, TranslatedUser, TS_User, TS_DateTime)  VALUES('SOL_BASELINE_EXPIRED', 'POL', N'Baseline will be repeated automatically before next start or continue workession or during next start of analyzer', 0, convert(datetime,'20150701 07:43:36',112) ,  'SA', '03.00.09',  0, NULL, NULL, 'SA', convert(datetime,'20150701 07:43:36',112) ) 
            END 
            ELSE 
            BEGIN 
            UPDATE tfmwMultiLanguageResources SET ResourceText = N'Baseline will be repeated automatically before next start or continue workession or during next start of analyzer', OnlyService  = 0, TS_User = 'SA', TS_DateTime  = convert(datetime,'20150701 07:43:36',112) , Translated = 0, ApplicationVersion = '03.00.09' WHERE  UPPER(ResourceID) = 'SOL_BASELINE_EXPIRED' AND UPPER(LanguageID) = 'POL'
            END 
            GO
            IF NOT EXISTS (SELECT * FROM [tfmwMultiLanguageResources] WHERE (UPPER([ResourceID]) = 'SOL_BASELINE_EXPIRED') AND (UPPER([LanguageID]) = 'POR')) 
            BEGIN 
            INSERT INTO tfmwMultiLanguageResources (ResourceID, LanguageID, ResourceText, OnlyService,CreationDate, CreationUser, ApplicationVersion, Translated,TranslatedDate, TranslatedUser, TS_User, TS_DateTime)  VALUES('SOL_BASELINE_EXPIRED', 'POR', N'Baseline will be repeated automatically before next start or continue workession or during next start of analyzer', 0, convert(datetime,'20150701 07:43:36',112) ,  'SA', '03.00.09',  0, NULL, NULL, 'SA', convert(datetime,'20150701 07:43:36',112) ) 
            END 
            ELSE 
            BEGIN 
            UPDATE tfmwMultiLanguageResources SET ResourceText = N'Baseline will be repeated automatically before next start or continue workession or during next start of analyzer', OnlyService  = 0, TS_User = 'SA', TS_DateTime  = convert(datetime,'20150701 07:43:36',112) , Translated = 0, ApplicationVersion = '03.00.09' WHERE  UPPER(ResourceID) = 'SOL_BASELINE_EXPIRED' AND UPPER(LanguageID) = 'POR'
            END 
            GO
            IF NOT EXISTS (SELECT * FROM [tfmwMultiLanguageResources] WHERE (UPPER([ResourceID]) = 'SOL_BASELINE_EXPIRED') AND (UPPER([LanguageID]) = 'ROM')) 
            BEGIN 
            INSERT INTO tfmwMultiLanguageResources (ResourceID, LanguageID, ResourceText, OnlyService,CreationDate, CreationUser, ApplicationVersion, Translated,TranslatedDate, TranslatedUser, TS_User, TS_DateTime)  VALUES('SOL_BASELINE_EXPIRED', 'ROM', N'Baseline will be repeated automatically before next start or continue workession or during next start of analyzer', 0, convert(datetime,'20150701 07:43:36',112) ,  'SA', '03.00.09',  0, NULL, NULL, 'SA', convert(datetime,'20150701 07:43:36',112) ) 
            END 
            ELSE 
            BEGIN 
            UPDATE tfmwMultiLanguageResources SET ResourceText = N'Baseline will be repeated automatically before next start or continue workession or during next start of analyzer', OnlyService  = 0, TS_User = 'SA', TS_DateTime  = convert(datetime,'20150701 07:43:36',112) , Translated = 0, ApplicationVersion = '03.00.09' WHERE  UPPER(ResourceID) = 'SOL_BASELINE_EXPIRED' AND UPPER(LanguageID) = 'ROM'
            END 
            GO
            IF NOT EXISTS (SELECT * FROM [tfmwMultiLanguageResources] WHERE (UPPER([ResourceID]) = 'SOL_BASELINE_EXPIRED') AND (UPPER([LanguageID]) = 'RUS')) 
            BEGIN 
            INSERT INTO tfmwMultiLanguageResources (ResourceID, LanguageID, ResourceText, OnlyService,CreationDate, CreationUser, ApplicationVersion, Translated,TranslatedDate, TranslatedUser, TS_User, TS_DateTime)  VALUES('SOL_BASELINE_EXPIRED', 'RUS', N'Baseline will be repeated automatically before next start or continue workession or during next start of analyzer', 0, convert(datetime,'20150701 07:43:36',112) ,  'SA', '03.00.09',  0, NULL, NULL, 'SA', convert(datetime,'20150701 07:43:36',112) ) 
            END 
            ELSE 
            BEGIN 
            UPDATE tfmwMultiLanguageResources SET ResourceText = N'Baseline will be repeated automatically before next start or continue workession or during next start of analyzer', OnlyService  = 0, TS_User = 'SA', TS_DateTime  = convert(datetime,'20150701 07:43:36',112) , Translated = 0, ApplicationVersion = '03.00.09' WHERE  UPPER(ResourceID) = 'SOL_BASELINE_EXPIRED' AND UPPER(LanguageID) = 'RUS'
            END 
            GO
            IF NOT EXISTS (SELECT * FROM [tfmwMultiLanguageResources] WHERE (UPPER([ResourceID]) = 'SOL_BASELINE_EXPIRED') AND (UPPER([LanguageID]) = 'SCH')) 
            BEGIN 
            INSERT INTO tfmwMultiLanguageResources (ResourceID, LanguageID, ResourceText, OnlyService,CreationDate, CreationUser, ApplicationVersion, Translated,TranslatedDate, TranslatedUser, TS_User, TS_DateTime)  VALUES('SOL_BASELINE_EXPIRED', 'SCH', N'Baseline will be repeated automatically before next start or continue workession or during next start of analyzer', 0, convert(datetime,'20150701 07:43:36',112) ,  'SA', '03.00.09',  0, NULL, NULL, 'SA', convert(datetime,'20150701 07:43:36',112) ) 
            END 
            ELSE 
            BEGIN 
            UPDATE tfmwMultiLanguageResources SET ResourceText = N'Baseline will be repeated automatically before next start or continue workession or during next start of analyzer', OnlyService  = 0, TS_User = 'SA', TS_DateTime  = convert(datetime,'20150701 07:43:36',112) , Translated = 0, ApplicationVersion = '03.00.09' WHERE  UPPER(ResourceID) = 'SOL_BASELINE_EXPIRED' AND UPPER(LanguageID) = 'SCH'
            END 
            GO
            IF NOT EXISTS (SELECT * FROM [tfmwMultiLanguageResources] WHERE (UPPER([ResourceID]) = 'SOL_BASELINE_EXPIRED') AND (UPPER([LanguageID]) = 'SER')) 
            BEGIN 
            INSERT INTO tfmwMultiLanguageResources (ResourceID, LanguageID, ResourceText, OnlyService,CreationDate, CreationUser, ApplicationVersion, Translated,TranslatedDate, TranslatedUser, TS_User, TS_DateTime)  VALUES('SOL_BASELINE_EXPIRED', 'SER', N'Baseline will be repeated automatically before next start or continue workession or during next start of analyzer', 0, convert(datetime,'20150701 07:43:36',112) ,  'SA', '03.00.09',  0, NULL, NULL, 'SA', convert(datetime,'20150701 07:43:36',112) ) 
            END 
            ELSE 
            BEGIN 
            UPDATE tfmwMultiLanguageResources SET ResourceText = N'Baseline will be repeated automatically before next start or continue workession or during next start of analyzer', OnlyService  = 0, TS_User = 'SA', TS_DateTime  = convert(datetime,'20150701 07:43:36',112) , Translated = 0, ApplicationVersion = '03.00.09' WHERE  UPPER(ResourceID) = 'SOL_BASELINE_EXPIRED' AND UPPER(LanguageID) = 'SER'
            END 
            GO
            IF NOT EXISTS (SELECT * FROM [tfmwMultiLanguageResources] WHERE (UPPER([ResourceID]) = 'SOL_BASELINE_EXPIRED') AND (UPPER([LanguageID]) = 'SPA')) 
            BEGIN 
            INSERT INTO tfmwMultiLanguageResources (ResourceID, LanguageID, ResourceText, OnlyService,CreationDate, CreationUser, ApplicationVersion, Translated,TranslatedDate, TranslatedUser, TS_User, TS_DateTime)  VALUES('SOL_BASELINE_EXPIRED', 'SPA', N'Baseline will be repeated automatically before next start or continue workession or during next start of analyzer', 0, convert(datetime,'20150701 07:43:36',112) ,  'SA', '03.00.09',  0, NULL, NULL, 'SA', convert(datetime,'20150701 07:43:36',112) ) 
            END 
            ELSE 
            BEGIN 
            UPDATE tfmwMultiLanguageResources SET ResourceText = N'Baseline will be repeated automatically before next start or continue workession or during next start of analyzer', OnlyService  = 0, TS_User = 'SA', TS_DateTime  = convert(datetime,'20150701 07:43:36',112) , Translated = 0, ApplicationVersion = '03.00.09' WHERE  UPPER(ResourceID) = 'SOL_BASELINE_EXPIRED' AND UPPER(LanguageID) = 'SPA'
            END 
            GO
            IF NOT EXISTS (SELECT * FROM [tfmwMultiLanguageResources] WHERE (UPPER([ResourceID]) = 'SOL_BASELINE_EXPIRED') AND (UPPER([LanguageID]) = 'TCH')) 
            BEGIN 
            INSERT INTO tfmwMultiLanguageResources (ResourceID, LanguageID, ResourceText, OnlyService,CreationDate, CreationUser, ApplicationVersion, Translated,TranslatedDate, TranslatedUser, TS_User, TS_DateTime)  VALUES('SOL_BASELINE_EXPIRED', 'TCH', N'Baseline will be repeated automatically before next start or continue workession or during next start of analyzer', 0, convert(datetime,'20150701 07:43:36',112) ,  'SA', '03.00.09',  0, NULL, NULL, 'SA', convert(datetime,'20150701 07:43:36',112) ) 
            END 
            ELSE 
            BEGIN 
            UPDATE tfmwMultiLanguageResources SET ResourceText = N'Baseline will be repeated automatically before next start or continue workession or during next start of analyzer', OnlyService  = 0, TS_User = 'SA', TS_DateTime  = convert(datetime,'20150701 07:43:36',112) , Translated = 0, ApplicationVersion = '03.00.09' WHERE  UPPER(ResourceID) = 'SOL_BASELINE_EXPIRED' AND UPPER(LanguageID) = 'TCH'
            END 
            GO
            IF NOT EXISTS (SELECT * FROM [tfmwMultiLanguageResources] WHERE (UPPER([ResourceID]) = 'SOL_BASELINE_EXPIRED') AND (UPPER([LanguageID]) = 'TUR')) 
            BEGIN 
            INSERT INTO tfmwMultiLanguageResources (ResourceID, LanguageID, ResourceText, OnlyService,CreationDate, CreationUser, ApplicationVersion, Translated,TranslatedDate, TranslatedUser, TS_User, TS_DateTime)  VALUES('SOL_BASELINE_EXPIRED', 'TUR', N'Baseline will be repeated automatically before next start or continue workession or during next start of analyzer', 0, convert(datetime,'20150701 07:43:36',112) ,  'SA', '03.00.09',  0, NULL, NULL, 'SA', convert(datetime,'20150701 07:43:36',112) ) 
            END 
            ELSE 
            BEGIN 
            UPDATE tfmwMultiLanguageResources SET ResourceText = N'Baseline will be repeated automatically before next start or continue workession or during next start of analyzer', OnlyService  = 0, TS_User = 'SA', TS_DateTime  = convert(datetime,'20150701 07:43:36',112) , Translated = 0, ApplicationVersion = '03.00.09' WHERE  UPPER(ResourceID) = 'SOL_BASELINE_EXPIRED' AND UPPER(LanguageID) = 'TUR'
            END 
            GO
            IF NOT EXISTS (SELECT * FROM [tfmwMultiLanguageResources] WHERE (UPPER([ResourceID]) = 'SOL_BASELINE_EXPIRED') AND (UPPER([LanguageID]) = 'SPA')) 
            BEGIN 
            INSERT INTO tfmwMultiLanguageResources (ResourceID, LanguageID, ResourceText, OnlyService,CreationDate, CreationUser, ApplicationVersion, Translated,TranslatedDate, TranslatedUser, TS_User, TS_DateTime)  VALUES('SOL_BASELINE_EXPIRED', 'SPA', N'La Línea Base se repetirá automáticamente antes de iniciar o continuar el próximo workession o durante el próximo inicio del analizador', 0, convert(datetime,'20150701 07:44:08',112) ,  '', '03.00.09',  0, NULL, '', 'SA', convert(datetime,'20150701 07:44:08',112) ) 
            END 
            ELSE 
            BEGIN 
            UPDATE tfmwMultiLanguageResources SET ResourceText = N'La Línea Base se repetirá automáticamente antes de iniciar o continuar el próximo workession o durante el próximo inicio del analizador', OnlyService  = 0, TS_User = 'SA', TS_DateTime  = convert(datetime,'20150701 07:44:08',112) , Translated = 0, TranslatedUser = 'SA', ApplicationVersion = '03.00.09' WHERE  UPPER(ResourceID) = 'SOL_BASELINE_EXPIRED' AND UPPER(LanguageID) = 'SPA'
            END 
            GO

            INSERT INTO tfmwAlarms (AlarmID, AlarmSource, AlarmType, Name, NameResourceID, Description, DescResourceID, Solution, SolResourceID, 
            Sound, OnRunningSound, Freeze, OKType, LISValue)
            VALUES('BASELINE_EXPIRED', 'VAL', 'WARNING','Expired Baseline','BASELINE_EXPIRED','Baseline is expired', 'ALM_BASELINE_EXPIRED', 
            'Baseline will be repeated automatically before next start or continue workession or during next start of analyzer', 'SOL_BASELINE_EXPIRED',
            0, 0, NULL, 0, NULL)
            GO
            
          </DataScript>
          <IntegrityScript>
            IF ((SELECT COUNT(*) FROM tfmwSWParameters WHERE ParameterName = 'BL_LIFETIME') = 1)
            AND
            ((SELECT COUNT(*) FROM tcfgAnalyzerSettings WHERE SettingID = 'BL_DATETIME') = 1)
            Select 'True'
            ELSE
            Select 'False'
          </IntegrityScript>
        </DataRevision>
        <DataRevision JiraID="BA-2659" SequenceNumber="2">
          <PrerequisiteScript>
            IF
            ((SELECT COUNT(1) FROM [A200].[dbo].[srv_tfmwAdjustments]
            WHERE CodeFw IN ('R2RV','R2H','R2V','R2SV','R2WH','R2WVR','R2DH','R2PH1','R2PH2','R2PV1','R2PV2','R2PI','M1RV','M1H','M1V','M1SV','M1WH','M1WVR','M1DH1','M1DV1','M1PH3','M1PV3p','M1PV3t','A2RV','A2H','A2V','A2SV','A2WH','A2WVR','A2DH','A2DV','RR2P1','RR2P2','RM1P3','GTR2','GTOR2','DR2S','SCOV')) > 0)
            AND
            ((SELECT COUNT(1) FROM [A200].[dbo].[srv_tfmwAdjustments]
            WHERE CodeFw IN ('LCTOPMA','LCTOPMI','LCBOTMA','LCBOTMI','H2OTOPMA','H2OTOPMI','H2OBOTMA','H2OBOTMI','RREG1','RREG2','RREG3','RREG4','RREG5','RREG6','RREG7','RREG8','GTISE','GTOISE')) = 0)
            AND
            ((SELECT COUNT(1) FROM [A200].[dbo].[tfmwPreloadedMasterData]
            WHERE [SubTableID] = 'SRV_SAMPLE_POSITIONS' and ([ItemID] = 'REAGENTZ' or [ItemID] = 'RING3')) = 1)
            Select 'True'
            ELSE
            Select 'False'
          </PrerequisiteScript>
          <DataScript>
            DELETE FROM [A200].[dbo].[srv_tfmwAdjustments]
            WHERE CodeFw IN ('R2RV','R2H','R2V','R2SV','R2WH','R2WVR','R2DH','R2PH1','R2PH2','R2PV1','R2PV2','R2PI','M1RV','M1H','M1V','M1SV','M1WH','M1WVR','M1DH1','M1DV1','M1PH3','M1PV3p','M1PV3t','A2RV','A2H','A2V','A2SV','A2WH','A2WVR','A2DH','A2DV','RR2P1','RR2P2','RM1P3','GTR2','GTOR2','DR2S','SCOV');

            GO

            UPDATE [dbo].[srv_tfmwAdjustments] SET GroupId = 'SAMPLES_ARM_ZREF', Value = '4160' WHERE CodeFw = 'R1RV';
            UPDATE [dbo].[srv_tfmwAdjustments] SET GroupId = 'SAMPLES_ARM_PARK', Value = '2150' WHERE CodeFw = 'R1H';
            UPDATE [dbo].[srv_tfmwAdjustments] SET GroupId = 'SAMPLES_ARM_PARK', Value = '19500' WHERE CodeFw = 'R1V';
            UPDATE [dbo].[srv_tfmwAdjustments] SET GroupId = 'SAMPLES_ARM_VSEC', Value = '-50' WHERE CodeFw = 'R1SV';
            UPDATE [dbo].[srv_tfmwAdjustments] SET GroupId = 'SAMPLES_ARM_WASH', Value = '13100' WHERE CodeFw = 'R1WH';
            UPDATE [dbo].[srv_tfmwAdjustments] SET GroupId = 'SAMPLES_ARM_WASH', Value = '5230' WHERE CodeFw = 'R1WVR';
            UPDATE [dbo].[srv_tfmwAdjustments] SET GroupId = 'SAMPLES_ARM_DISP1', Value = '17180' WHERE CodeFw = 'R1DH';
            UPDATE [dbo].[srv_tfmwAdjustments] SET GroupId = 'SAMPLES_ARM_DISP1', Value = '7160' WHERE CodeFw = 'R1DV';
            UPDATE [dbo].[srv_tfmwAdjustments] SET GroupId = 'SAMPLES_ARM_RING1', Value = '10250', CanSave = 0 WHERE CodeFw = 'R1PH1';
            UPDATE [dbo].[srv_tfmwAdjustments] SET GroupId = 'SAMPLES_ARM_RING2', Value = '9200' , CanSave = 0 WHERE CodeFw = 'R1PH2';
            UPDATE [dbo].[srv_tfmwAdjustments] SET GroupId = 'REAGENT1_ARM_RING1', Value = '17200' WHERE CodeFw = 'R1PV1';
            UPDATE [dbo].[srv_tfmwAdjustments] SET GroupId = 'REAGENT1_ARM_RING1', Value = '17200' WHERE CodeFw = 'R1PV2';
            UPDATE [dbo].[srv_tfmwAdjustments] SET GroupId = 'SAMPLES_ARM_LEVEL_DET', Value = '4660' WHERE CodeFw = 'R1PI';
            UPDATE [dbo].[srv_tfmwAdjustments] SET GroupId = 'SAMPLES_ARM_DISP1', Value = '7160' WHERE CodeFw = 'R2DV';
            UPDATE [dbo].[srv_tfmwAdjustments] SET Value = '16720' WHERE CodeFw = 'M1DH2';
            UPDATE [dbo].[srv_tfmwAdjustments] SET Value = '7760' WHERE CodeFw = 'M1DV2';
            UPDATE [dbo].[srv_tfmwAdjustments] SET Value = '-280' WHERE CodeFw = 'M1ISEH';
            UPDATE [dbo].[srv_tfmwAdjustments] SET Value = '18600' WHERE CodeFw = 'M1ISEV';
            UPDATE [dbo].[srv_tfmwAdjustments] SET Value = '10250' WHERE CodeFw = 'M1PH1';
            UPDATE [dbo].[srv_tfmwAdjustments] SET Value = '12600' WHERE CodeFw = 'M1PV1p';
            UPDATE [dbo].[srv_tfmwAdjustments] SET Value = '17000' WHERE CodeFw = 'M1PV1t';
            UPDATE [dbo].[srv_tfmwAdjustments] SET Value = '9200' WHERE CodeFw = 'M1PH2';
            UPDATE [dbo].[srv_tfmwAdjustments] SET Value = '12600' WHERE CodeFw = 'M1PV2p';
            UPDATE [dbo].[srv_tfmwAdjustments] SET Value = '17000' WHERE CodeFw = 'M1PV2t';
            UPDATE [dbo].[srv_tfmwAdjustments] SET Value = '4660' WHERE CodeFw = 'M1PI';
            UPDATE [dbo].[srv_tfmwAdjustments] SET Value = '4160' WHERE CodeFw = 'M1RPI';
            UPDATE [dbo].[srv_tfmwAdjustments] SET Value = '8020' WHERE CodeFw = 'A1RV';
            UPDATE [dbo].[srv_tfmwAdjustments] SET Value = '15' WHERE CodeFw = 'A1H';
            UPDATE [dbo].[srv_tfmwAdjustments] SET Value = '12800' WHERE CodeFw = 'A1V';
            UPDATE [dbo].[srv_tfmwAdjustments] SET Value = '5220' WHERE CodeFw = 'A1SV';
            UPDATE [dbo].[srv_tfmwAdjustments] SET Value = '10790' WHERE CodeFw = 'A1WH';
            UPDATE [dbo].[srv_tfmwAdjustments] SET Value = '5600' WHERE CodeFw = 'A1WVR';
            UPDATE [dbo].[srv_tfmwAdjustments] SET Value = '12805' WHERE CodeFw = 'A1DH';
            UPDATE [dbo].[srv_tfmwAdjustments] SET Value = '11930' WHERE CodeFw = 'A1DV';
            UPDATE [dbo].[srv_tfmwAdjustments] SET GroupId = 'SAMPLES_ARM_RING1', Value = '9385', CanSave = 0 WHERE CodeFw = 'RR1P1';
            UPDATE [dbo].[srv_tfmwAdjustments] SET GroupId = 'SAMPLES_ARM_RING2', Value = '10450', CanSave = 0 WHERE CodeFw = 'RR1P2';
            UPDATE [dbo].[srv_tfmwAdjustments] SET Value = '3723' WHERE CodeFw = 'RMCB';
            UPDATE [dbo].[srv_tfmwAdjustments] SET Value = '9385' WHERE CodeFw = 'RM1P1';
            UPDATE [dbo].[srv_tfmwAdjustments] SET Value = '10450' WHERE CodeFw = 'RM1P2';
            UPDATE [dbo].[srv_tfmwAdjustments] SET GroupId = 'SAMPLES_ROTOR_BC', Value = '3723' WHERE CodeFw = 'RRCB';
            UPDATE [dbo].[srv_tfmwAdjustments] SET Value = '7892' WHERE CodeFw = 'GFWR1';
            UPDATE [dbo].[srv_tfmwAdjustments] SET Value = '28' WHERE CodeFw = 'GFENC';
            UPDATE [dbo].[srv_tfmwAdjustments] SET Value = '-100' WHERE CodeFw = 'WSRV';
            UPDATE [dbo].[srv_tfmwAdjustments] SET Value = '670' WHERE CodeFw = 'WSRR';
            UPDATE [dbo].[srv_tfmwAdjustments] SET Value = '1020' WHERE CodeFw = 'WSSV';
            UPDATE [dbo].[srv_tfmwAdjustments] SET Value = '2170' WHERE CodeFw = 'WSEV';
            UPDATE [dbo].[srv_tfmwAdjustments] SET Value = '37,0' WHERE CodeFw = 'GTR1';
            UPDATE [dbo].[srv_tfmwAdjustments] SET Value = '37,0' WHERE CodeFw = 'GTOR1';
            UPDATE [dbo].[srv_tfmwAdjustments] SET Value = '3,0' WHERE CodeFw = 'GTN1';
            UPDATE [dbo].[srv_tfmwAdjustments] SET Value = '3,0' WHERE CodeFw = 'GTON1';
            UPDATE [dbo].[srv_tfmwAdjustments] SET Value = '38,0' WHERE CodeFw = 'GTGF';
            UPDATE [dbo].[srv_tfmwAdjustments] SET Value = '37,0' WHERE CodeFw = 'GTOGF';
            UPDATE [dbo].[srv_tfmwAdjustments] SET Value = '45,2' WHERE CodeFw = 'GTH1';
            UPDATE [dbo].[srv_tfmwAdjustments] SET Value = '45,0' WHERE CodeFw = 'GTOH1';
            UPDATE [dbo].[srv_tfmwAdjustments] SET Value = '1,0' WHERE CodeFw = 'DM1S';
            UPDATE [dbo].[srv_tfmwAdjustments] SET Value = '2,0' WHERE CodeFw = 'DR1S';
            UPDATE [dbo].[srv_tfmwAdjustments] SET Value = '2209' WHERE CodeFw = 'GWMI';
            UPDATE [dbo].[srv_tfmwAdjustments] SET Value = '2359' WHERE CodeFw = 'GWMA';
            UPDATE [dbo].[srv_tfmwAdjustments] SET Value = '2018' WHERE CodeFw = 'GSMI';
            UPDATE [dbo].[srv_tfmwAdjustments] SET Value = '2220' WHERE CodeFw = 'GSMA';
            UPDATE [dbo].[srv_tfmwAdjustments] SET Value = '365' WHERE CodeFw = 'ILED1';
            UPDATE [dbo].[srv_tfmwAdjustments] SET Value = '365' WHERE CodeFw = 'ILED2';
            UPDATE [dbo].[srv_tfmwAdjustments] SET Value = '365' WHERE CodeFw = 'ILED3';
            UPDATE [dbo].[srv_tfmwAdjustments] SET Value = '365' WHERE CodeFw = 'ILED4';
            UPDATE [dbo].[srv_tfmwAdjustments] SET Value = '365' WHERE CodeFw = 'ILED5';
            UPDATE [dbo].[srv_tfmwAdjustments] SET Value = '365' WHERE CodeFw = 'ILED6';
            UPDATE [dbo].[srv_tfmwAdjustments] SET Value = '365' WHERE CodeFw = 'ILED7';
            UPDATE [dbo].[srv_tfmwAdjustments] SET Value = '365' WHERE CodeFw = 'ILED8';
            UPDATE [dbo].[srv_tfmwAdjustments] SET Value = '365' WHERE CodeFw = 'ILED9';
            UPDATE [dbo].[srv_tfmwAdjustments] SET Value = '365' WHERE CodeFw = 'ILED10';
            UPDATE [dbo].[srv_tfmwAdjustments] SET Value = '365' WHERE CodeFw = 'ILED11';
            UPDATE [dbo].[srv_tfmwAdjustments] SET Value = '42' WHERE CodeFw = 'SEXC';
            UPDATE [dbo].[srv_tfmwAdjustments] SET Value = '1' WHERE CodeFw = 'ISEINS';
            UPDATE [dbo].[srv_tfmwAdjustments] SET Value = '0' WHERE CodeFw = 'MCOV';
            UPDATE [dbo].[srv_tfmwAdjustments] SET Value = '0' WHERE CodeFw = 'RCOV';
            UPDATE [dbo].[srv_tfmwAdjustments] SET Value = '0' WHERE CodeFw = 'PHCOV';

            GO

            INSERT INTO [A200].[dbo].[srv_tfmwAdjustments]([AnalyzerID],[FwVersion],[CodeFw],[Value],[AreaFw],[DescriptionFw],[GroupID],[AxisID],[CanSave],[CanMove],[InFile])
            VALUES ('MasterData','##########','LCTOPMA','700','Depositos','Varilla corta - Nivel Máximo','WASTE_TANK_TOP_LEVEL','MAX',1,1,1);
            INSERT INTO [A200].[dbo].[srv_tfmwAdjustments]([AnalyzerID],[FwVersion],[CodeFw],[Value],[AreaFw],[DescriptionFw],[GroupID],[AxisID],[CanSave],[CanMove],[InFile])
            VALUES ('MasterData','##########','LCTOPMI','700','Depositos','Varilla corta - Nivel Minimo (Opcional)','WASTE_TANK_TOP_LEVEL','MIN',1,1,1);
            INSERT INTO [A200].[dbo].[srv_tfmwAdjustments]([AnalyzerID],[FwVersion],[CodeFw],[Value],[AreaFw],[DescriptionFw],[GroupID],[AxisID],[CanSave],[CanMove],[InFile])
            VALUES ('MasterData','##########','LCBOTMA','400','Depositos','Varilla Larga - Nivel Máximo (Opcional - Calculo de % de deposito)','WASTE_TANK_BOTTOM_LEVEL','MAX',1,1,1);
            INSERT INTO [A200].[dbo].[srv_tfmwAdjustments]([AnalyzerID],[FwVersion],[CodeFw],[Value],[AreaFw],[DescriptionFw],[GroupID],[AxisID],[CanSave],[CanMove],[InFile])
            VALUES ('MasterData','##########','LCBOTMI','700','Depositos','Varilla Larga - Nivel Mínimo','WASTE_TANK_BOTTOM_LEVEL','MIN',1,1,1);
            INSERT INTO [A200].[dbo].[srv_tfmwAdjustments]([AnalyzerID],[FwVersion],[CodeFw],[Value],[AreaFw],[DescriptionFw],[GroupID],[AxisID],[CanSave],[CanMove],[InFile])
            VALUES ('MasterData','##########','H2OTOPMA','700','Depositos','Varilla corta - Nivel Máximo','WATER_TANK_BOTTOM_LEVEL','MAX',1,1,1);
            INSERT INTO [A200].[dbo].[srv_tfmwAdjustments]([AnalyzerID],[FwVersion],[CodeFw],[Value],[AreaFw],[DescriptionFw],[GroupID],[AxisID],[CanSave],[CanMove],[InFile])
            VALUES ('MasterData','##########','H2OTOPMI','700','Depositos','Varilla corta - Nivel Minimo (Opcional)','WATER_TANK_BOTTOM_LEVEL','MIN',1,1,1);
            INSERT INTO [A200].[dbo].[srv_tfmwAdjustments]([AnalyzerID],[FwVersion],[CodeFw],[Value],[AreaFw],[DescriptionFw],[GroupID],[AxisID],[CanSave],[CanMove],[InFile])
            VALUES ('MasterData','##########','H2OBOTMA','400','Depositos','Varilla Larga - Nivel Máximo (Opcional - Calculo de % de deposito)','WATER_TANK_TOP_LEVEL','MAX',1,1,1);
            INSERT INTO [A200].[dbo].[srv_tfmwAdjustments]([AnalyzerID],[FwVersion],[CodeFw],[Value],[AreaFw],[DescriptionFw],[GroupID],[AxisID],[CanSave],[CanMove],[InFile])
            VALUES ('MasterData','##########','H2OBOTMI','700','Depositos','Varilla Larga - Nivel Mínimo','WATER_TANK_TOP_LEVEL','MIN',1,1,1);
            INSERT INTO [A200].[dbo].[srv_tfmwAdjustments]([AnalyzerID],[FwVersion],[CodeFw],[Value],[AreaFw],[DescriptionFw],[GroupID],[AxisID],[CanSave],[CanMove],[InFile])
            VALUES ('MasterData','##########','RREG1','0','Rotor Reactivos','Valores para cálculo de la corrección del alabeo del Rotor de Reactivos/Muestra','REAGENTS_ROTOR_EG','',1,1,1);
            INSERT INTO [A200].[dbo].[srv_tfmwAdjustments]([AnalyzerID],[FwVersion],[CodeFw],[Value],[AreaFw],[DescriptionFw],[GroupID],[AxisID],[CanSave],[CanMove],[InFile])
            VALUES ('MasterData','##########','RREG2','0','Rotor Reactivos','Valores para cálculo de la corrección del alabeo del Rotor de Reactivos/Muestra','REAGENTS_ROTOR_EG','',1,1,1);
            INSERT INTO [A200].[dbo].[srv_tfmwAdjustments]([AnalyzerID],[FwVersion],[CodeFw],[Value],[AreaFw],[DescriptionFw],[GroupID],[AxisID],[CanSave],[CanMove],[InFile])
            VALUES ('MasterData','##########','RREG3','0','Rotor Reactivos','Valores para cálculo de la corrección del alabeo del Rotor de Reactivos/Muestra','REAGENTS_ROTOR_EG','',1,1,1);
            INSERT INTO [A200].[dbo].[srv_tfmwAdjustments]([AnalyzerID],[FwVersion],[CodeFw],[Value],[AreaFw],[DescriptionFw],[GroupID],[AxisID],[CanSave],[CanMove],[InFile])
            VALUES ('MasterData','##########','RREG4','0','Rotor Reactivos','Valores para cálculo de la corrección del alabeo del Rotor de Reactivos/Muestra','REAGENTS_ROTOR_EG','',1,1,1);
            INSERT INTO [A200].[dbo].[srv_tfmwAdjustments]([AnalyzerID],[FwVersion],[CodeFw],[Value],[AreaFw],[DescriptionFw],[GroupID],[AxisID],[CanSave],[CanMove],[InFile])
            VALUES ('MasterData','##########','RREG5','0','Rotor Reactivos','Valores para cálculo de la corrección del alabeo del Rotor de Reactivos/Muestra','REAGENTS_ROTOR_EG','',1,1,1);
            INSERT INTO [A200].[dbo].[srv_tfmwAdjustments]([AnalyzerID],[FwVersion],[CodeFw],[Value],[AreaFw],[DescriptionFw],[GroupID],[AxisID],[CanSave],[CanMove],[InFile])
            VALUES ('MasterData','##########','RREG6','0','Rotor Reactivos','Valores para cálculo de la corrección del alabeo del Rotor de Reactivos/Muestra','REAGENTS_ROTOR_EG','',1,1,1);
            INSERT INTO [A200].[dbo].[srv_tfmwAdjustments]([AnalyzerID],[FwVersion],[CodeFw],[Value],[AreaFw],[DescriptionFw],[GroupID],[AxisID],[CanSave],[CanMove],[InFile])
            VALUES ('MasterData','##########','RREG7','0','Rotor Reactivos','Valores para cálculo de la corrección del alabeo del Rotor de Reactivos/Muestra','REAGENTS_ROTOR_EG','',1,1,1);
            INSERT INTO [A200].[dbo].[srv_tfmwAdjustments]([AnalyzerID],[FwVersion],[CodeFw],[Value],[AreaFw],[DescriptionFw],[GroupID],[AxisID],[CanSave],[CanMove],[InFile])
            VALUES ('MasterData','##########','RREG8','0','Rotor Reactivos','Valores para cálculo de la corrección del alabeo del Rotor de Reactivos/Muestra','REAGENTS_ROTOR_EG','',1,1,1);
            INSERT INTO [A200].[dbo].[srv_tfmwAdjustments]([AnalyzerID],[FwVersion],[CodeFw],[Value],[AreaFw],[DescriptionFw],[GroupID],[AxisID],[CanSave],[CanMove],[InFile])
            VALUES ('MasterData','##########','GTISE','37,0','General Equipo - Termos','Consigna Termo Punta General para dispensación en ISE','THERMOS_ISE','SETPOINT',1,1,1);
            INSERT INTO [A200].[dbo].[srv_tfmwAdjustments]([AnalyzerID],[FwVersion],[CodeFw],[Value],[AreaFw],[DescriptionFw],[GroupID],[AxisID],[CanSave],[CanMove],[InFile])
            VALUES ('MasterData','##########','GTOISE','37,0','General Equipo - Termos','Objetivo Termo Punta General para dispensación en ISE','THERMOS_ISE','TARGET',1,1,1);

            GO

            INSERT INTO [A200].[dbo].[tfmwPreloadedMasterData]
            ([SubTableID],[ItemID],[ResourceID],[FixedItemDesc],[MultiLanguageFlag],[Position],[Status])
            VALUES
            ('SRV_SAMPLE_POSITIONS','REAGENTZ','LBL_SRV_SAMPLEREAGENT_ZREAGENT','ReagentZ',1,11,1)

            GO

            DELETE [A200].[dbo].[tfmwPreloadedMasterData] where [SubTableID] = 'SRV_SAMPLE_POSITIONS' and ItemID ='RING3'

            GO
          </DataScript>
          <IntegrityScript>
            IF 
            ((SELECT COUNT(1) FROM [A200].[dbo].[srv_tfmwAdjustments]
            WHERE CodeFw IN ('R2RV','R2H','R2V','R2SV','R2WH','R2WVR','R2DH','R2PH1','R2PH2','R2PV1','R2PV2','R2PI','M1RV','M1H','M1V','M1SV','M1WH','M1WVR','M1DH1','M1DV1','M1PH3','M1PV3p','M1PV3t','A2RV','A2H','A2V','A2SV','A2WH','A2WVR','A2DH','A2DV','RR2P1','RR2P2','RM1P3','GTR2','GTOR2','DR2S','SCOV')) = 0)
            AND
            ((SELECT COUNT(1) FROM [A200].[dbo].[srv_tfmwAdjustments]
            WHERE CodeFw IN ('LCTOPMA','LCTOPMI','LCBOTMA','LCBOTMI','H2OTOPMA','H2OTOPMI','H2OBOTMA','H2OBOTMI','RREG1','RREG2','RREG3','RREG4','RREG5','RREG6','RREG7','RREG8','GTISE','GTOISE')) = 18)
            AND 
            ((SELECT COUNT(1) FROM [A200].[dbo].[tfmwPreloadedMasterData]
            WHERE [SubTableID] = 'SRV_SAMPLE_POSITIONS' and ([ItemID] = 'REAGENTZ' or [ItemID] = 'RING3')) = 1)
            Select 'True'
            ELSE
            Select 'False'
          </IntegrityScript> 
        </DataRevision>
        <DataRevision JiraID="BA-2634" SequenceNumber="3">
          <PrerequisiteScript>
            IF           
            ((SELECT COUNT(1) FROM [A200].[dbo].[tfmwPreloadedMasterData]
            WHERE [SubTableID] = 'SRV_SAMPLE_POSITIONS' and ([ItemID] = 'RING1' or [ItemID] = 'RING2')) = 2)
            Select 'True'
            ELSE
            Select 'False'
          </PrerequisiteScript>
          <DataScript>
            IF NOT EXISTS (SELECT * FROM [tfmwMultiLanguageResources] WHERE (UPPER([ResourceID]) = 'LBL_SRV_SAMPLEREAGENT_ARM') AND (UPPER([LanguageID]) = 'ENG'))
            BEGIN
            INSERT INTO tfmwMultiLanguageResources (ResourceID, LanguageID, ResourceText, OnlyService,CreationDate, CreationUser, ApplicationVersion, Translated,TranslatedDate, TranslatedUser, TS_User, TS_DateTime)  VALUES('LBL_SRV_SAMPLEREAGENT_ARM', 'ENG', N'Sample and Reagent Arm', 1, convert(datetime,'20150713 14:38:43',112) ,  'AC', '03.00.09',  0, NULL, NULL, 'AC', convert(datetime,'20150713 14:38:43',112) )
            END
            ELSE
            BEGIN
            UPDATE tfmwMultiLanguageResources SET ResourceText = N'Sample and Reagent Arm', OnlyService  = 1, TS_User = 'AC', TS_DateTime  = convert(datetime,'20150713 14:38:43',112) , Translated = 1, ApplicationVersion = '03.00.09' WHERE  UPPER(ResourceID) = 'LBL_SRV_SAMPLEREAGENT_ARM' AND UPPER(LanguageID) = 'ENG'
            END
            GO
            IF NOT EXISTS (SELECT * FROM [tfmwMultiLanguageResources] WHERE (UPPER([ResourceID]) = 'LBL_SRV_SAMPLEREAGENT_ARM') AND (UPPER([LanguageID]) = 'SPA'))
            BEGIN
            INSERT INTO tfmwMultiLanguageResources (ResourceID, LanguageID, ResourceText, OnlyService,CreationDate, CreationUser, ApplicationVersion, Translated,TranslatedDate, TranslatedUser, TS_User, TS_DateTime)  VALUES('LBL_SRV_SAMPLEREAGENT_ARM', 'SPA', N'Sample and Reagent Arm', 1, convert(datetime,'20150713 14:38:43',112) ,  'AC', '03.00.09',  0, NULL, NULL, 'AC', convert(datetime,'20150713 14:38:43',112) )
            END
            ELSE
            BEGIN
            UPDATE tfmwMultiLanguageResources SET ResourceText = N'Sample and Reagent Arm', OnlyService  = 1, TS_User = 'AC', TS_DateTime  = convert(datetime,'20150713 14:38:43',112) , Translated = 1, ApplicationVersion = '03.00.09' WHERE  UPPER(ResourceID) = 'LBL_SRV_SAMPLEREAGENT_ARM' AND UPPER(LanguageID) = 'SPA'
            END
            GO
            IF NOT EXISTS (SELECT * FROM [tfmwMultiLanguageResources] WHERE (UPPER([ResourceID]) = 'LBL_SRV_SAMPLEREAGENT_RING1') AND (UPPER([LanguageID]) = 'ENG'))
            BEGIN
            INSERT INTO tfmwMultiLanguageResources (ResourceID, LanguageID, ResourceText, OnlyService,CreationDate, CreationUser, ApplicationVersion, Translated,TranslatedDate, TranslatedUser, TS_User, TS_DateTime)  VALUES('LBL_SRV_SAMPLEREAGENT_RING1', 'ENG', N'Sample Ring1', 1, convert(datetime,'20150713 14:40:20',112) ,  'AC', '03.00.09',  0, NULL, NULL, 'AC', convert(datetime,'20150713 14:40:20',112) )
            END
            ELSE
            BEGIN
            UPDATE tfmwMultiLanguageResources SET ResourceText = N'Sample Ring1', OnlyService  = 1, TS_User = 'AC', TS_DateTime  = convert(datetime,'20150713 14:40:20',112) , Translated = 1, ApplicationVersion = '03.00.09' WHERE  UPPER(ResourceID) = 'LBL_SRV_SAMPLEREAGENT_RING1' AND UPPER(LanguageID) = 'ENG'
            END
            GO
            IF NOT EXISTS (SELECT * FROM [tfmwMultiLanguageResources] WHERE (UPPER([ResourceID]) = 'LBL_SRV_SAMPLEREAGENT_RING1') AND (UPPER([LanguageID]) = 'SPA'))
            BEGIN
            INSERT INTO tfmwMultiLanguageResources (ResourceID, LanguageID, ResourceText, OnlyService,CreationDate, CreationUser, ApplicationVersion, Translated,TranslatedDate, TranslatedUser, TS_User, TS_DateTime)  VALUES('LBL_SRV_SAMPLEREAGENT_RING1', 'SPA', N'Sample Ring1', 1, convert(datetime,'20150713 14:40:20',112) ,  'AC', '03.00.09',  0, NULL, NULL, 'AC', convert(datetime,'20150713 14:40:20',112) )
            END
            ELSE
            BEGIN
            UPDATE tfmwMultiLanguageResources SET ResourceText = N'Sample Ring1', OnlyService  = 1, TS_User = 'AC', TS_DateTime  = convert(datetime,'20150713 14:40:20',112) , Translated = 1, ApplicationVersion = '03.00.09' WHERE  UPPER(ResourceID) = 'LBL_SRV_SAMPLEREAGENT_RING1' AND UPPER(LanguageID) = 'SPA'
            END
            GO
            IF NOT EXISTS (SELECT * FROM [tfmwMultiLanguageResources] WHERE (UPPER([ResourceID]) = 'LBL_SRV_SAMPLEREAGENT_RING2') AND (UPPER([LanguageID]) = 'ENG'))
            BEGIN
            INSERT INTO tfmwMultiLanguageResources (ResourceID, LanguageID, ResourceText, OnlyService,CreationDate, CreationUser, ApplicationVersion, Translated,TranslatedDate, TranslatedUser, TS_User, TS_DateTime)  VALUES('LBL_SRV_SAMPLEREAGENT_RING2', 'ENG', N'Sample Ring 2', 1, convert(datetime,'20150713 14:40:36',112) ,  'AC', '03.00.09',  0, NULL, NULL, 'AC', convert(datetime,'20150713 14:40:36',112) )
            END
            ELSE
            BEGIN
            UPDATE tfmwMultiLanguageResources SET ResourceText = N'Sample Ring 2', OnlyService  = 1, TS_User = 'AC', TS_DateTime  = convert(datetime,'20150713 14:40:36',112) , Translated = 1, ApplicationVersion = '03.00.09' WHERE  UPPER(ResourceID) = 'LBL_SRV_SAMPLEREAGENT_RING2' AND UPPER(LanguageID) = 'ENG'
            END
            GO
            IF NOT EXISTS (SELECT * FROM [tfmwMultiLanguageResources] WHERE (UPPER([ResourceID]) = 'LBL_SRV_SAMPLEREAGENT_RING2') AND (UPPER([LanguageID]) = 'SPA'))
            BEGIN
            INSERT INTO tfmwMultiLanguageResources (ResourceID, LanguageID, ResourceText, OnlyService,CreationDate, CreationUser, ApplicationVersion, Translated,TranslatedDate, TranslatedUser, TS_User, TS_DateTime)  VALUES('LBL_SRV_SAMPLEREAGENT_RING2', 'SPA', N'Sample Ring 2', 1, convert(datetime,'20150713 14:40:36',112) ,  'AC', '03.00.09',  0, NULL, NULL, 'AC', convert(datetime,'20150713 14:40:36',112) )
            END
            ELSE
            BEGIN
            UPDATE tfmwMultiLanguageResources SET ResourceText = N'Sample Ring 2', OnlyService  = 1, TS_User = 'AC', TS_DateTime  = convert(datetime,'20150713 14:40:36',112) , Translated = 1, ApplicationVersion = '03.00.09' WHERE  UPPER(ResourceID) = 'LBL_SRV_SAMPLEREAGENT_RING2' AND UPPER(LanguageID) = 'SPA'
            END
            GO
            IF NOT EXISTS (SELECT * FROM [tfmwMultiLanguageResources] WHERE (UPPER([ResourceID]) = 'LBL_SRV_SAMPLEREAGENT_ZREAGENT') AND (UPPER([LanguageID]) = 'ENG'))
            BEGIN
            INSERT INTO tfmwMultiLanguageResources (ResourceID, LanguageID, ResourceText, OnlyService,CreationDate, CreationUser, ApplicationVersion, Translated,TranslatedDate, TranslatedUser, TS_User, TS_DateTime)  VALUES('LBL_SRV_SAMPLEREAGENT_ZREAGENT', 'ENG', N'Z Reagent', 1, convert(datetime,'20150713 14:40:55',112) ,  'AC', '03.00.09',  0, NULL, NULL, 'AC', convert(datetime,'20150713 14:40:55',112) )
            END
            ELSE
            BEGIN
            UPDATE tfmwMultiLanguageResources SET ResourceText = N'Z Reagent', OnlyService  = 1, TS_User = 'AC', TS_DateTime  = convert(datetime,'20150713 14:40:55',112) , Translated = 1, ApplicationVersion = '03.00.09' WHERE  UPPER(ResourceID) = 'LBL_SRV_SAMPLEREAGENT_ZREAGENT' AND UPPER(LanguageID) = 'ENG'
            END
            GO
            IF NOT EXISTS (SELECT * FROM [tfmwMultiLanguageResources] WHERE (UPPER([ResourceID]) = 'LBL_SRV_SAMPLEREAGENT_ZREAGENT') AND (UPPER([LanguageID]) = 'SPA'))
            BEGIN
            INSERT INTO tfmwMultiLanguageResources (ResourceID, LanguageID, ResourceText, OnlyService,CreationDate, CreationUser, ApplicationVersion, Translated,TranslatedDate, TranslatedUser, TS_User, TS_DateTime)  VALUES('LBL_SRV_SAMPLEREAGENT_ZREAGENT', 'SPA', N'Z Reagent', 1, convert(datetime,'20150713 14:40:55',112) ,  'AC', '03.00.09',  0, NULL, NULL, 'AC', convert(datetime,'20150713 14:40:55',112) )
            END
            ELSE
            BEGIN
            UPDATE tfmwMultiLanguageResources SET ResourceText = N'Z Reagent', OnlyService  = 1, TS_User = 'AC', TS_DateTime  = convert(datetime,'20150713 14:40:55',112) , Translated = 1, ApplicationVersion = '03.00.09' WHERE  UPPER(ResourceID) = 'LBL_SRV_SAMPLEREAGENT_ZREAGENT' AND UPPER(LanguageID) = 'SPA'
            END
            GO
            IF NOT EXISTS (SELECT * FROM [tfmwMultiLanguageResources] WHERE (UPPER([ResourceID]) = 'LBL_SRV_STIRRER') AND (UPPER([LanguageID]) = 'ENG'))
            BEGIN
            INSERT INTO tfmwMultiLanguageResources (ResourceID, LanguageID, ResourceText, OnlyService,CreationDate, CreationUser, ApplicationVersion, Translated,TranslatedDate, TranslatedUser, TS_User, TS_DateTime)  VALUES('LBL_SRV_STIRRER', 'ENG', N'Stirrer Arm', 1, convert(datetime,'20150713 14:41:22',112) ,  'AC', '03.00.09',  0, NULL, NULL, 'AC', convert(datetime,'20150713 14:41:22',112) )
            END
            ELSE
            BEGIN
            UPDATE tfmwMultiLanguageResources SET ResourceText = N'Stirrer Arm', OnlyService  = 1, TS_User = 'AC', TS_DateTime  = convert(datetime,'20150713 14:41:22',112) , Translated = 1, ApplicationVersion = '03.00.09' WHERE  UPPER(ResourceID) = 'LBL_SRV_STIRRER' AND UPPER(LanguageID) = 'ENG'
            END
            GO
            IF NOT EXISTS (SELECT * FROM [tfmwMultiLanguageResources] WHERE (UPPER([ResourceID]) = 'LBL_SRV_STIRRER') AND (UPPER([LanguageID]) = 'SPA'))
            BEGIN
            INSERT INTO tfmwMultiLanguageResources (ResourceID, LanguageID, ResourceText, OnlyService,CreationDate, CreationUser, ApplicationVersion, Translated,TranslatedDate, TranslatedUser, TS_User, TS_DateTime)  VALUES('LBL_SRV_STIRRER', 'SPA', N'Stirrer Arm', 1, convert(datetime,'20150713 14:41:22',112) ,  'AC', '03.00.09',  0, NULL, NULL, 'AC', convert(datetime,'20150713 14:41:22',112) )
            END
            ELSE
            BEGIN
            UPDATE tfmwMultiLanguageResources SET ResourceText = N'Stirrer Arm', OnlyService  = 1, TS_User = 'AC', TS_DateTime  = convert(datetime,'20150713 14:41:22',112) , Translated = 1, ApplicationVersion = '03.00.09' WHERE  UPPER(ResourceID) = 'LBL_SRV_STIRRER' AND UPPER(LanguageID) = 'SPA'
            END
            GO

            UPDATE [A200].[dbo].[tfmwPreloadedMasterData]
            SET [ResourceID] = 'LBL_SRV_SAMPLEREAGENT_RING1'
            WHERE SubTableId = 'SRV_SAMPLE_POSITIONS' AND ItemID = 'RING1'
            GO

            UPDATE [A200].[dbo].[tfmwPreloadedMasterData]
            SET [ResourceID] = 'LBL_SRV_SAMPLEREAGENT_RING2'
            WHERE SubTableId = 'SRV_SAMPLE_POSITIONS' AND ItemID = 'RING2'
            GO
            
          </DataScript>
          <IntegrityScript>
            IF
            ((SELECT COUNT(1) FROM [A200].[dbo].[tfmwPreloadedMasterData]
            WHERE [SubTableID] = 'SRV_SAMPLE_POSITIONS' and [ItemID] = 'RING1' and [ResourceID] = 'LBL_SRV_SAMPLEREAGENT_RING1') = 1)
            AND
            ((SELECT COUNT(1) FROM [A200].[dbo].[tfmwPreloadedMasterData]
            WHERE [SubTableID] = 'SRV_SAMPLE_POSITIONS' and [ItemID] = 'RING2' and [ResourceID] = 'LBL_SRV_SAMPLEREAGENT_RING2') = 1)
            Select 'True'
            ELSE
            Select 'False'
          </IntegrityScript>
        </DataRevision>
        <DataRevision JiraID="BA-2632" SequenceNumber="4">
          <PrerequisiteScript>
          </PrerequisiteScript>
          <DataScript>
            IF NOT EXISTS (SELECT * FROM [tfmwMultiLanguageResources] WHERE (UPPER([ResourceID]) = 'LBL_REAGENTSROTORCOVER_BA200') AND (UPPER([LanguageID]) = 'ENG'))
            BEGIN
            INSERT INTO tfmwMultiLanguageResources (ResourceID, LanguageID, ResourceText, OnlyService,CreationDate, CreationUser, ApplicationVersion, Translated,TranslatedDate, TranslatedUser, TS_User, TS_DateTime)  VALUES('LBL_ReagentsRotorCover_BA200', 'ENG', N'Sample and Reagent rotor cover', 1, convert(datetime,'20150714 11:32:23',112) ,  'MR', '03.00.09',  0, NULL, NULL, 'MR', convert(datetime,'20150714 11:32:23',112) )
            END
            ELSE
            BEGIN
            UPDATE tfmwMultiLanguageResources SET ResourceText = N'Sample and Reagent rotor cover', OnlyService  = 1, TS_User = 'MR', TS_DateTime  = convert(datetime,'20150714 11:32:23',112) , Translated = 1, ApplicationVersion = '03.00.09' WHERE  UPPER(ResourceID) = 'LBL_REAGENTSROTORCOVER_BA200' AND UPPER(LanguageID) = 'ENG'
            END
            GO
            IF NOT EXISTS (SELECT * FROM [tfmwMultiLanguageResources] WHERE (UPPER([ResourceID]) = 'LBL_REAGENTSROTORCOVER_BA200') AND (UPPER([LanguageID]) = 'SPA'))
            BEGIN
            INSERT INTO tfmwMultiLanguageResources (ResourceID, LanguageID, ResourceText, OnlyService,CreationDate, CreationUser, ApplicationVersion, Translated,TranslatedDate, TranslatedUser, TS_User, TS_DateTime)  VALUES('LBL_ReagentsRotorCover_BA200', 'SPA', N'Tapa rotor muestras y reactivos.', 1, convert(datetime,'20150714 11:32:23',112) ,  'MR', '03.00.09',  0, NULL, NULL, 'MR', convert(datetime,'20150714 11:32:23',112) )
            END
            ELSE
            BEGIN
            UPDATE tfmwMultiLanguageResources SET ResourceText = N'Tapa rotor muestras y reactivos.', OnlyService  = 1, TS_User = 'MR', TS_DateTime  = convert(datetime,'20150714 11:32:23',112) , Translated = 1, ApplicationVersion = '03.00.09' WHERE  UPPER(ResourceID) = 'LBL_REAGENTSROTORCOVER_BA200' AND UPPER(LanguageID) = 'SPA'
            END
            GO
          </DataScript>
          <IntegrityScript>
          </IntegrityScript>
        </DataRevision>
        <DataRevision JiraID="BA-2634" SequenceNumber="5">
          <PrerequisiteScript>
            IF
            ((SELECT COUNT(1) FROM [A200].[dbo].[tfmwFieldLimits]
WHERE [LimitID] IN ('SRV_MIXER1_POLAR_LIMIT','SRV_MIXER1_Z_FINE_LIMIT','SRV_MIXER1_Z_LIMIT','SRV_REAGENT1_Z_FINE_LIMIT','SRV_REAGENT1_Z_LIMIT','SRV_SAMPLE_POLAR_LIMIT','SRV_SAMPLE_ROTOR_LIMIT',
'SRV_SAMPLE_Z_FINE_LIMIT','SRV_SAMPLE_Z_LIMIT','SRV_WASHING_Z_LIMIT') AND [AnalyzerModel] = 'A200') = 10)
            Select 'True'
            ELSE
            Select 'False'
          </PrerequisiteScript>
          <DataScript>
            UPDATE [A200].[dbo].[tfmwFieldLimits]
               SET 
                  [MinValue] = -1000,
                  [MaxValue] = 13000
             WHERE [LimitID] = 'SRV_MIXER1_POLAR_LIMIT' And [AnalyzerModel] = 'A200'
            GO

            UPDATE [A200].[dbo].[tfmwFieldLimits]
               SET 
                  [MinValue] = 0,
                  [MaxValue] = 5000
             WHERE [LimitID] = 'SRV_MIXER1_Z_FINE_LIMIT' And [AnalyzerModel] = 'A200'
            GO

            UPDATE [A200].[dbo].[tfmwFieldLimits]
               SET 
                  [MinValue] = -1000,
                  [MaxValue] = 13000
             WHERE [LimitID] = 'SRV_MIXER1_Z_LIMIT' And [AnalyzerModel] = 'A200'
            GO

            UPDATE [A200].[dbo].[tfmwFieldLimits]
               SET 
                  [MinValue] = 0,
                  [MaxValue] = 1000
             WHERE [LimitID] = 'SRV_REAGENT1_Z_FINE_LIMIT' And [AnalyzerModel] = 'A200'
            GO

            UPDATE [A200].[dbo].[tfmwFieldLimits]
               SET 
                  [MinValue] = -1000,
                  [MaxValue] = 19500
             WHERE [LimitID] = 'SRV_REAGENT1_Z_LIMIT' And [AnalyzerModel] = 'A200'
            GO

            UPDATE [A200].[dbo].[tfmwFieldLimits]
               SET 
                  [MinValue] = -1000,
                  [MaxValue] = 17500
             WHERE [LimitID] = 'SRV_SAMPLE_POLAR_LIMIT' And [AnalyzerModel] = 'A200'
            GO

            UPDATE [A200].[dbo].[tfmwFieldLimits]
               SET 
                  [MinValue] = -15000,
                  [MaxValue] = 32000
             WHERE [LimitID] = 'SRV_SAMPLE_ROTOR_LIMIT' And [AnalyzerModel] = 'A200'
            GO

            UPDATE [A200].[dbo].[tfmwFieldLimits]
               SET 
                  [MinValue] = 0,
                  [MaxValue] = 1000
             WHERE [LimitID] = 'SRV_SAMPLE_Z_FINE_LIMIT' And [AnalyzerModel] = 'A200'
            GO

            UPDATE [A200].[dbo].[tfmwFieldLimits]
               SET 
                  [MinValue] = -1000,
                  [MaxValue] = 19500
             WHERE [LimitID] = 'SRV_SAMPLE_Z_LIMIT' And [AnalyzerModel] = 'A200'
            GO

            UPDATE [A200].[dbo].[tfmwFieldLimits]
               SET 
                  [MinValue] = -1000,
                  [MaxValue] = 3000
             WHERE [LimitID] = 'SRV_WASHING_Z_LIMIT' And [AnalyzerModel] = 'A200'
            GO
          </DataScript>
          <IntegrityScript>
            IF
            ((SELECT COUNT(1) FROM [A200].[dbo].[tfmwFieldLimits]
WHERE [LimitID] IN ('SRV_MIXER1_POLAR_LIMIT','SRV_MIXER1_Z_FINE_LIMIT','SRV_MIXER1_Z_LIMIT','SRV_REAGENT1_Z_FINE_LIMIT','SRV_REAGENT1_Z_LIMIT','SRV_SAMPLE_POLAR_LIMIT','SRV_SAMPLE_ROTOR_LIMIT',
'SRV_SAMPLE_Z_FINE_LIMIT','SRV_SAMPLE_Z_LIMIT','SRV_WASHING_Z_LIMIT') AND [AnalyzerModel] = 'A200') = 10)
            Select 'True'
            ELSE
            Select 'False'
          </IntegrityScript> 
        </DataRevision>
        <DataRevision JiraID="BA-2650" SequenceNumber="6">
          <PrerequisiteScript>
          </PrerequisiteScript>
          <DataScript>
            IF NOT EXISTS (SELECT * FROM [tfmwMultiLanguageResources] WHERE (UPPER([ResourceID]) = 'LBL_SRV_SamplesAndReagentsArm') AND (UPPER([LanguageID]) = 'ENG'))
            BEGIN
            INSERT INTO tfmwMultiLanguageResources (ResourceID, LanguageID, ResourceText, OnlyService,CreationDate, CreationUser, ApplicationVersion, Translated,TranslatedDate, TranslatedUser, TS_User, TS_DateTime)  VALUES('LBL_SRV_SamplesAndReagentsArm', 'ENG', N'Samples and Reagents arm', 1, GETDATE() ,  'IT', '03.00.09',  0, NULL, NULL, 'IT', GETDATE() )
            END
            GO
            IF NOT EXISTS (SELECT * FROM [tfmwMultiLanguageResources] WHERE (UPPER([ResourceID]) = 'LBL_SRV_SamplesAndReagentsArm') AND (UPPER([LanguageID]) = 'SPA'))
            BEGIN
            INSERT INTO tfmwMultiLanguageResources (ResourceID, LanguageID, ResourceText, OnlyService,CreationDate, CreationUser, ApplicationVersion, Translated,TranslatedDate, TranslatedUser, TS_User, TS_DateTime)  VALUES('LBL_SRV_SamplesAndReagentsArm', 'SPA', N'Brazo muestras y reactivos.', 1, GETDATE()  ,  'IT', '03.00.09',  0, NULL, NULL, 'IT', GETDATE()  )
            END
            GO

            DELETE FROM [A200].[dbo].[srv_tadjPreliminaryHomes]
            WHERE RequiredHomeID = 'REAGENT2_ARM_HOME_Z'
            AND AdjustmentGroupID IN ('THERMOS_REAGENT1','THERMOS_REAGENT2')

            DELETE FROM [A200].[dbo].[srv_tadjPreliminaryHomes]
            WHERE AdjustmentGroupID = 'THERMOS_REAGENT2'

            UPDATE [A200].[dbo].[srv_tadjPreliminaryHomes]
            SET ExeOrder = 2
            WHERE AdjustmentGroupID = 'THERMOS_REAGENT1'
            AND RequiredHomeID = 'REAGENTS_HOME_ROTOR'

            UPDATE [A200].[dbo].[srv_tadjPreliminaryHomes]
            SET ExeOrder = 3
            WHERE AdjustmentGroupID = 'THERMOS_REAGENT1'
            AND RequiredHomeID = 'REAGENT1_ARM_HOME_POLAR'

          </DataScript>
          <IntegrityScript>
            IF ( (EXISTS (SELECT * FROM [A200].[dbo].[tfmwMultiLanguageResources] WHERE (UPPER([ResourceID]) = 'LBL_SRV_SamplesAndReagentsArm')))
            AND (NOT EXISTS (SELECT * FROM [A200].[dbo].[srv_tadjPreliminaryHomes] WHERE RequiredHomeID = 'REAGENT2_ARM_HOME_Z' AND AdjustmentGroupID IN ('THERMOS_REAGENT1','THERMOS_REAGENT2')))
            AND (NOT EXISTS (SELECT * FROM [A200].[dbo].[srv_tadjPreliminaryHomes] WHERE RequiredHomeID = 'THERMOS_REAGENT2'))
            AND (EXISTS (SELECT * FROM [A200].[dbo].[srv_tadjPreliminaryHomes] WHERE RequiredHomeID = 'REAGENTS_HOME_ROTOR' AND AdjustmentGroupID = 'THERMOS_REAGENT1' AND ExeOrder = 2))
            AND (EXISTS (SELECT * FROM [A200].[dbo].[srv_tadjPreliminaryHomes] WHERE RequiredHomeID = 'REAGENT1_ARM_HOME_POLAR' AND AdjustmentGroupID = 'THERMOS_REAGENT1' AND ExeOrder = 3)))
            Select 'True'
            ELSE
            Select 'False'
          </IntegrityScript>
        </DataRevision>
        <DataRevision JiraID="BA-2649" SequenceNumber="7">
          <PrerequisiteScript>
          </PrerequisiteScript>
          <DataScript>
              UPDATE [A200].[dbo].[tfmwSwParameters] 
              SET ValueNumeric = 2
              WHERE ParameterName = 'SRV_WELLS_TO_MEASURE_GLF_THERMO'
              AND AnalyzerModel = 'A200'
          </DataScript>
          <IntegrityScript>
              IF (EXISTS (SELECT * FROM [A200].[dbo].[tfmwSwParameters] WHERE ParameterName = 'SRV_WELLS_TO_MEASURE_GLF_THERMO' AND AnalyzerModel = 'A200' AND ValueNumeric = 2))
              Select 'True'
              ELSE
              Select 'False'
          </IntegrityScript> 
        </DataRevision>
        <DataRevision JiraID="BA-2642" SequenceNumber="8">
          <PrerequisiteScript>
          </PrerequisiteScript>
          <StructureScript>
          </StructureScript>
          <DataScript>
            IF NOT EXISTS (SELECT * FROM [tfmwMultiLanguageResources] WHERE (UPPER([ResourceID]) = 'LBL_SRV_JE1_B1_BA200') AND (UPPER([LanguageID]) = 'ENG'))
            BEGIN
            INSERT INTO tfmwMultiLanguageResources (ResourceID, LanguageID, ResourceText, OnlyService,CreationDate, CreationUser, ApplicationVersion, Translated,TranslatedDate, TranslatedUser, TS_User, TS_DateTime)  VALUES('LBL_SRV_JE1_B1_BA200', 'ENG', N'Sample &amp; reagent dosing pump', 1, convert(datetime,'20150724 07:26:27',112) ,  'ACR', '03.00.09',  0, NULL, NULL, 'ACR', convert(datetime,'20150724 07:26:27',112) )
            END
            ELSE
            BEGIN
            UPDATE tfmwMultiLanguageResources SET ResourceText = N'Sample &amp; Reagent dosing pump', OnlyService  = 1, TS_User = 'ACR', TS_DateTime  = convert(datetime,'20150724 07:26:27',112) , Translated = 1, ApplicationVersion = '03.00.09' WHERE  UPPER(ResourceID) = 'LBL_SRV_JE1_B1_BA200' AND UPPER(LanguageID) = 'ENG'
            END
            GO
            IF NOT EXISTS (SELECT * FROM [tfmwMultiLanguageResources] WHERE (UPPER([ResourceID]) = 'LBL_SRV_JE1_B1_BA200') AND (UPPER([LanguageID]) = 'SPA'))
            BEGIN
            INSERT INTO tfmwMultiLanguageResources (ResourceID, LanguageID, ResourceText, OnlyService,CreationDate, CreationUser, ApplicationVersion, Translated,TranslatedDate, TranslatedUser, TS_User, TS_DateTime)  VALUES('LBL_SRV_JE1_B1_BA200', 'SPA', N'Bomba dosificación muestra y reactivo', 1, convert(datetime,'20150724 07:26:27',112) ,  'ACR', '03.00.09',  0, NULL, NULL, 'ACR', convert(datetime,'20150724 07:26:27',112) )
            END
            ELSE
            BEGIN
            UPDATE tfmwMultiLanguageResources SET ResourceText = N'Bomba dosificación muestra y reactivo', OnlyService  = 1, TS_User = 'ACR', TS_DateTime  = convert(datetime,'20150724 07:26:27',112) , Translated = 1, ApplicationVersion = '03.00.09' WHERE  UPPER(ResourceID) = 'LBL_SRV_JE1_B1_BA200' AND UPPER(LanguageID) = 'SPA'
            END
            GO
            IF NOT EXISTS (SELECT * FROM [tfmwMultiLanguageResources] WHERE (UPPER([ResourceID]) = 'LBL_SRV_JE1_EV1_BA200') AND (UPPER([LanguageID]) = 'ENG'))
            BEGIN
            INSERT INTO tfmwMultiLanguageResources (ResourceID, LanguageID, ResourceText, OnlyService,CreationDate, CreationUser, ApplicationVersion, Translated,TranslatedDate, TranslatedUser, TS_User, TS_DateTime)  VALUES('LBL_SRV_JE1_EV1_BA200', 'ENG', N'Sample &amp; Reagent dosing valve', 1, convert(datetime,'20150724 07:27:43',112) ,  'ACR', '03.00.09',  0, NULL, NULL, 'ACR', convert(datetime,'20150724 07:27:43',112) )
            END
            ELSE
            BEGIN
            UPDATE tfmwMultiLanguageResources SET ResourceText = N'Sample &amp; Reagent dosing valve', OnlyService  = 1, TS_User = 'ACR', TS_DateTime  = convert(datetime,'20150724 07:27:43',112) , Translated = 1, ApplicationVersion = '03.00.09' WHERE  UPPER(ResourceID) = 'LBL_SRV_JE1_EV1_BA200' AND UPPER(LanguageID) = 'ENG'
            END
            GO
            IF NOT EXISTS (SELECT * FROM [tfmwMultiLanguageResources] WHERE (UPPER([ResourceID]) = 'LBL_SRV_JE1_EV1_BA200') AND (UPPER([LanguageID]) = 'SPA'))
            BEGIN
            INSERT INTO tfmwMultiLanguageResources (ResourceID, LanguageID, ResourceText, OnlyService,CreationDate, CreationUser, ApplicationVersion, Translated,TranslatedDate, TranslatedUser, TS_User, TS_DateTime)  VALUES('LBL_SRV_JE1_EV1_BA200', 'SPA', N'Válvula dosificación muestra y reactivo', 1, convert(datetime,'20150724 07:27:43',112) ,  'ACR', '03.00.09',  0, NULL, NULL, 'ACR', convert(datetime,'20150724 07:27:43',112) )
            END
            ELSE
            BEGIN
            UPDATE tfmwMultiLanguageResources SET ResourceText = N'Válvula dosificación muestra y reactivo', OnlyService  = 1, TS_User = 'ACR', TS_DateTime  = convert(datetime,'20150724 07:27:43',112) , Translated = 1, ApplicationVersion = '03.00.09' WHERE  UPPER(ResourceID) = 'LBL_SRV_JE1_EV1_BA200' AND UPPER(LanguageID) = 'SPA'
            END
            GO
            IF NOT EXISTS (SELECT * FROM [tfmwMultiLanguageResources] WHERE (UPPER([ResourceID]) = 'LBL_SRV_JE1_MS_BA200') AND (UPPER([LanguageID]) = 'ENG'))
            BEGIN
            INSERT INTO tfmwMultiLanguageResources (ResourceID, LanguageID, ResourceText, OnlyService,CreationDate, CreationUser, ApplicationVersion, Translated,TranslatedDate, TranslatedUser, TS_User, TS_DateTime)  VALUES('LBL_SRV_JE1_MS_BA200', 'ENG', N'Sample &amp; Reagent dosing DC pump', 1, convert(datetime,'20150724 07:29:31',112) ,  'ACR', '03.00.09',  0, NULL, NULL, 'ACR', convert(datetime,'20150724 07:29:31',112) )
            END
            ELSE
            BEGIN
            UPDATE tfmwMultiLanguageResources SET ResourceText = N'Sample &amp; Reagent dosing DC pump', OnlyService  = 1, TS_User = 'ACR', TS_DateTime  = convert(datetime,'20150724 07:29:31',112) , Translated = 1, ApplicationVersion = '03.00.09' WHERE  UPPER(ResourceID) = 'LBL_SRV_JE1_MS_BA200' AND UPPER(LanguageID) = 'ENG'
            END
            GO
            IF NOT EXISTS (SELECT * FROM [tfmwMultiLanguageResources] WHERE (UPPER([ResourceID]) = 'LBL_SRV_JE1_MS_BA200') AND (UPPER([LanguageID]) = 'SPA'))
            BEGIN
            INSERT INTO tfmwMultiLanguageResources (ResourceID, LanguageID, ResourceText, OnlyService,CreationDate, CreationUser, ApplicationVersion, Translated,TranslatedDate, TranslatedUser, TS_User, TS_DateTime)  VALUES('LBL_SRV_JE1_MS_BA200', 'SPA', N'Bomba DC dosificación muestra y reactivo', 1, convert(datetime,'20150724 07:29:31',112) ,  'ACR', '03.00.09',  0, NULL, NULL, 'ACR', convert(datetime,'20150724 07:29:31',112) )
            END
            ELSE
            BEGIN
            UPDATE tfmwMultiLanguageResources SET ResourceText = N'Bomba DC dosificación muestra y reactivo', OnlyService  = 1, TS_User = 'ACR', TS_DateTime  = convert(datetime,'20150724 07:29:31',112) , Translated = 1, ApplicationVersion = '03.00.09' WHERE  UPPER(ResourceID) = 'LBL_SRV_JE1_MS_BA200' AND UPPER(LanguageID) = 'SPA'
            END
            GO
          </DataScript>
          <IntegrityScript>
          </IntegrityScript>
        </DataRevision>
        <DataRevision JiraID="BA-2706" SequenceNumber="9">
          <PrerequisiteScript>
          </PrerequisiteScript>
          <DataScript>
            UPDATE dbo.tfmwVersions SET UserSoftware = '3.0.8', ServiceSoftware = '1.2.5', FirmwareScripts = '1.0.0', Firmware = '1.50.2'
            GO
          </DataScript>
          <IntegrityScript>
          </IntegrityScript>
        </DataRevision>
      </DataRevisions>
    </Release>
    
    <!-- 
	  <Release Version="00.00.00">
    <DataRevisions>
      <DataRevision JiraID="" SequenceNumber="">
        <PrerequisiteScript>
        </PrerequisiteScript>
        <DataScript>
        </DataScript>
        <IntegrityScript>
        </IntegrityScript> 
      </DataRevision>
    </DataRevisions>
    </Release>
	  -->
  </Releases>
</DatabaseUpdatesManager>