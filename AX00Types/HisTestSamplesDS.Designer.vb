'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.18063
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("HisTestSamplesDS"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class HisTestSamplesDS
    Inherits Global.System.Data.DataSet
    
    Private tablethisTestSamples As thisTestSamplesDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("thisTestSamples")) Is Nothing) Then
                MyBase.Tables.Add(New thisTestSamplesDataTable(ds.Tables("thisTestSamples")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property thisTestSamples() As thisTestSamplesDataTable
        Get
            Return Me.tablethisTestSamples
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As HisTestSamplesDS = CType(MyBase.Clone,HisTestSamplesDS)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("thisTestSamples")) Is Nothing) Then
                MyBase.Tables.Add(New thisTestSamplesDataTable(ds.Tables("thisTestSamples")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tablethisTestSamples = CType(MyBase.Tables("thisTestSamples"),thisTestSamplesDataTable)
        If (initTable = true) Then
            If (Not (Me.tablethisTestSamples) Is Nothing) Then
                Me.tablethisTestSamples.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "HisTestSamplesDS"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/HisTestSamplesDS.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tablethisTestSamples = New thisTestSamplesDataTable()
        MyBase.Tables.Add(Me.tablethisTestSamples)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializethisTestSamples() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As HisTestSamplesDS = New HisTestSamplesDS()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub thisTestSamplesRowChangeEventHandler(ByVal sender As Object, ByVal e As thisTestSamplesRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class thisTestSamplesDataTable
        Inherits Global.System.Data.TypedTableBase(Of thisTestSamplesRow)
        
        Private columnHistTestID As Global.System.Data.DataColumn
        
        Private columnSampleType As Global.System.Data.DataColumn
        
        Private columnTestVersionNumber As Global.System.Data.DataColumn
        
        Private columnTestID As Global.System.Data.DataColumn
        
        Private columnTestName As Global.System.Data.DataColumn
        
        Private columnTestLongName As Global.System.Data.DataColumn
        
        Private columnPreloadedTest As Global.System.Data.DataColumn
        
        Private columnMeasureUnit As Global.System.Data.DataColumn
        
        Private columnAnalysisMode As Global.System.Data.DataColumn
        
        Private columnReactionType As Global.System.Data.DataColumn
        
        Private columnDecimalsAllowed As Global.System.Data.DataColumn
        
        Private columnReadingMode As Global.System.Data.DataColumn
        
        Private columnFirstReadingCycle As Global.System.Data.DataColumn
        
        Private columnSecondReadingCycle As Global.System.Data.DataColumn
        
        Private columnMainWavelength As Global.System.Data.DataColumn
        
        Private columnMainLedPosition As Global.System.Data.DataColumn
        
        Private columnReferenceWavelength As Global.System.Data.DataColumn
        
        Private columnReferenceLedPosition As Global.System.Data.DataColumn
        
        Private columnBlankMode As Global.System.Data.DataColumn
        
        Private columnProzoneRatio As Global.System.Data.DataColumn
        
        Private columnProzoneTime1 As Global.System.Data.DataColumn
        
        Private columnProzoneTime2 As Global.System.Data.DataColumn
        
        Private columnSampleVolume As Global.System.Data.DataColumn
        
        Private columnPredilutionFactor As Global.System.Data.DataColumn
        
        Private columnPredilutionMode As Global.System.Data.DataColumn
        
        Private columnDiluentSolution As Global.System.Data.DataColumn
        
        Private columnPredilutedSampleVol As Global.System.Data.DataColumn
        
        Private columnPredilutedDiluentVol As Global.System.Data.DataColumn
        
        Private columnRedPostdilutionFactor As Global.System.Data.DataColumn
        
        Private columnRedPostSampleVolume As Global.System.Data.DataColumn
        
        Private columnIncPostdilutionFactor As Global.System.Data.DataColumn
        
        Private columnIncPostSampleVolume As Global.System.Data.DataColumn
        
        Private columnLinearityLimit As Global.System.Data.DataColumn
        
        Private columnDetectionLimit As Global.System.Data.DataColumn
        
        Private columnSlopeFactorA As Global.System.Data.DataColumn
        
        Private columnSlopeFactorB As Global.System.Data.DataColumn
        
        Private columnSubstrateDepletionValue As Global.System.Data.DataColumn
        
        Private columnCalibratorType As Global.System.Data.DataColumn
        
        Private columnCalibratorFactor As Global.System.Data.DataColumn
        
        Private columnHistCalibratorID As Global.System.Data.DataColumn
        
        Private columnCalibPointUsed As Global.System.Data.DataColumn
        
        Private columnCurveGrowthType As Global.System.Data.DataColumn
        
        Private columnCurveType As Global.System.Data.DataColumn
        
        Private columnCurveAxisXType As Global.System.Data.DataColumn
        
        Private columnCurveAxisYType As Global.System.Data.DataColumn
        
        Private columnHistReagent1ID As Global.System.Data.DataColumn
        
        Private columnReagent1Volume As Global.System.Data.DataColumn
        
        Private columnRedPostReagent1Volume As Global.System.Data.DataColumn
        
        Private columnIncPostReagent1Volume As Global.System.Data.DataColumn
        
        Private columnHistReagent2ID As Global.System.Data.DataColumn
        
        Private columnReagent2Volume As Global.System.Data.DataColumn
        
        Private columnRedPostReagent2Volume As Global.System.Data.DataColumn
        
        Private columnIncPostReagent2Volume As Global.System.Data.DataColumn
        
        Private columnTestVersionDateTime As Global.System.Data.DataColumn
        
        Private columnClosedTestVersion As Global.System.Data.DataColumn
        
        Private columnClosedTestSample As Global.System.Data.DataColumn
        
        Private columnAlternativeSampleType As Global.System.Data.DataColumn
        
        Private columnBlankAbsorbanceLimit As Global.System.Data.DataColumn
        
        Private columnKineticBlankLimit As Global.System.Data.DataColumn
        
        Private columnFactorLowerLimit As Global.System.Data.DataColumn
        
        Private columnFactorUpperLimit As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "thisTestSamples"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HistTestIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHistTestID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SampleTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSampleType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TestVersionNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTestVersionNumber
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TestIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTestID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TestNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTestName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TestLongNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTestLongName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PreloadedTestColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPreloadedTest
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MeasureUnitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMeasureUnit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AnalysisModeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAnalysisMode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ReactionTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReactionType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DecimalsAllowedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDecimalsAllowed
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ReadingModeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReadingMode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FirstReadingCycleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFirstReadingCycle
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SecondReadingCycleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSecondReadingCycle
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MainWavelengthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMainWavelength
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MainLedPositionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMainLedPosition
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ReferenceWavelengthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReferenceWavelength
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ReferenceLedPositionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReferenceLedPosition
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BlankModeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBlankMode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ProzoneRatioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProzoneRatio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ProzoneTime1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnProzoneTime1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ProzoneTime2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnProzoneTime2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SampleVolumeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSampleVolume
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PredilutionFactorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPredilutionFactor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PredilutionModeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPredilutionMode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DiluentSolutionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDiluentSolution
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PredilutedSampleVolColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPredilutedSampleVol
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PredilutedDiluentVolColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPredilutedDiluentVol
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RedPostdilutionFactorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRedPostdilutionFactor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RedPostSampleVolumeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRedPostSampleVolume
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IncPostdilutionFactorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIncPostdilutionFactor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IncPostSampleVolumeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIncPostSampleVolume
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LinearityLimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLinearityLimit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DetectionLimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDetectionLimit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SlopeFactorAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSlopeFactorA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SlopeFactorBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSlopeFactorB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SubstrateDepletionValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubstrateDepletionValue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CalibratorTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCalibratorType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CalibratorFactorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCalibratorFactor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HistCalibratorIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHistCalibratorID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CalibPointUsedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCalibPointUsed
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CurveGrowthTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCurveGrowthType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CurveTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCurveType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CurveAxisXTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCurveAxisXType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CurveAxisYTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCurveAxisYType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HistReagent1IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHistReagent1ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Reagent1VolumeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReagent1Volume
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RedPostReagent1VolumeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRedPostReagent1Volume
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IncPostReagent1VolumeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIncPostReagent1Volume
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HistReagent2IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHistReagent2ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Reagent2VolumeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReagent2Volume
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RedPostReagent2VolumeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRedPostReagent2Volume
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IncPostReagent2VolumeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIncPostReagent2Volume
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TestVersionDateTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTestVersionDateTime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ClosedTestVersionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClosedTestVersion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ClosedTestSampleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClosedTestSample
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AlternativeSampleTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAlternativeSampleType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BlankAbsorbanceLimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBlankAbsorbanceLimit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KineticBlankLimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKineticBlankLimit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FactorLowerLimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFactorLowerLimit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FactorUpperLimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFactorUpperLimit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As thisTestSamplesRow
            Get
                Return CType(Me.Rows(index),thisTestSamplesRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event thisTestSamplesRowChanging As thisTestSamplesRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event thisTestSamplesRowChanged As thisTestSamplesRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event thisTestSamplesRowDeleting As thisTestSamplesRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event thisTestSamplesRowDeleted As thisTestSamplesRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddthisTestSamplesRow(ByVal row As thisTestSamplesRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddthisTestSamplesRow( _
                    ByVal HistTestID As Integer,  _
                    ByVal SampleType As String,  _
                    ByVal TestVersionNumber As Integer,  _
                    ByVal TestID As Integer,  _
                    ByVal TestName As String,  _
                    ByVal TestLongName As String,  _
                    ByVal PreloadedTest As Boolean,  _
                    ByVal MeasureUnit As String,  _
                    ByVal AnalysisMode As String,  _
                    ByVal ReactionType As String,  _
                    ByVal DecimalsAllowed As Integer,  _
                    ByVal ReadingMode As String,  _
                    ByVal FirstReadingCycle As Integer,  _
                    ByVal SecondReadingCycle As Integer,  _
                    ByVal MainWavelength As Integer,  _
                    ByVal MainLedPosition As Integer,  _
                    ByVal ReferenceWavelength As Integer,  _
                    ByVal ReferenceLedPosition As Integer,  _
                    ByVal BlankMode As String,  _
                    ByVal ProzoneRatio As Single,  _
                    ByVal ProzoneTime1 As Integer,  _
                    ByVal ProzoneTime2 As Integer,  _
                    ByVal SampleVolume As Single,  _
                    ByVal PredilutionFactor As Single,  _
                    ByVal PredilutionMode As String,  _
                    ByVal DiluentSolution As String,  _
                    ByVal PredilutedSampleVol As Single,  _
                    ByVal PredilutedDiluentVol As Single,  _
                    ByVal RedPostdilutionFactor As Single,  _
                    ByVal RedPostSampleVolume As Single,  _
                    ByVal IncPostdilutionFactor As Single,  _
                    ByVal IncPostSampleVolume As Single,  _
                    ByVal LinearityLimit As Single,  _
                    ByVal DetectionLimit As Single,  _
                    ByVal SlopeFactorA As Single,  _
                    ByVal SlopeFactorB As Single,  _
                    ByVal SubstrateDepletionValue As Single,  _
                    ByVal CalibratorType As String,  _
                    ByVal CalibratorFactor As Single,  _
                    ByVal HistCalibratorID As Integer,  _
                    ByVal CalibPointUsed As Integer,  _
                    ByVal CurveGrowthType As String,  _
                    ByVal CurveType As String,  _
                    ByVal CurveAxisXType As String,  _
                    ByVal CurveAxisYType As String,  _
                    ByVal HistReagent1ID As Integer,  _
                    ByVal Reagent1Volume As Single,  _
                    ByVal RedPostReagent1Volume As Single,  _
                    ByVal IncPostReagent1Volume As Single,  _
                    ByVal HistReagent2ID As Integer,  _
                    ByVal Reagent2Volume As Single,  _
                    ByVal RedPostReagent2Volume As Single,  _
                    ByVal IncPostReagent2Volume As Single,  _
                    ByVal TestVersionDateTime As Date,  _
                    ByVal ClosedTestVersion As Boolean,  _
                    ByVal ClosedTestSample As Boolean,  _
                    ByVal AlternativeSampleType As String,  _
                    ByVal BlankAbsorbanceLimit As Single,  _
                    ByVal KineticBlankLimit As Single,  _
                    ByVal FactorLowerLimit As Single,  _
                    ByVal FactorUpperLimit As Single) As thisTestSamplesRow
            Dim rowthisTestSamplesRow As thisTestSamplesRow = CType(Me.NewRow,thisTestSamplesRow)
            Dim columnValuesArray() As Object = New Object() {HistTestID, SampleType, TestVersionNumber, TestID, TestName, TestLongName, PreloadedTest, MeasureUnit, AnalysisMode, ReactionType, DecimalsAllowed, ReadingMode, FirstReadingCycle, SecondReadingCycle, MainWavelength, MainLedPosition, ReferenceWavelength, ReferenceLedPosition, BlankMode, ProzoneRatio, ProzoneTime1, ProzoneTime2, SampleVolume, PredilutionFactor, PredilutionMode, DiluentSolution, PredilutedSampleVol, PredilutedDiluentVol, RedPostdilutionFactor, RedPostSampleVolume, IncPostdilutionFactor, IncPostSampleVolume, LinearityLimit, DetectionLimit, SlopeFactorA, SlopeFactorB, SubstrateDepletionValue, CalibratorType, CalibratorFactor, HistCalibratorID, CalibPointUsed, CurveGrowthType, CurveType, CurveAxisXType, CurveAxisYType, HistReagent1ID, Reagent1Volume, RedPostReagent1Volume, IncPostReagent1Volume, HistReagent2ID, Reagent2Volume, RedPostReagent2Volume, IncPostReagent2Volume, TestVersionDateTime, ClosedTestVersion, ClosedTestSample, AlternativeSampleType, BlankAbsorbanceLimit, KineticBlankLimit, FactorLowerLimit, FactorUpperLimit}
            rowthisTestSamplesRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowthisTestSamplesRow)
            Return rowthisTestSamplesRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As thisTestSamplesDataTable = CType(MyBase.Clone,thisTestSamplesDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New thisTestSamplesDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnHistTestID = MyBase.Columns("HistTestID")
            Me.columnSampleType = MyBase.Columns("SampleType")
            Me.columnTestVersionNumber = MyBase.Columns("TestVersionNumber")
            Me.columnTestID = MyBase.Columns("TestID")
            Me.columnTestName = MyBase.Columns("TestName")
            Me.columnTestLongName = MyBase.Columns("TestLongName")
            Me.columnPreloadedTest = MyBase.Columns("PreloadedTest")
            Me.columnMeasureUnit = MyBase.Columns("MeasureUnit")
            Me.columnAnalysisMode = MyBase.Columns("AnalysisMode")
            Me.columnReactionType = MyBase.Columns("ReactionType")
            Me.columnDecimalsAllowed = MyBase.Columns("DecimalsAllowed")
            Me.columnReadingMode = MyBase.Columns("ReadingMode")
            Me.columnFirstReadingCycle = MyBase.Columns("FirstReadingCycle")
            Me.columnSecondReadingCycle = MyBase.Columns("SecondReadingCycle")
            Me.columnMainWavelength = MyBase.Columns("MainWavelength")
            Me.columnMainLedPosition = MyBase.Columns("MainLedPosition")
            Me.columnReferenceWavelength = MyBase.Columns("ReferenceWavelength")
            Me.columnReferenceLedPosition = MyBase.Columns("ReferenceLedPosition")
            Me.columnBlankMode = MyBase.Columns("BlankMode")
            Me.columnProzoneRatio = MyBase.Columns("ProzoneRatio")
            Me.columnProzoneTime1 = MyBase.Columns("ProzoneTime1")
            Me.columnProzoneTime2 = MyBase.Columns("ProzoneTime2")
            Me.columnSampleVolume = MyBase.Columns("SampleVolume")
            Me.columnPredilutionFactor = MyBase.Columns("PredilutionFactor")
            Me.columnPredilutionMode = MyBase.Columns("PredilutionMode")
            Me.columnDiluentSolution = MyBase.Columns("DiluentSolution")
            Me.columnPredilutedSampleVol = MyBase.Columns("PredilutedSampleVol")
            Me.columnPredilutedDiluentVol = MyBase.Columns("PredilutedDiluentVol")
            Me.columnRedPostdilutionFactor = MyBase.Columns("RedPostdilutionFactor")
            Me.columnRedPostSampleVolume = MyBase.Columns("RedPostSampleVolume")
            Me.columnIncPostdilutionFactor = MyBase.Columns("IncPostdilutionFactor")
            Me.columnIncPostSampleVolume = MyBase.Columns("IncPostSampleVolume")
            Me.columnLinearityLimit = MyBase.Columns("LinearityLimit")
            Me.columnDetectionLimit = MyBase.Columns("DetectionLimit")
            Me.columnSlopeFactorA = MyBase.Columns("SlopeFactorA")
            Me.columnSlopeFactorB = MyBase.Columns("SlopeFactorB")
            Me.columnSubstrateDepletionValue = MyBase.Columns("SubstrateDepletionValue")
            Me.columnCalibratorType = MyBase.Columns("CalibratorType")
            Me.columnCalibratorFactor = MyBase.Columns("CalibratorFactor")
            Me.columnHistCalibratorID = MyBase.Columns("HistCalibratorID")
            Me.columnCalibPointUsed = MyBase.Columns("CalibPointUsed")
            Me.columnCurveGrowthType = MyBase.Columns("CurveGrowthType")
            Me.columnCurveType = MyBase.Columns("CurveType")
            Me.columnCurveAxisXType = MyBase.Columns("CurveAxisXType")
            Me.columnCurveAxisYType = MyBase.Columns("CurveAxisYType")
            Me.columnHistReagent1ID = MyBase.Columns("HistReagent1ID")
            Me.columnReagent1Volume = MyBase.Columns("Reagent1Volume")
            Me.columnRedPostReagent1Volume = MyBase.Columns("RedPostReagent1Volume")
            Me.columnIncPostReagent1Volume = MyBase.Columns("IncPostReagent1Volume")
            Me.columnHistReagent2ID = MyBase.Columns("HistReagent2ID")
            Me.columnReagent2Volume = MyBase.Columns("Reagent2Volume")
            Me.columnRedPostReagent2Volume = MyBase.Columns("RedPostReagent2Volume")
            Me.columnIncPostReagent2Volume = MyBase.Columns("IncPostReagent2Volume")
            Me.columnTestVersionDateTime = MyBase.Columns("TestVersionDateTime")
            Me.columnClosedTestVersion = MyBase.Columns("ClosedTestVersion")
            Me.columnClosedTestSample = MyBase.Columns("ClosedTestSample")
            Me.columnAlternativeSampleType = MyBase.Columns("AlternativeSampleType")
            Me.columnBlankAbsorbanceLimit = MyBase.Columns("BlankAbsorbanceLimit")
            Me.columnKineticBlankLimit = MyBase.Columns("KineticBlankLimit")
            Me.columnFactorLowerLimit = MyBase.Columns("FactorLowerLimit")
            Me.columnFactorUpperLimit = MyBase.Columns("FactorUpperLimit")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnHistTestID = New Global.System.Data.DataColumn("HistTestID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHistTestID)
            Me.columnSampleType = New Global.System.Data.DataColumn("SampleType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSampleType)
            Me.columnTestVersionNumber = New Global.System.Data.DataColumn("TestVersionNumber", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTestVersionNumber)
            Me.columnTestID = New Global.System.Data.DataColumn("TestID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTestID)
            Me.columnTestName = New Global.System.Data.DataColumn("TestName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTestName)
            Me.columnTestLongName = New Global.System.Data.DataColumn("TestLongName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTestLongName)
            Me.columnPreloadedTest = New Global.System.Data.DataColumn("PreloadedTest", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPreloadedTest)
            Me.columnMeasureUnit = New Global.System.Data.DataColumn("MeasureUnit", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMeasureUnit)
            Me.columnAnalysisMode = New Global.System.Data.DataColumn("AnalysisMode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAnalysisMode)
            Me.columnReactionType = New Global.System.Data.DataColumn("ReactionType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReactionType)
            Me.columnDecimalsAllowed = New Global.System.Data.DataColumn("DecimalsAllowed", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDecimalsAllowed)
            Me.columnReadingMode = New Global.System.Data.DataColumn("ReadingMode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReadingMode)
            Me.columnFirstReadingCycle = New Global.System.Data.DataColumn("FirstReadingCycle", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFirstReadingCycle)
            Me.columnSecondReadingCycle = New Global.System.Data.DataColumn("SecondReadingCycle", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSecondReadingCycle)
            Me.columnMainWavelength = New Global.System.Data.DataColumn("MainWavelength", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMainWavelength)
            Me.columnMainLedPosition = New Global.System.Data.DataColumn("MainLedPosition", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMainLedPosition)
            Me.columnReferenceWavelength = New Global.System.Data.DataColumn("ReferenceWavelength", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReferenceWavelength)
            Me.columnReferenceLedPosition = New Global.System.Data.DataColumn("ReferenceLedPosition", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReferenceLedPosition)
            Me.columnBlankMode = New Global.System.Data.DataColumn("BlankMode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBlankMode)
            Me.columnProzoneRatio = New Global.System.Data.DataColumn("ProzoneRatio", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProzoneRatio)
            Me.columnProzoneTime1 = New Global.System.Data.DataColumn("ProzoneTime1", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProzoneTime1)
            Me.columnProzoneTime2 = New Global.System.Data.DataColumn("ProzoneTime2", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProzoneTime2)
            Me.columnSampleVolume = New Global.System.Data.DataColumn("SampleVolume", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSampleVolume)
            Me.columnPredilutionFactor = New Global.System.Data.DataColumn("PredilutionFactor", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPredilutionFactor)
            Me.columnPredilutionMode = New Global.System.Data.DataColumn("PredilutionMode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPredilutionMode)
            Me.columnDiluentSolution = New Global.System.Data.DataColumn("DiluentSolution", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDiluentSolution)
            Me.columnPredilutedSampleVol = New Global.System.Data.DataColumn("PredilutedSampleVol", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPredilutedSampleVol)
            Me.columnPredilutedDiluentVol = New Global.System.Data.DataColumn("PredilutedDiluentVol", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPredilutedDiluentVol)
            Me.columnRedPostdilutionFactor = New Global.System.Data.DataColumn("RedPostdilutionFactor", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRedPostdilutionFactor)
            Me.columnRedPostSampleVolume = New Global.System.Data.DataColumn("RedPostSampleVolume", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRedPostSampleVolume)
            Me.columnIncPostdilutionFactor = New Global.System.Data.DataColumn("IncPostdilutionFactor", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIncPostdilutionFactor)
            Me.columnIncPostSampleVolume = New Global.System.Data.DataColumn("IncPostSampleVolume", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIncPostSampleVolume)
            Me.columnLinearityLimit = New Global.System.Data.DataColumn("LinearityLimit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLinearityLimit)
            Me.columnDetectionLimit = New Global.System.Data.DataColumn("DetectionLimit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDetectionLimit)
            Me.columnSlopeFactorA = New Global.System.Data.DataColumn("SlopeFactorA", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSlopeFactorA)
            Me.columnSlopeFactorB = New Global.System.Data.DataColumn("SlopeFactorB", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSlopeFactorB)
            Me.columnSubstrateDepletionValue = New Global.System.Data.DataColumn("SubstrateDepletionValue", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubstrateDepletionValue)
            Me.columnCalibratorType = New Global.System.Data.DataColumn("CalibratorType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCalibratorType)
            Me.columnCalibratorFactor = New Global.System.Data.DataColumn("CalibratorFactor", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCalibratorFactor)
            Me.columnHistCalibratorID = New Global.System.Data.DataColumn("HistCalibratorID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHistCalibratorID)
            Me.columnCalibPointUsed = New Global.System.Data.DataColumn("CalibPointUsed", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCalibPointUsed)
            Me.columnCurveGrowthType = New Global.System.Data.DataColumn("CurveGrowthType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCurveGrowthType)
            Me.columnCurveType = New Global.System.Data.DataColumn("CurveType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCurveType)
            Me.columnCurveAxisXType = New Global.System.Data.DataColumn("CurveAxisXType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCurveAxisXType)
            Me.columnCurveAxisYType = New Global.System.Data.DataColumn("CurveAxisYType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCurveAxisYType)
            Me.columnHistReagent1ID = New Global.System.Data.DataColumn("HistReagent1ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHistReagent1ID)
            Me.columnReagent1Volume = New Global.System.Data.DataColumn("Reagent1Volume", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReagent1Volume)
            Me.columnRedPostReagent1Volume = New Global.System.Data.DataColumn("RedPostReagent1Volume", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRedPostReagent1Volume)
            Me.columnIncPostReagent1Volume = New Global.System.Data.DataColumn("IncPostReagent1Volume", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIncPostReagent1Volume)
            Me.columnHistReagent2ID = New Global.System.Data.DataColumn("HistReagent2ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHistReagent2ID)
            Me.columnReagent2Volume = New Global.System.Data.DataColumn("Reagent2Volume", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReagent2Volume)
            Me.columnRedPostReagent2Volume = New Global.System.Data.DataColumn("RedPostReagent2Volume", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRedPostReagent2Volume)
            Me.columnIncPostReagent2Volume = New Global.System.Data.DataColumn("IncPostReagent2Volume", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIncPostReagent2Volume)
            Me.columnTestVersionDateTime = New Global.System.Data.DataColumn("TestVersionDateTime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTestVersionDateTime)
            Me.columnClosedTestVersion = New Global.System.Data.DataColumn("ClosedTestVersion", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClosedTestVersion)
            Me.columnClosedTestSample = New Global.System.Data.DataColumn("ClosedTestSample", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClosedTestSample)
            Me.columnAlternativeSampleType = New Global.System.Data.DataColumn("AlternativeSampleType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAlternativeSampleType)
            Me.columnBlankAbsorbanceLimit = New Global.System.Data.DataColumn("BlankAbsorbanceLimit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBlankAbsorbanceLimit)
            Me.columnKineticBlankLimit = New Global.System.Data.DataColumn("KineticBlankLimit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKineticBlankLimit)
            Me.columnFactorLowerLimit = New Global.System.Data.DataColumn("FactorLowerLimit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFactorLowerLimit)
            Me.columnFactorUpperLimit = New Global.System.Data.DataColumn("FactorUpperLimit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFactorUpperLimit)
            Me.columnSampleType.DefaultValue = CType("",String)
            Me.columnTestName.DefaultValue = CType("",String)
            Me.columnTestLongName.DefaultValue = CType("",String)
            Me.columnMeasureUnit.DefaultValue = CType("",String)
            Me.columnAnalysisMode.DefaultValue = CType("",String)
            Me.columnReactionType.DefaultValue = CType("",String)
            Me.columnReadingMode.DefaultValue = CType("",String)
            Me.columnBlankMode.DefaultValue = CType("",String)
            Me.columnPredilutionMode.DefaultValue = CType("",String)
            Me.columnDiluentSolution.DefaultValue = CType("",String)
            Me.columnCalibratorType.DefaultValue = CType("",String)
            Me.columnCurveGrowthType.DefaultValue = CType("",String)
            Me.columnCurveType.DefaultValue = CType("",String)
            Me.columnCurveAxisXType.DefaultValue = CType("",String)
            Me.columnCurveAxisYType.DefaultValue = CType("",String)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewthisTestSamplesRow() As thisTestSamplesRow
            Return CType(Me.NewRow,thisTestSamplesRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New thisTestSamplesRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(thisTestSamplesRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.thisTestSamplesRowChangedEvent) Is Nothing) Then
                RaiseEvent thisTestSamplesRowChanged(Me, New thisTestSamplesRowChangeEvent(CType(e.Row,thisTestSamplesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.thisTestSamplesRowChangingEvent) Is Nothing) Then
                RaiseEvent thisTestSamplesRowChanging(Me, New thisTestSamplesRowChangeEvent(CType(e.Row,thisTestSamplesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.thisTestSamplesRowDeletedEvent) Is Nothing) Then
                RaiseEvent thisTestSamplesRowDeleted(Me, New thisTestSamplesRowChangeEvent(CType(e.Row,thisTestSamplesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.thisTestSamplesRowDeletingEvent) Is Nothing) Then
                RaiseEvent thisTestSamplesRowDeleting(Me, New thisTestSamplesRowChangeEvent(CType(e.Row,thisTestSamplesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovethisTestSamplesRow(ByVal row As thisTestSamplesRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As HisTestSamplesDS = New HisTestSamplesDS()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "thisTestSamplesDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class thisTestSamplesRow
        Inherits Global.System.Data.DataRow
        
        Private tablethisTestSamples As thisTestSamplesDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablethisTestSamples = CType(Me.Table,thisTestSamplesDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HistTestID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablethisTestSamples.HistTestIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HistTestID' in table 'thisTestSamples' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablethisTestSamples.HistTestIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SampleType() As String
            Get
                If Me.IsSampleTypeNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablethisTestSamples.SampleTypeColumn),String)
                End If
            End Get
            Set
                Me(Me.tablethisTestSamples.SampleTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TestVersionNumber() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablethisTestSamples.TestVersionNumberColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TestVersionNumber' in table 'thisTestSamples' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablethisTestSamples.TestVersionNumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TestID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablethisTestSamples.TestIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TestID' in table 'thisTestSamples' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablethisTestSamples.TestIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TestName() As String
            Get
                If Me.IsTestNameNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablethisTestSamples.TestNameColumn),String)
                End If
            End Get
            Set
                Me(Me.tablethisTestSamples.TestNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TestLongName() As String
            Get
                If Me.IsTestLongNameNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tablethisTestSamples.TestLongNameColumn),String)
                End If
            End Get
            Set
                Me(Me.tablethisTestSamples.TestLongNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PreloadedTest() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablethisTestSamples.PreloadedTestColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PreloadedTest' in table 'thisTestSamples' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablethisTestSamples.PreloadedTestColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MeasureUnit() As String
            Get
                If Me.IsMeasureUnitNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablethisTestSamples.MeasureUnitColumn),String)
                End If
            End Get
            Set
                Me(Me.tablethisTestSamples.MeasureUnitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AnalysisMode() As String
            Get
                If Me.IsAnalysisModeNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablethisTestSamples.AnalysisModeColumn),String)
                End If
            End Get
            Set
                Me(Me.tablethisTestSamples.AnalysisModeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ReactionType() As String
            Get
                If Me.IsReactionTypeNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablethisTestSamples.ReactionTypeColumn),String)
                End If
            End Get
            Set
                Me(Me.tablethisTestSamples.ReactionTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DecimalsAllowed() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablethisTestSamples.DecimalsAllowedColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DecimalsAllowed' in table 'thisTestSamples' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablethisTestSamples.DecimalsAllowedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ReadingMode() As String
            Get
                If Me.IsReadingModeNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablethisTestSamples.ReadingModeColumn),String)
                End If
            End Get
            Set
                Me(Me.tablethisTestSamples.ReadingModeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FirstReadingCycle() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablethisTestSamples.FirstReadingCycleColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FirstReadingCycle' in table 'thisTestSamples' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablethisTestSamples.FirstReadingCycleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SecondReadingCycle() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablethisTestSamples.SecondReadingCycleColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SecondReadingCycle' in table 'thisTestSamples' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablethisTestSamples.SecondReadingCycleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MainWavelength() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablethisTestSamples.MainWavelengthColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MainWavelength' in table 'thisTestSamples' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablethisTestSamples.MainWavelengthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MainLedPosition() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablethisTestSamples.MainLedPositionColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MainLedPosition' in table 'thisTestSamples' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablethisTestSamples.MainLedPositionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ReferenceWavelength() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablethisTestSamples.ReferenceWavelengthColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ReferenceWavelength' in table 'thisTestSamples' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablethisTestSamples.ReferenceWavelengthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ReferenceLedPosition() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablethisTestSamples.ReferenceLedPositionColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ReferenceLedPosition' in table 'thisTestSamples' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablethisTestSamples.ReferenceLedPositionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BlankMode() As String
            Get
                If Me.IsBlankModeNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablethisTestSamples.BlankModeColumn),String)
                End If
            End Get
            Set
                Me(Me.tablethisTestSamples.BlankModeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ProzoneRatio() As Single
            Get
                Try 
                    Return CType(Me(Me.tablethisTestSamples.ProzoneRatioColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProzoneRatio' in table 'thisTestSamples' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablethisTestSamples.ProzoneRatioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ProzoneTime1() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablethisTestSamples.ProzoneTime1Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProzoneTime1' in table 'thisTestSamples' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablethisTestSamples.ProzoneTime1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ProzoneTime2() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablethisTestSamples.ProzoneTime2Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProzoneTime2' in table 'thisTestSamples' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablethisTestSamples.ProzoneTime2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SampleVolume() As Single
            Get
                Try 
                    Return CType(Me(Me.tablethisTestSamples.SampleVolumeColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SampleVolume' in table 'thisTestSamples' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablethisTestSamples.SampleVolumeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PredilutionFactor() As Single
            Get
                Try 
                    Return CType(Me(Me.tablethisTestSamples.PredilutionFactorColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PredilutionFactor' in table 'thisTestSamples' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablethisTestSamples.PredilutionFactorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PredilutionMode() As String
            Get
                If Me.IsPredilutionModeNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablethisTestSamples.PredilutionModeColumn),String)
                End If
            End Get
            Set
                Me(Me.tablethisTestSamples.PredilutionModeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DiluentSolution() As String
            Get
                If Me.IsDiluentSolutionNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablethisTestSamples.DiluentSolutionColumn),String)
                End If
            End Get
            Set
                Me(Me.tablethisTestSamples.DiluentSolutionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PredilutedSampleVol() As Single
            Get
                Try 
                    Return CType(Me(Me.tablethisTestSamples.PredilutedSampleVolColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PredilutedSampleVol' in table 'thisTestSamples' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablethisTestSamples.PredilutedSampleVolColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PredilutedDiluentVol() As Single
            Get
                Try 
                    Return CType(Me(Me.tablethisTestSamples.PredilutedDiluentVolColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PredilutedDiluentVol' in table 'thisTestSamples' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablethisTestSamples.PredilutedDiluentVolColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RedPostdilutionFactor() As Single
            Get
                Try 
                    Return CType(Me(Me.tablethisTestSamples.RedPostdilutionFactorColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RedPostdilutionFactor' in table 'thisTestSamples' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablethisTestSamples.RedPostdilutionFactorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RedPostSampleVolume() As Single
            Get
                Try 
                    Return CType(Me(Me.tablethisTestSamples.RedPostSampleVolumeColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RedPostSampleVolume' in table 'thisTestSamples' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablethisTestSamples.RedPostSampleVolumeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IncPostdilutionFactor() As Single
            Get
                Try 
                    Return CType(Me(Me.tablethisTestSamples.IncPostdilutionFactorColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IncPostdilutionFactor' in table 'thisTestSamples' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablethisTestSamples.IncPostdilutionFactorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IncPostSampleVolume() As Single
            Get
                Try 
                    Return CType(Me(Me.tablethisTestSamples.IncPostSampleVolumeColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IncPostSampleVolume' in table 'thisTestSamples' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablethisTestSamples.IncPostSampleVolumeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LinearityLimit() As Single
            Get
                Try 
                    Return CType(Me(Me.tablethisTestSamples.LinearityLimitColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LinearityLimit' in table 'thisTestSamples' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablethisTestSamples.LinearityLimitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DetectionLimit() As Single
            Get
                Try 
                    Return CType(Me(Me.tablethisTestSamples.DetectionLimitColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DetectionLimit' in table 'thisTestSamples' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablethisTestSamples.DetectionLimitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SlopeFactorA() As Single
            Get
                Try 
                    Return CType(Me(Me.tablethisTestSamples.SlopeFactorAColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SlopeFactorA' in table 'thisTestSamples' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablethisTestSamples.SlopeFactorAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SlopeFactorB() As Single
            Get
                Try 
                    Return CType(Me(Me.tablethisTestSamples.SlopeFactorBColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SlopeFactorB' in table 'thisTestSamples' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablethisTestSamples.SlopeFactorBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SubstrateDepletionValue() As Single
            Get
                Try 
                    Return CType(Me(Me.tablethisTestSamples.SubstrateDepletionValueColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SubstrateDepletionValue' in table 'thisTestSamples' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tablethisTestSamples.SubstrateDepletionValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CalibratorType() As String
            Get
                If Me.IsCalibratorTypeNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablethisTestSamples.CalibratorTypeColumn),String)
                End If
            End Get
            Set
                Me(Me.tablethisTestSamples.CalibratorTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CalibratorFactor() As Single
            Get
                Try 
                    Return CType(Me(Me.tablethisTestSamples.CalibratorFactorColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CalibratorFactor' in table 'thisTestSamples' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablethisTestSamples.CalibratorFactorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HistCalibratorID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablethisTestSamples.HistCalibratorIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HistCalibratorID' in table 'thisTestSamples' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablethisTestSamples.HistCalibratorIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CalibPointUsed() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablethisTestSamples.CalibPointUsedColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CalibPointUsed' in table 'thisTestSamples' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablethisTestSamples.CalibPointUsedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CurveGrowthType() As String
            Get
                If Me.IsCurveGrowthTypeNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablethisTestSamples.CurveGrowthTypeColumn),String)
                End If
            End Get
            Set
                Me(Me.tablethisTestSamples.CurveGrowthTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CurveType() As String
            Get
                If Me.IsCurveTypeNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablethisTestSamples.CurveTypeColumn),String)
                End If
            End Get
            Set
                Me(Me.tablethisTestSamples.CurveTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CurveAxisXType() As String
            Get
                If Me.IsCurveAxisXTypeNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablethisTestSamples.CurveAxisXTypeColumn),String)
                End If
            End Get
            Set
                Me(Me.tablethisTestSamples.CurveAxisXTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CurveAxisYType() As String
            Get
                If Me.IsCurveAxisYTypeNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablethisTestSamples.CurveAxisYTypeColumn),String)
                End If
            End Get
            Set
                Me(Me.tablethisTestSamples.CurveAxisYTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HistReagent1ID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablethisTestSamples.HistReagent1IDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HistReagent1ID' in table 'thisTestSamples' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablethisTestSamples.HistReagent1IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Reagent1Volume() As Single
            Get
                Try 
                    Return CType(Me(Me.tablethisTestSamples.Reagent1VolumeColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Reagent1Volume' in table 'thisTestSamples' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablethisTestSamples.Reagent1VolumeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RedPostReagent1Volume() As Single
            Get
                Try 
                    Return CType(Me(Me.tablethisTestSamples.RedPostReagent1VolumeColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RedPostReagent1Volume' in table 'thisTestSamples' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablethisTestSamples.RedPostReagent1VolumeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IncPostReagent1Volume() As Single
            Get
                Try 
                    Return CType(Me(Me.tablethisTestSamples.IncPostReagent1VolumeColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IncPostReagent1Volume' in table 'thisTestSamples' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablethisTestSamples.IncPostReagent1VolumeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HistReagent2ID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablethisTestSamples.HistReagent2IDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HistReagent2ID' in table 'thisTestSamples' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablethisTestSamples.HistReagent2IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Reagent2Volume() As Single
            Get
                Try 
                    Return CType(Me(Me.tablethisTestSamples.Reagent2VolumeColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Reagent2Volume' in table 'thisTestSamples' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablethisTestSamples.Reagent2VolumeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RedPostReagent2Volume() As Single
            Get
                Try 
                    Return CType(Me(Me.tablethisTestSamples.RedPostReagent2VolumeColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RedPostReagent2Volume' in table 'thisTestSamples' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablethisTestSamples.RedPostReagent2VolumeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IncPostReagent2Volume() As Single
            Get
                Try 
                    Return CType(Me(Me.tablethisTestSamples.IncPostReagent2VolumeColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IncPostReagent2Volume' in table 'thisTestSamples' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablethisTestSamples.IncPostReagent2VolumeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TestVersionDateTime() As Date
            Get
                Try 
                    Return CType(Me(Me.tablethisTestSamples.TestVersionDateTimeColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TestVersionDateTime' in table 'thisTestSamples' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablethisTestSamples.TestVersionDateTimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClosedTestVersion() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablethisTestSamples.ClosedTestVersionColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ClosedTestVersion' in table 'thisTestSamples' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablethisTestSamples.ClosedTestVersionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClosedTestSample() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablethisTestSamples.ClosedTestSampleColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ClosedTestSample' in table 'thisTestSamples' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablethisTestSamples.ClosedTestSampleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AlternativeSampleType() As String
            Get
                If Me.IsAlternativeSampleTypeNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablethisTestSamples.AlternativeSampleTypeColumn),String)
                End If
            End Get
            Set
                Me(Me.tablethisTestSamples.AlternativeSampleTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BlankAbsorbanceLimit() As Single
            Get
                Try 
                    Return CType(Me(Me.tablethisTestSamples.BlankAbsorbanceLimitColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BlankAbsorbanceLimit' in table 'thisTestSamples' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablethisTestSamples.BlankAbsorbanceLimitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property KineticBlankLimit() As Single
            Get
                Try 
                    Return CType(Me(Me.tablethisTestSamples.KineticBlankLimitColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KineticBlankLimit' in table 'thisTestSamples' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablethisTestSamples.KineticBlankLimitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FactorLowerLimit() As Single
            Get
                Try 
                    Return CType(Me(Me.tablethisTestSamples.FactorLowerLimitColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FactorLowerLimit' in table 'thisTestSamples' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablethisTestSamples.FactorLowerLimitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FactorUpperLimit() As Single
            Get
                Try 
                    Return CType(Me(Me.tablethisTestSamples.FactorUpperLimitColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FactorUpperLimit' in table 'thisTestSamples' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablethisTestSamples.FactorUpperLimitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHistTestIDNull() As Boolean
            Return Me.IsNull(Me.tablethisTestSamples.HistTestIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHistTestIDNull()
            Me(Me.tablethisTestSamples.HistTestIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSampleTypeNull() As Boolean
            Return Me.IsNull(Me.tablethisTestSamples.SampleTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSampleTypeNull()
            Me(Me.tablethisTestSamples.SampleTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTestVersionNumberNull() As Boolean
            Return Me.IsNull(Me.tablethisTestSamples.TestVersionNumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTestVersionNumberNull()
            Me(Me.tablethisTestSamples.TestVersionNumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTestIDNull() As Boolean
            Return Me.IsNull(Me.tablethisTestSamples.TestIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTestIDNull()
            Me(Me.tablethisTestSamples.TestIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTestNameNull() As Boolean
            Return Me.IsNull(Me.tablethisTestSamples.TestNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTestNameNull()
            Me(Me.tablethisTestSamples.TestNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTestLongNameNull() As Boolean
            Return Me.IsNull(Me.tablethisTestSamples.TestLongNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTestLongNameNull()
            Me(Me.tablethisTestSamples.TestLongNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPreloadedTestNull() As Boolean
            Return Me.IsNull(Me.tablethisTestSamples.PreloadedTestColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPreloadedTestNull()
            Me(Me.tablethisTestSamples.PreloadedTestColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMeasureUnitNull() As Boolean
            Return Me.IsNull(Me.tablethisTestSamples.MeasureUnitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMeasureUnitNull()
            Me(Me.tablethisTestSamples.MeasureUnitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAnalysisModeNull() As Boolean
            Return Me.IsNull(Me.tablethisTestSamples.AnalysisModeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAnalysisModeNull()
            Me(Me.tablethisTestSamples.AnalysisModeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsReactionTypeNull() As Boolean
            Return Me.IsNull(Me.tablethisTestSamples.ReactionTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetReactionTypeNull()
            Me(Me.tablethisTestSamples.ReactionTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDecimalsAllowedNull() As Boolean
            Return Me.IsNull(Me.tablethisTestSamples.DecimalsAllowedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDecimalsAllowedNull()
            Me(Me.tablethisTestSamples.DecimalsAllowedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsReadingModeNull() As Boolean
            Return Me.IsNull(Me.tablethisTestSamples.ReadingModeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetReadingModeNull()
            Me(Me.tablethisTestSamples.ReadingModeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFirstReadingCycleNull() As Boolean
            Return Me.IsNull(Me.tablethisTestSamples.FirstReadingCycleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFirstReadingCycleNull()
            Me(Me.tablethisTestSamples.FirstReadingCycleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSecondReadingCycleNull() As Boolean
            Return Me.IsNull(Me.tablethisTestSamples.SecondReadingCycleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSecondReadingCycleNull()
            Me(Me.tablethisTestSamples.SecondReadingCycleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMainWavelengthNull() As Boolean
            Return Me.IsNull(Me.tablethisTestSamples.MainWavelengthColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMainWavelengthNull()
            Me(Me.tablethisTestSamples.MainWavelengthColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMainLedPositionNull() As Boolean
            Return Me.IsNull(Me.tablethisTestSamples.MainLedPositionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMainLedPositionNull()
            Me(Me.tablethisTestSamples.MainLedPositionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsReferenceWavelengthNull() As Boolean
            Return Me.IsNull(Me.tablethisTestSamples.ReferenceWavelengthColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetReferenceWavelengthNull()
            Me(Me.tablethisTestSamples.ReferenceWavelengthColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsReferenceLedPositionNull() As Boolean
            Return Me.IsNull(Me.tablethisTestSamples.ReferenceLedPositionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetReferenceLedPositionNull()
            Me(Me.tablethisTestSamples.ReferenceLedPositionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBlankModeNull() As Boolean
            Return Me.IsNull(Me.tablethisTestSamples.BlankModeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBlankModeNull()
            Me(Me.tablethisTestSamples.BlankModeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProzoneRatioNull() As Boolean
            Return Me.IsNull(Me.tablethisTestSamples.ProzoneRatioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProzoneRatioNull()
            Me(Me.tablethisTestSamples.ProzoneRatioColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProzoneTime1Null() As Boolean
            Return Me.IsNull(Me.tablethisTestSamples.ProzoneTime1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProzoneTime1Null()
            Me(Me.tablethisTestSamples.ProzoneTime1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProzoneTime2Null() As Boolean
            Return Me.IsNull(Me.tablethisTestSamples.ProzoneTime2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProzoneTime2Null()
            Me(Me.tablethisTestSamples.ProzoneTime2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSampleVolumeNull() As Boolean
            Return Me.IsNull(Me.tablethisTestSamples.SampleVolumeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSampleVolumeNull()
            Me(Me.tablethisTestSamples.SampleVolumeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPredilutionFactorNull() As Boolean
            Return Me.IsNull(Me.tablethisTestSamples.PredilutionFactorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPredilutionFactorNull()
            Me(Me.tablethisTestSamples.PredilutionFactorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPredilutionModeNull() As Boolean
            Return Me.IsNull(Me.tablethisTestSamples.PredilutionModeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPredilutionModeNull()
            Me(Me.tablethisTestSamples.PredilutionModeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDiluentSolutionNull() As Boolean
            Return Me.IsNull(Me.tablethisTestSamples.DiluentSolutionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDiluentSolutionNull()
            Me(Me.tablethisTestSamples.DiluentSolutionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPredilutedSampleVolNull() As Boolean
            Return Me.IsNull(Me.tablethisTestSamples.PredilutedSampleVolColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPredilutedSampleVolNull()
            Me(Me.tablethisTestSamples.PredilutedSampleVolColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPredilutedDiluentVolNull() As Boolean
            Return Me.IsNull(Me.tablethisTestSamples.PredilutedDiluentVolColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPredilutedDiluentVolNull()
            Me(Me.tablethisTestSamples.PredilutedDiluentVolColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRedPostdilutionFactorNull() As Boolean
            Return Me.IsNull(Me.tablethisTestSamples.RedPostdilutionFactorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRedPostdilutionFactorNull()
            Me(Me.tablethisTestSamples.RedPostdilutionFactorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRedPostSampleVolumeNull() As Boolean
            Return Me.IsNull(Me.tablethisTestSamples.RedPostSampleVolumeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRedPostSampleVolumeNull()
            Me(Me.tablethisTestSamples.RedPostSampleVolumeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIncPostdilutionFactorNull() As Boolean
            Return Me.IsNull(Me.tablethisTestSamples.IncPostdilutionFactorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIncPostdilutionFactorNull()
            Me(Me.tablethisTestSamples.IncPostdilutionFactorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIncPostSampleVolumeNull() As Boolean
            Return Me.IsNull(Me.tablethisTestSamples.IncPostSampleVolumeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIncPostSampleVolumeNull()
            Me(Me.tablethisTestSamples.IncPostSampleVolumeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLinearityLimitNull() As Boolean
            Return Me.IsNull(Me.tablethisTestSamples.LinearityLimitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLinearityLimitNull()
            Me(Me.tablethisTestSamples.LinearityLimitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDetectionLimitNull() As Boolean
            Return Me.IsNull(Me.tablethisTestSamples.DetectionLimitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDetectionLimitNull()
            Me(Me.tablethisTestSamples.DetectionLimitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSlopeFactorANull() As Boolean
            Return Me.IsNull(Me.tablethisTestSamples.SlopeFactorAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSlopeFactorANull()
            Me(Me.tablethisTestSamples.SlopeFactorAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSlopeFactorBNull() As Boolean
            Return Me.IsNull(Me.tablethisTestSamples.SlopeFactorBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSlopeFactorBNull()
            Me(Me.tablethisTestSamples.SlopeFactorBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSubstrateDepletionValueNull() As Boolean
            Return Me.IsNull(Me.tablethisTestSamples.SubstrateDepletionValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSubstrateDepletionValueNull()
            Me(Me.tablethisTestSamples.SubstrateDepletionValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCalibratorTypeNull() As Boolean
            Return Me.IsNull(Me.tablethisTestSamples.CalibratorTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCalibratorTypeNull()
            Me(Me.tablethisTestSamples.CalibratorTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCalibratorFactorNull() As Boolean
            Return Me.IsNull(Me.tablethisTestSamples.CalibratorFactorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCalibratorFactorNull()
            Me(Me.tablethisTestSamples.CalibratorFactorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHistCalibratorIDNull() As Boolean
            Return Me.IsNull(Me.tablethisTestSamples.HistCalibratorIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHistCalibratorIDNull()
            Me(Me.tablethisTestSamples.HistCalibratorIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCalibPointUsedNull() As Boolean
            Return Me.IsNull(Me.tablethisTestSamples.CalibPointUsedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCalibPointUsedNull()
            Me(Me.tablethisTestSamples.CalibPointUsedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCurveGrowthTypeNull() As Boolean
            Return Me.IsNull(Me.tablethisTestSamples.CurveGrowthTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCurveGrowthTypeNull()
            Me(Me.tablethisTestSamples.CurveGrowthTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCurveTypeNull() As Boolean
            Return Me.IsNull(Me.tablethisTestSamples.CurveTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCurveTypeNull()
            Me(Me.tablethisTestSamples.CurveTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCurveAxisXTypeNull() As Boolean
            Return Me.IsNull(Me.tablethisTestSamples.CurveAxisXTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCurveAxisXTypeNull()
            Me(Me.tablethisTestSamples.CurveAxisXTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCurveAxisYTypeNull() As Boolean
            Return Me.IsNull(Me.tablethisTestSamples.CurveAxisYTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCurveAxisYTypeNull()
            Me(Me.tablethisTestSamples.CurveAxisYTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHistReagent1IDNull() As Boolean
            Return Me.IsNull(Me.tablethisTestSamples.HistReagent1IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHistReagent1IDNull()
            Me(Me.tablethisTestSamples.HistReagent1IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsReagent1VolumeNull() As Boolean
            Return Me.IsNull(Me.tablethisTestSamples.Reagent1VolumeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetReagent1VolumeNull()
            Me(Me.tablethisTestSamples.Reagent1VolumeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRedPostReagent1VolumeNull() As Boolean
            Return Me.IsNull(Me.tablethisTestSamples.RedPostReagent1VolumeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRedPostReagent1VolumeNull()
            Me(Me.tablethisTestSamples.RedPostReagent1VolumeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIncPostReagent1VolumeNull() As Boolean
            Return Me.IsNull(Me.tablethisTestSamples.IncPostReagent1VolumeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIncPostReagent1VolumeNull()
            Me(Me.tablethisTestSamples.IncPostReagent1VolumeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHistReagent2IDNull() As Boolean
            Return Me.IsNull(Me.tablethisTestSamples.HistReagent2IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHistReagent2IDNull()
            Me(Me.tablethisTestSamples.HistReagent2IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsReagent2VolumeNull() As Boolean
            Return Me.IsNull(Me.tablethisTestSamples.Reagent2VolumeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetReagent2VolumeNull()
            Me(Me.tablethisTestSamples.Reagent2VolumeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRedPostReagent2VolumeNull() As Boolean
            Return Me.IsNull(Me.tablethisTestSamples.RedPostReagent2VolumeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRedPostReagent2VolumeNull()
            Me(Me.tablethisTestSamples.RedPostReagent2VolumeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIncPostReagent2VolumeNull() As Boolean
            Return Me.IsNull(Me.tablethisTestSamples.IncPostReagent2VolumeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIncPostReagent2VolumeNull()
            Me(Me.tablethisTestSamples.IncPostReagent2VolumeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTestVersionDateTimeNull() As Boolean
            Return Me.IsNull(Me.tablethisTestSamples.TestVersionDateTimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTestVersionDateTimeNull()
            Me(Me.tablethisTestSamples.TestVersionDateTimeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsClosedTestVersionNull() As Boolean
            Return Me.IsNull(Me.tablethisTestSamples.ClosedTestVersionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetClosedTestVersionNull()
            Me(Me.tablethisTestSamples.ClosedTestVersionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsClosedTestSampleNull() As Boolean
            Return Me.IsNull(Me.tablethisTestSamples.ClosedTestSampleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetClosedTestSampleNull()
            Me(Me.tablethisTestSamples.ClosedTestSampleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAlternativeSampleTypeNull() As Boolean
            Return Me.IsNull(Me.tablethisTestSamples.AlternativeSampleTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAlternativeSampleTypeNull()
            Me(Me.tablethisTestSamples.AlternativeSampleTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBlankAbsorbanceLimitNull() As Boolean
            Return Me.IsNull(Me.tablethisTestSamples.BlankAbsorbanceLimitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBlankAbsorbanceLimitNull()
            Me(Me.tablethisTestSamples.BlankAbsorbanceLimitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKineticBlankLimitNull() As Boolean
            Return Me.IsNull(Me.tablethisTestSamples.KineticBlankLimitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKineticBlankLimitNull()
            Me(Me.tablethisTestSamples.KineticBlankLimitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFactorLowerLimitNull() As Boolean
            Return Me.IsNull(Me.tablethisTestSamples.FactorLowerLimitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFactorLowerLimitNull()
            Me(Me.tablethisTestSamples.FactorLowerLimitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFactorUpperLimitNull() As Boolean
            Return Me.IsNull(Me.tablethisTestSamples.FactorUpperLimitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFactorUpperLimitNull()
            Me(Me.tablethisTestSamples.FactorUpperLimitColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class thisTestSamplesRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As thisTestSamplesRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As thisTestSamplesRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As thisTestSamplesRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
