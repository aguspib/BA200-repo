'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.18063
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(), _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
 Global.System.ComponentModel.ToolboxItem(True), _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"), _
 Global.System.Xml.Serialization.XmlRootAttribute("SelectedTestsDS"), _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")> _
Partial Public Class SelectedTestsDS
    Inherits Global.System.Data.DataSet

    Private tableSelectedTestTable As SelectedTestTableDataTable

    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub New()
        MyBase.New()
        Me.BeginInit()
        Me.InitClass()
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit()
        Me.InitExpressions()
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, False)
        If (Me.IsBinarySerialized(info, context) = True) Then
            Me.InitVars(False)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.ExcludeSchema) Then
                Me.InitExpressions()
            End If
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)), String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("SelectedTestTable")) Is Nothing) Then
                MyBase.Tables.Add(New SelectedTestTableDataTable(ds.Tables("SelectedTestTable")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, False, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars()
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            Me.InitExpressions()
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property SelectedTestTable() As SelectedTestTableDataTable
        Get
            Return Me.tableSelectedTestTable
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.BrowsableAttribute(True), _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)> _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set(value As Global.System.Data.SchemaSerializationMode)
            Me._schemaSerializationMode = value
        End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)> _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)> _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit()
        Me.InitClass()
        Me.EndInit()
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As SelectedTestsDS = CType(MyBase.Clone, SelectedTestsDS)
        cln.InitVars()
        cln.InitExpressions()
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset()
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("SelectedTestTable")) Is Nothing) Then
                MyBase.Tables.Add(New SelectedTestTableDataTable(ds.Tables("SelectedTestTable")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, False, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars()
        Else
            Me.ReadXml(reader)
            Me.InitVars()
        End If
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Friend Overloads Sub InitVars()
        Me.InitVars(True)
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableSelectedTestTable = CType(MyBase.Tables("SelectedTestTable"), SelectedTestTableDataTable)
        If (initTable = True) Then
            If (Not (Me.tableSelectedTestTable) Is Nothing) Then
                Me.tableSelectedTestTable.InitVars()
            End If
        End If
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Sub InitClass()
        Me.DataSetName = "SelectedTestsDS"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/SelectedTestsDS.xsd"
        Me.EnforceConstraints = True
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableSelectedTestTable = New SelectedTestTableDataTable(False)
        MyBase.Tables.Add(Me.tableSelectedTestTable)
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializeSelectedTestTable() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars()
        End If
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As SelectedTestsDS = New SelectedTestsDS()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0

                        Do While ((s1.Position <> s1.Length) _
                                    AndAlso (s1.ReadByte = s2.ReadByte))


                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If

                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close()
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close()
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Sub InitExpressions()
        Me.SelectedTestTable.TestKeyColumn.Expression = "TestType + '|' + TestID"
    End Sub

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub SelectedTestTableRowChangeEventHandler(ByVal sender As Object, ByVal e As SelectedTestTableRowChangeEvent)

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class SelectedTestTableDataTable
        Inherits Global.System.Data.TypedTableBase(Of SelectedTestTableRow)

        Private columnRow As Global.System.Data.DataColumn

        Private columnCol As Global.System.Data.DataColumn

        Private columnSelected As Global.System.Data.DataColumn

        Private columnPartiallySelected As Global.System.Data.DataColumn

        Private columnSampleType As Global.System.Data.DataColumn

        Private columnTestType As Global.System.Data.DataColumn

        Private columnTestID As Global.System.Data.DataColumn

        Private columnTestName As Global.System.Data.DataColumn

        Private columnShortName As Global.System.Data.DataColumn

        Private columnNumReplicates As Global.System.Data.DataColumn

        Private columnTestProfileID As Global.System.Data.DataColumn

        Private columnTestProfileName As Global.System.Data.DataColumn

        Private columnOTStatus As Global.System.Data.DataColumn

        Private columnSampleID As Global.System.Data.DataColumn

        Private columnSampleIDType As Global.System.Data.DataColumn

        Private columnStatFlag As Global.System.Data.DataColumn

        Private columnNumberOfControls As Global.System.Data.DataColumn

        Private columnCalcTestIDs As Global.System.Data.DataColumn

        Private columnCalcTestNames As Global.System.Data.DataColumn

        Private columnCalcTestFormula As Global.System.Data.DataColumn

        Private columnTestKey As Global.System.Data.DataColumn

        Private columnFactoryCalib As Global.System.Data.DataColumn

        Private columnRejectionCriteria As Global.System.Data.DataColumn

        Private columnActiveControl As Global.System.Data.DataColumn

        Private columnDecimalsAllowed As Global.System.Data.DataColumn

        Private columnInUse As Global.System.Data.DataColumn

        Private columnPreloadedTest As Global.System.Data.DataColumn

        Private columnMeasureUnit As Global.System.Data.DataColumn

        Private columnTestPosition As Global.System.Data.DataColumn

        Private columnControlID As Global.System.Data.DataColumn

        Private columnLISRequest As Global.System.Data.DataColumn

        Private columnExternalQC As Global.System.Data.DataColumn

        Private columnAwosID As Global.System.Data.DataColumn

        Private columnSpecimenID As Global.System.Data.DataColumn

        Private columnESPatientID As Global.System.Data.DataColumn

        Private columnLISPatientID As Global.System.Data.DataColumn

        Private columnESOrderID As Global.System.Data.DataColumn

        Private columnLISOrderID As Global.System.Data.DataColumn

        Private columnAdded As Global.System.Data.DataColumn

        Private columnEnableStatus As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            Me.New(False)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal initExpressions As Boolean)
            MyBase.New()
            Me.TableName = "SelectedTestTable"
            Me.BeginInit()
            Me.InitClass()
            If (initExpressions = True) Then
                Me.InitExpressions()
            End If
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property RowColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ColColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCol
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SelectedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSelected
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PartiallySelectedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPartiallySelected
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SampleTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSampleType
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TestTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTestType
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TestIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTestID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TestNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTestName
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ShortNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnShortName
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NumReplicatesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumReplicates
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TestProfileIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTestProfileID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TestProfileNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTestProfileName
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property OTStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOTStatus
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SampleIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSampleID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SampleIDTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSampleIDType
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property StatFlagColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStatFlag
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NumberOfControlsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumberOfControls
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CalcTestIDsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCalcTestIDs
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CalcTestNamesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCalcTestNames
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CalcTestFormulaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCalcTestFormula
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TestKeyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTestKey
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FactoryCalibColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFactoryCalib
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property RejectionCriteriaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRejectionCriteria
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ActiveControlColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnActiveControl
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DecimalsAllowedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDecimalsAllowed
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property InUseColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInUse
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PreloadedTestColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPreloadedTest
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MeasureUnitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMeasureUnit
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TestPositionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTestPosition
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ControlIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnControlID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property LISRequestColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLISRequest
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ExternalQCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExternalQC
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property AwosIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAwosID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SpecimenIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecimenID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ESPatientIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESPatientID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property LISPatientIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLISPatientID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ESOrderIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESOrderID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property LISOrderIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLISOrderID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property AddedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAdded
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property EnableStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEnableStatus
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As SelectedTestTableRow
            Get
                Return CType(Me.Rows(index), SelectedTestTableRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event SelectedTestTableRowChanging As SelectedTestTableRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event SelectedTestTableRowChanged As SelectedTestTableRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event SelectedTestTableRowDeleting As SelectedTestTableRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event SelectedTestTableRowDeleted As SelectedTestTableRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddSelectedTestTableRow(ByVal row As SelectedTestTableRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddSelectedTestTableRow( _
                    ByVal Row As Integer, _
                    ByVal Col As Integer, _
                    ByVal Selected As Boolean, _
                    ByVal PartiallySelected As Boolean, _
                    ByVal SampleType As String, _
                    ByVal TestType As String, _
                    ByVal TestID As Integer, _
                    ByVal TestName As String, _
                    ByVal ShortName As String, _
                    ByVal NumReplicates As Integer, _
                    ByVal TestProfileID As Integer, _
                    ByVal TestProfileName As String, _
                    ByVal OTStatus As String, _
                    ByVal SampleID As String, _
                    ByVal SampleIDType As String, _
                    ByVal StatFlag As Boolean, _
                    ByVal NumberOfControls As Integer, _
                    ByVal CalcTestIDs As String, _
                    ByVal CalcTestNames As String, _
                    ByVal CalcTestFormula As String, _
                    ByVal TestKey As String, _
                    ByVal FactoryCalib As Boolean, _
                    ByVal RejectionCriteria As Single, _
                    ByVal ActiveControl As Boolean, _
                    ByVal DecimalsAllowed As Short, _
                    ByVal InUse As Boolean, _
                    ByVal PreloadedTest As Boolean, _
                    ByVal MeasureUnit As String, _
                    ByVal TestPosition As Integer, _
                    ByVal ControlID As Integer, _
                    ByVal LISRequest As Boolean, _
                    ByVal ExternalQC As Boolean, _
                    ByVal AwosID As String, _
                    ByVal SpecimenID As String, _
                    ByVal ESPatientID As String, _
                    ByVal LISPatientID As String, _
                    ByVal ESOrderID As String, _
                    ByVal LISOrderID As String, _
                    ByVal Added As Boolean, _
                    ByVal EnableStatus As Boolean) As SelectedTestTableRow
            Dim rowSelectedTestTableRow As SelectedTestTableRow = CType(Me.NewRow, SelectedTestTableRow)
            Dim columnValuesArray() As Object = New Object() {Row, Col, Selected, PartiallySelected, SampleType, TestType, TestID, TestName, ShortName, NumReplicates, TestProfileID, TestProfileName, OTStatus, SampleID, SampleIDType, StatFlag, NumberOfControls, CalcTestIDs, CalcTestNames, CalcTestFormula, TestKey, FactoryCalib, RejectionCriteria, ActiveControl, DecimalsAllowed, InUse, PreloadedTest, MeasureUnit, TestPosition, ControlID, LISRequest, ExternalQC, AwosID, SpecimenID, ESPatientID, LISPatientID, ESOrderID, LISOrderID, Added, EnableStatus}
            rowSelectedTestTableRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSelectedTestTableRow)
            Return rowSelectedTestTableRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddSelectedTestTableRow( _
                    ByVal Row As Integer, _
                    ByVal Col As Integer, _
                    ByVal Selected As Boolean, _
                    ByVal PartiallySelected As Boolean, _
                    ByVal SampleType As String, _
                    ByVal TestType As String, _
                    ByVal TestID As Integer, _
                    ByVal TestName As String, _
                    ByVal ShortName As String, _
                    ByVal NumReplicates As Integer, _
                    ByVal TestProfileID As Integer, _
                    ByVal TestProfileName As String, _
                    ByVal OTStatus As String, _
                    ByVal SampleID As String, _
                    ByVal SampleIDType As String, _
                    ByVal StatFlag As Boolean, _
                    ByVal NumberOfControls As Integer, _
                    ByVal CalcTestIDs As String, _
                    ByVal CalcTestNames As String, _
                    ByVal CalcTestFormula As String, _
                    ByVal FactoryCalib As Boolean, _
                    ByVal RejectionCriteria As Single, _
                    ByVal ActiveControl As Boolean, _
                    ByVal DecimalsAllowed As Short, _
                    ByVal InUse As Boolean, _
                    ByVal PreloadedTest As Boolean, _
                    ByVal MeasureUnit As String, _
                    ByVal TestPosition As Integer, _
                    ByVal ControlID As Integer, _
                    ByVal LISRequest As Boolean, _
                    ByVal ExternalQC As Boolean, _
                    ByVal AwosID As String, _
                    ByVal SpecimenID As String, _
                    ByVal ESPatientID As String, _
                    ByVal LISPatientID As String, _
                    ByVal ESOrderID As String, _
                    ByVal LISOrderID As String, _
                    ByVal Added As Boolean, _
                    ByVal EnableStatus As Boolean) As SelectedTestTableRow
            Dim rowSelectedTestTableRow As SelectedTestTableRow = CType(Me.NewRow, SelectedTestTableRow)
            Dim columnValuesArray() As Object = New Object() {Row, Col, Selected, PartiallySelected, SampleType, TestType, TestID, TestName, ShortName, NumReplicates, TestProfileID, TestProfileName, OTStatus, SampleID, SampleIDType, StatFlag, NumberOfControls, CalcTestIDs, CalcTestNames, CalcTestFormula, Nothing, FactoryCalib, RejectionCriteria, ActiveControl, DecimalsAllowed, InUse, PreloadedTest, MeasureUnit, TestPosition, ControlID, LISRequest, ExternalQC, AwosID, SpecimenID, ESPatientID, LISPatientID, ESOrderID, LISOrderID, Added, EnableStatus}
            rowSelectedTestTableRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSelectedTestTableRow)
            Return rowSelectedTestTableRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SelectedTestTableDataTable = CType(MyBase.Clone, SelectedTestTableDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SelectedTestTableDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnRow = MyBase.Columns("Row")
            Me.columnCol = MyBase.Columns("Col")
            Me.columnSelected = MyBase.Columns("Selected")
            Me.columnPartiallySelected = MyBase.Columns("PartiallySelected")
            Me.columnSampleType = MyBase.Columns("SampleType")
            Me.columnTestType = MyBase.Columns("TestType")
            Me.columnTestID = MyBase.Columns("TestID")
            Me.columnTestName = MyBase.Columns("TestName")
            Me.columnShortName = MyBase.Columns("ShortName")
            Me.columnNumReplicates = MyBase.Columns("NumReplicates")
            Me.columnTestProfileID = MyBase.Columns("TestProfileID")
            Me.columnTestProfileName = MyBase.Columns("TestProfileName")
            Me.columnOTStatus = MyBase.Columns("OTStatus")
            Me.columnSampleID = MyBase.Columns("SampleID")
            Me.columnSampleIDType = MyBase.Columns("SampleIDType")
            Me.columnStatFlag = MyBase.Columns("StatFlag")
            Me.columnNumberOfControls = MyBase.Columns("NumberOfControls")
            Me.columnCalcTestIDs = MyBase.Columns("CalcTestIDs")
            Me.columnCalcTestNames = MyBase.Columns("CalcTestNames")
            Me.columnCalcTestFormula = MyBase.Columns("CalcTestFormula")
            Me.columnTestKey = MyBase.Columns("TestKey")
            Me.columnFactoryCalib = MyBase.Columns("FactoryCalib")
            Me.columnRejectionCriteria = MyBase.Columns("RejectionCriteria")
            Me.columnActiveControl = MyBase.Columns("ActiveControl")
            Me.columnDecimalsAllowed = MyBase.Columns("DecimalsAllowed")
            Me.columnInUse = MyBase.Columns("InUse")
            Me.columnPreloadedTest = MyBase.Columns("PreloadedTest")
            Me.columnMeasureUnit = MyBase.Columns("MeasureUnit")
            Me.columnTestPosition = MyBase.Columns("TestPosition")
            Me.columnControlID = MyBase.Columns("ControlID")
            Me.columnLISRequest = MyBase.Columns("LISRequest")
            Me.columnExternalQC = MyBase.Columns("ExternalQC")
            Me.columnAwosID = MyBase.Columns("AwosID")
            Me.columnSpecimenID = MyBase.Columns("SpecimenID")
            Me.columnESPatientID = MyBase.Columns("ESPatientID")
            Me.columnLISPatientID = MyBase.Columns("LISPatientID")
            Me.columnESOrderID = MyBase.Columns("ESOrderID")
            Me.columnLISOrderID = MyBase.Columns("LISOrderID")
            Me.columnAdded = MyBase.Columns("Added")
            Me.columnEnableStatus = MyBase.Columns("EnableStatus")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnRow = New Global.System.Data.DataColumn("Row", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRow)
            Me.columnCol = New Global.System.Data.DataColumn("Col", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCol)
            Me.columnSelected = New Global.System.Data.DataColumn("Selected", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSelected)
            Me.columnPartiallySelected = New Global.System.Data.DataColumn("PartiallySelected", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPartiallySelected)
            Me.columnSampleType = New Global.System.Data.DataColumn("SampleType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSampleType)
            Me.columnTestType = New Global.System.Data.DataColumn("TestType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTestType)
            Me.columnTestID = New Global.System.Data.DataColumn("TestID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTestID)
            Me.columnTestName = New Global.System.Data.DataColumn("TestName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTestName)
            Me.columnShortName = New Global.System.Data.DataColumn("ShortName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnShortName)
            Me.columnNumReplicates = New Global.System.Data.DataColumn("NumReplicates", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumReplicates)
            Me.columnTestProfileID = New Global.System.Data.DataColumn("TestProfileID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTestProfileID)
            Me.columnTestProfileName = New Global.System.Data.DataColumn("TestProfileName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTestProfileName)
            Me.columnOTStatus = New Global.System.Data.DataColumn("OTStatus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOTStatus)
            Me.columnSampleID = New Global.System.Data.DataColumn("SampleID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSampleID)
            Me.columnSampleIDType = New Global.System.Data.DataColumn("SampleIDType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSampleIDType)
            Me.columnStatFlag = New Global.System.Data.DataColumn("StatFlag", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStatFlag)
            Me.columnNumberOfControls = New Global.System.Data.DataColumn("NumberOfControls", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumberOfControls)
            Me.columnCalcTestIDs = New Global.System.Data.DataColumn("CalcTestIDs", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCalcTestIDs)
            Me.columnCalcTestNames = New Global.System.Data.DataColumn("CalcTestNames", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCalcTestNames)
            Me.columnCalcTestFormula = New Global.System.Data.DataColumn("CalcTestFormula", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCalcTestFormula)
            Me.columnTestKey = New Global.System.Data.DataColumn("TestKey", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTestKey)
            Me.columnFactoryCalib = New Global.System.Data.DataColumn("FactoryCalib", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFactoryCalib)
            Me.columnRejectionCriteria = New Global.System.Data.DataColumn("RejectionCriteria", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRejectionCriteria)
            Me.columnActiveControl = New Global.System.Data.DataColumn("ActiveControl", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnActiveControl)
            Me.columnDecimalsAllowed = New Global.System.Data.DataColumn("DecimalsAllowed", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDecimalsAllowed)
            Me.columnInUse = New Global.System.Data.DataColumn("InUse", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInUse)
            Me.columnPreloadedTest = New Global.System.Data.DataColumn("PreloadedTest", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPreloadedTest)
            Me.columnMeasureUnit = New Global.System.Data.DataColumn("MeasureUnit", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMeasureUnit)
            Me.columnTestPosition = New Global.System.Data.DataColumn("TestPosition", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTestPosition)
            Me.columnControlID = New Global.System.Data.DataColumn("ControlID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnControlID)
            Me.columnLISRequest = New Global.System.Data.DataColumn("LISRequest", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLISRequest)
            Me.columnExternalQC = New Global.System.Data.DataColumn("ExternalQC", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExternalQC)
            Me.columnAwosID = New Global.System.Data.DataColumn("AwosID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAwosID)
            Me.columnSpecimenID = New Global.System.Data.DataColumn("SpecimenID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecimenID)
            Me.columnESPatientID = New Global.System.Data.DataColumn("ESPatientID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESPatientID)
            Me.columnLISPatientID = New Global.System.Data.DataColumn("LISPatientID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLISPatientID)
            Me.columnESOrderID = New Global.System.Data.DataColumn("ESOrderID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESOrderID)
            Me.columnLISOrderID = New Global.System.Data.DataColumn("LISOrderID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLISOrderID)
            Me.columnAdded = New Global.System.Data.DataColumn("Added", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAdded)
            Me.columnEnableStatus = New Global.System.Data.DataColumn("EnableStatus", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEnableStatus)
            Me.columnStatFlag.DefaultValue = CType(False, Boolean)
            Me.columnTestKey.ReadOnly = True
            Me.columnLISRequest.DefaultValue = CType(False, Boolean)
            Me.columnAdded.DefaultValue = CType(False, Boolean)
            Me.columnEnableStatus.DefaultValue = CType(True, Boolean)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewSelectedTestTableRow() As SelectedTestTableRow
            Return CType(Me.NewRow, SelectedTestTableRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SelectedTestTableRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SelectedTestTableRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitExpressions()
            Me.TestKeyColumn.Expression = "TestType + '|' + TestID"
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SelectedTestTableRowChangedEvent) Is Nothing) Then
                RaiseEvent SelectedTestTableRowChanged(Me, New SelectedTestTableRowChangeEvent(CType(e.Row, SelectedTestTableRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SelectedTestTableRowChangingEvent) Is Nothing) Then
                RaiseEvent SelectedTestTableRowChanging(Me, New SelectedTestTableRowChangeEvent(CType(e.Row, SelectedTestTableRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SelectedTestTableRowDeletedEvent) Is Nothing) Then
                RaiseEvent SelectedTestTableRowDeleted(Me, New SelectedTestTableRowChangeEvent(CType(e.Row, SelectedTestTableRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SelectedTestTableRowDeletingEvent) Is Nothing) Then
                RaiseEvent SelectedTestTableRowDeleting(Me, New SelectedTestTableRowChangeEvent(CType(e.Row, SelectedTestTableRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveSelectedTestTableRow(ByVal row As SelectedTestTableRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As SelectedTestsDS = New SelectedTestsDS()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SelectedTestTableDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class SelectedTestTableRow
        Inherits Global.System.Data.DataRow

        Private tableSelectedTestTable As SelectedTestTableDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSelectedTestTable = CType(Me.Table, SelectedTestTableDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Row() As Integer
            Get
                Try
                    Return CType(Me(Me.tableSelectedTestTable.RowColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Row' in table 'SelectedTestTable' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableSelectedTestTable.RowColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Col() As Integer
            Get
                Try
                    Return CType(Me(Me.tableSelectedTestTable.ColColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Col' in table 'SelectedTestTable' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableSelectedTestTable.ColColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Selected() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableSelectedTestTable.SelectedColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Selected' in table 'SelectedTestTable' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableSelectedTestTable.SelectedColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PartiallySelected() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableSelectedTestTable.PartiallySelectedColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PartiallySelected' in table 'SelectedTestTable' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableSelectedTestTable.PartiallySelectedColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SampleType() As String
            Get
                If Me.IsSampleTypeNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableSelectedTestTable.SampleTypeColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tableSelectedTestTable.SampleTypeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TestType() As String
            Get
                If Me.IsTestTypeNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableSelectedTestTable.TestTypeColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tableSelectedTestTable.TestTypeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TestID() As Integer
            Get
                Try
                    Return CType(Me(Me.tableSelectedTestTable.TestIDColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TestID' in table 'SelectedTestTable' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableSelectedTestTable.TestIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TestName() As String
            Get
                If Me.IsTestNameNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableSelectedTestTable.TestNameColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tableSelectedTestTable.TestNameColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ShortName() As String
            Get
                If Me.IsShortNameNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableSelectedTestTable.ShortNameColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tableSelectedTestTable.ShortNameColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NumReplicates() As Integer
            Get
                Try
                    Return CType(Me(Me.tableSelectedTestTable.NumReplicatesColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NumReplicates' in table 'SelectedTestTable' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableSelectedTestTable.NumReplicatesColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TestProfileID() As Integer
            Get
                Try
                    Return CType(Me(Me.tableSelectedTestTable.TestProfileIDColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TestProfileID' in table 'SelectedTestTable' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableSelectedTestTable.TestProfileIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TestProfileName() As String
            Get
                If Me.IsTestProfileNameNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableSelectedTestTable.TestProfileNameColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tableSelectedTestTable.TestProfileNameColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property OTStatus() As String
            Get
                If Me.IsOTStatusNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableSelectedTestTable.OTStatusColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tableSelectedTestTable.OTStatusColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SampleID() As String
            Get
                If Me.IsSampleIDNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableSelectedTestTable.SampleIDColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tableSelectedTestTable.SampleIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SampleIDType() As String
            Get
                If Me.IsSampleIDTypeNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableSelectedTestTable.SampleIDTypeColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tableSelectedTestTable.SampleIDTypeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property StatFlag() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableSelectedTestTable.StatFlagColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'StatFlag' in table 'SelectedTestTable' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableSelectedTestTable.StatFlagColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NumberOfControls() As Integer
            Get
                Try
                    Return CType(Me(Me.tableSelectedTestTable.NumberOfControlsColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NumberOfControls' in table 'SelectedTestTable' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableSelectedTestTable.NumberOfControlsColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CalcTestIDs() As String
            Get
                If Me.IsCalcTestIDsNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableSelectedTestTable.CalcTestIDsColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tableSelectedTestTable.CalcTestIDsColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CalcTestNames() As String
            Get
                If Me.IsCalcTestNamesNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableSelectedTestTable.CalcTestNamesColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tableSelectedTestTable.CalcTestNamesColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CalcTestFormula() As String
            Get
                If Me.IsCalcTestFormulaNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableSelectedTestTable.CalcTestFormulaColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tableSelectedTestTable.CalcTestFormulaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TestKey() As String
            Get
                If Me.IsTestKeyNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableSelectedTestTable.TestKeyColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tableSelectedTestTable.TestKeyColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FactoryCalib() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableSelectedTestTable.FactoryCalibColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FactoryCalib' in table 'SelectedTestTable' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableSelectedTestTable.FactoryCalibColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RejectionCriteria() As Single
            Get
                Try
                    Return CType(Me(Me.tableSelectedTestTable.RejectionCriteriaColumn), Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RejectionCriteria' in table 'SelectedTestTable' is DBNull.", e)
                End Try
            End Get
            Set(value As Single)
                Me(Me.tableSelectedTestTable.RejectionCriteriaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ActiveControl() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableSelectedTestTable.ActiveControlColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ActiveControl' in table 'SelectedTestTable' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableSelectedTestTable.ActiveControlColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DecimalsAllowed() As Short
            Get
                Try
                    Return CType(Me(Me.tableSelectedTestTable.DecimalsAllowedColumn), Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DecimalsAllowed' in table 'SelectedTestTable' is DBNull.", e)
                End Try
            End Get
            Set(value As Short)
                Me(Me.tableSelectedTestTable.DecimalsAllowedColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property InUse() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableSelectedTestTable.InUseColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'InUse' in table 'SelectedTestTable' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableSelectedTestTable.InUseColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PreloadedTest() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableSelectedTestTable.PreloadedTestColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PreloadedTest' in table 'SelectedTestTable' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableSelectedTestTable.PreloadedTestColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MeasureUnit() As String
            Get
                Try
                    Return CType(Me(Me.tableSelectedTestTable.MeasureUnitColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MeasureUnit' in table 'SelectedTestTable' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableSelectedTestTable.MeasureUnitColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TestPosition() As Integer
            Get
                Try
                    Return CType(Me(Me.tableSelectedTestTable.TestPositionColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TestPosition' in table 'SelectedTestTable' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableSelectedTestTable.TestPositionColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ControlID() As Integer
            Get
                Try
                    Return CType(Me(Me.tableSelectedTestTable.ControlIDColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ControlID' in table 'SelectedTestTable' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableSelectedTestTable.ControlIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property LISRequest() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableSelectedTestTable.LISRequestColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LISRequest' in table 'SelectedTestTable' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableSelectedTestTable.LISRequestColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ExternalQC() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableSelectedTestTable.ExternalQCColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ExternalQC' in table 'SelectedTestTable' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableSelectedTestTable.ExternalQCColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property AwosID() As String
            Get
                If Me.IsAwosIDNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableSelectedTestTable.AwosIDColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tableSelectedTestTable.AwosIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SpecimenID() As String
            Get
                If Me.IsSpecimenIDNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableSelectedTestTable.SpecimenIDColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tableSelectedTestTable.SpecimenIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ESPatientID() As String
            Get
                If Me.IsESPatientIDNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableSelectedTestTable.ESPatientIDColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tableSelectedTestTable.ESPatientIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property LISPatientID() As String
            Get
                If Me.IsLISPatientIDNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableSelectedTestTable.LISPatientIDColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tableSelectedTestTable.LISPatientIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ESOrderID() As String
            Get
                If Me.IsESOrderIDNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableSelectedTestTable.ESOrderIDColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tableSelectedTestTable.ESOrderIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property LISOrderID() As String
            Get
                If Me.IsLISOrderIDNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableSelectedTestTable.LISOrderIDColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tableSelectedTestTable.LISOrderIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Added() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableSelectedTestTable.AddedColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Added' in table 'SelectedTestTable' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableSelectedTestTable.AddedColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property EnableStatus() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableSelectedTestTable.EnableStatusColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EnableStatus' in table 'SelectedTestTable' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableSelectedTestTable.EnableStatusColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRowNull() As Boolean
            Return Me.IsNull(Me.tableSelectedTestTable.RowColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRowNull()
            Me(Me.tableSelectedTestTable.RowColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsColNull() As Boolean
            Return Me.IsNull(Me.tableSelectedTestTable.ColColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetColNull()
            Me(Me.tableSelectedTestTable.ColColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSelectedNull() As Boolean
            Return Me.IsNull(Me.tableSelectedTestTable.SelectedColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSelectedNull()
            Me(Me.tableSelectedTestTable.SelectedColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPartiallySelectedNull() As Boolean
            Return Me.IsNull(Me.tableSelectedTestTable.PartiallySelectedColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPartiallySelectedNull()
            Me(Me.tableSelectedTestTable.PartiallySelectedColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSampleTypeNull() As Boolean
            Return Me.IsNull(Me.tableSelectedTestTable.SampleTypeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSampleTypeNull()
            Me(Me.tableSelectedTestTable.SampleTypeColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTestTypeNull() As Boolean
            Return Me.IsNull(Me.tableSelectedTestTable.TestTypeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTestTypeNull()
            Me(Me.tableSelectedTestTable.TestTypeColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTestIDNull() As Boolean
            Return Me.IsNull(Me.tableSelectedTestTable.TestIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTestIDNull()
            Me(Me.tableSelectedTestTable.TestIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTestNameNull() As Boolean
            Return Me.IsNull(Me.tableSelectedTestTable.TestNameColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTestNameNull()
            Me(Me.tableSelectedTestTable.TestNameColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsShortNameNull() As Boolean
            Return Me.IsNull(Me.tableSelectedTestTable.ShortNameColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetShortNameNull()
            Me(Me.tableSelectedTestTable.ShortNameColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNumReplicatesNull() As Boolean
            Return Me.IsNull(Me.tableSelectedTestTable.NumReplicatesColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNumReplicatesNull()
            Me(Me.tableSelectedTestTable.NumReplicatesColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTestProfileIDNull() As Boolean
            Return Me.IsNull(Me.tableSelectedTestTable.TestProfileIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTestProfileIDNull()
            Me(Me.tableSelectedTestTable.TestProfileIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTestProfileNameNull() As Boolean
            Return Me.IsNull(Me.tableSelectedTestTable.TestProfileNameColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTestProfileNameNull()
            Me(Me.tableSelectedTestTable.TestProfileNameColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsOTStatusNull() As Boolean
            Return Me.IsNull(Me.tableSelectedTestTable.OTStatusColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetOTStatusNull()
            Me(Me.tableSelectedTestTable.OTStatusColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSampleIDNull() As Boolean
            Return Me.IsNull(Me.tableSelectedTestTable.SampleIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSampleIDNull()
            Me(Me.tableSelectedTestTable.SampleIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSampleIDTypeNull() As Boolean
            Return Me.IsNull(Me.tableSelectedTestTable.SampleIDTypeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSampleIDTypeNull()
            Me(Me.tableSelectedTestTable.SampleIDTypeColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsStatFlagNull() As Boolean
            Return Me.IsNull(Me.tableSelectedTestTable.StatFlagColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetStatFlagNull()
            Me(Me.tableSelectedTestTable.StatFlagColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNumberOfControlsNull() As Boolean
            Return Me.IsNull(Me.tableSelectedTestTable.NumberOfControlsColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNumberOfControlsNull()
            Me(Me.tableSelectedTestTable.NumberOfControlsColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCalcTestIDsNull() As Boolean
            Return Me.IsNull(Me.tableSelectedTestTable.CalcTestIDsColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCalcTestIDsNull()
            Me(Me.tableSelectedTestTable.CalcTestIDsColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCalcTestNamesNull() As Boolean
            Return Me.IsNull(Me.tableSelectedTestTable.CalcTestNamesColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCalcTestNamesNull()
            Me(Me.tableSelectedTestTable.CalcTestNamesColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCalcTestFormulaNull() As Boolean
            Return Me.IsNull(Me.tableSelectedTestTable.CalcTestFormulaColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCalcTestFormulaNull()
            Me(Me.tableSelectedTestTable.CalcTestFormulaColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTestKeyNull() As Boolean
            Return Me.IsNull(Me.tableSelectedTestTable.TestKeyColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTestKeyNull()
            Me(Me.tableSelectedTestTable.TestKeyColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFactoryCalibNull() As Boolean
            Return Me.IsNull(Me.tableSelectedTestTable.FactoryCalibColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFactoryCalibNull()
            Me(Me.tableSelectedTestTable.FactoryCalibColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRejectionCriteriaNull() As Boolean
            Return Me.IsNull(Me.tableSelectedTestTable.RejectionCriteriaColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRejectionCriteriaNull()
            Me(Me.tableSelectedTestTable.RejectionCriteriaColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsActiveControlNull() As Boolean
            Return Me.IsNull(Me.tableSelectedTestTable.ActiveControlColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetActiveControlNull()
            Me(Me.tableSelectedTestTable.ActiveControlColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDecimalsAllowedNull() As Boolean
            Return Me.IsNull(Me.tableSelectedTestTable.DecimalsAllowedColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDecimalsAllowedNull()
            Me(Me.tableSelectedTestTable.DecimalsAllowedColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsInUseNull() As Boolean
            Return Me.IsNull(Me.tableSelectedTestTable.InUseColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetInUseNull()
            Me(Me.tableSelectedTestTable.InUseColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPreloadedTestNull() As Boolean
            Return Me.IsNull(Me.tableSelectedTestTable.PreloadedTestColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPreloadedTestNull()
            Me(Me.tableSelectedTestTable.PreloadedTestColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMeasureUnitNull() As Boolean
            Return Me.IsNull(Me.tableSelectedTestTable.MeasureUnitColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMeasureUnitNull()
            Me(Me.tableSelectedTestTable.MeasureUnitColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTestPositionNull() As Boolean
            Return Me.IsNull(Me.tableSelectedTestTable.TestPositionColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTestPositionNull()
            Me(Me.tableSelectedTestTable.TestPositionColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsControlIDNull() As Boolean
            Return Me.IsNull(Me.tableSelectedTestTable.ControlIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetControlIDNull()
            Me(Me.tableSelectedTestTable.ControlIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsLISRequestNull() As Boolean
            Return Me.IsNull(Me.tableSelectedTestTable.LISRequestColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetLISRequestNull()
            Me(Me.tableSelectedTestTable.LISRequestColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsExternalQCNull() As Boolean
            Return Me.IsNull(Me.tableSelectedTestTable.ExternalQCColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetExternalQCNull()
            Me(Me.tableSelectedTestTable.ExternalQCColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsAwosIDNull() As Boolean
            Return Me.IsNull(Me.tableSelectedTestTable.AwosIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetAwosIDNull()
            Me(Me.tableSelectedTestTable.AwosIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSpecimenIDNull() As Boolean
            Return Me.IsNull(Me.tableSelectedTestTable.SpecimenIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSpecimenIDNull()
            Me(Me.tableSelectedTestTable.SpecimenIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsESPatientIDNull() As Boolean
            Return Me.IsNull(Me.tableSelectedTestTable.ESPatientIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetESPatientIDNull()
            Me(Me.tableSelectedTestTable.ESPatientIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsLISPatientIDNull() As Boolean
            Return Me.IsNull(Me.tableSelectedTestTable.LISPatientIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetLISPatientIDNull()
            Me(Me.tableSelectedTestTable.LISPatientIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsESOrderIDNull() As Boolean
            Return Me.IsNull(Me.tableSelectedTestTable.ESOrderIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetESOrderIDNull()
            Me(Me.tableSelectedTestTable.ESOrderIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsLISOrderIDNull() As Boolean
            Return Me.IsNull(Me.tableSelectedTestTable.LISOrderIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetLISOrderIDNull()
            Me(Me.tableSelectedTestTable.LISOrderIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsAddedNull() As Boolean
            Return Me.IsNull(Me.tableSelectedTestTable.AddedColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetAddedNull()
            Me(Me.tableSelectedTestTable.AddedColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsEnableStatusNull() As Boolean
            Return Me.IsNull(Me.tableSelectedTestTable.EnableStatusColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetEnableStatusNull()
            Me(Me.tableSelectedTestTable.EnableStatusColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class SelectedTestTableRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As SelectedTestTableRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As SelectedTestTableRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As SelectedTestTableRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
