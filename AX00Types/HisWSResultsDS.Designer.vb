'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.18063
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(), _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
 Global.System.ComponentModel.ToolboxItem(True), _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"), _
 Global.System.Xml.Serialization.XmlRootAttribute("HisWSResultsDS"), _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")> _
Partial Public Class HisWSResultsDS
    Inherits Global.System.Data.DataSet

    Private tablethisWSResults As thisWSResultsDataTable

    Private tablevhisWSResults As vhisWSResultsDataTable

    Private tableReportSampleMaster As ReportSampleMasterDataTable

    Private tableReportSampleDetails As ReportSampleDetailsDataTable

    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub New()
        MyBase.New()
        Me.BeginInit()
        Me.InitClass()
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit()
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, False)
        If (Me.IsBinarySerialized(info, context) = True) Then
            Me.InitVars(False)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)), String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("thisWSResults")) Is Nothing) Then
                MyBase.Tables.Add(New thisWSResultsDataTable(ds.Tables("thisWSResults")))
            End If
            If (Not (ds.Tables("vhisWSResults")) Is Nothing) Then
                MyBase.Tables.Add(New vhisWSResultsDataTable(ds.Tables("vhisWSResults")))
            End If
            If (Not (ds.Tables("ReportSampleMaster")) Is Nothing) Then
                MyBase.Tables.Add(New ReportSampleMasterDataTable(ds.Tables("ReportSampleMaster")))
            End If
            If (Not (ds.Tables("ReportSampleDetails")) Is Nothing) Then
                MyBase.Tables.Add(New ReportSampleDetailsDataTable(ds.Tables("ReportSampleDetails")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, False, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars()
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property thisWSResults() As thisWSResultsDataTable
        Get
            Return Me.tablethisWSResults
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property vhisWSResults() As vhisWSResultsDataTable
        Get
            Return Me.tablevhisWSResults
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property ReportSampleMaster() As ReportSampleMasterDataTable
        Get
            Return Me.tableReportSampleMaster
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property ReportSampleDetails() As ReportSampleDetailsDataTable
        Get
            Return Me.tableReportSampleDetails
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.BrowsableAttribute(True), _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)> _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set(value As Global.System.Data.SchemaSerializationMode)
            Me._schemaSerializationMode = value
        End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)> _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)> _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit()
        Me.InitClass()
        Me.EndInit()
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As HisWSResultsDS = CType(MyBase.Clone, HisWSResultsDS)
        cln.InitVars()
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset()
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("thisWSResults")) Is Nothing) Then
                MyBase.Tables.Add(New thisWSResultsDataTable(ds.Tables("thisWSResults")))
            End If
            If (Not (ds.Tables("vhisWSResults")) Is Nothing) Then
                MyBase.Tables.Add(New vhisWSResultsDataTable(ds.Tables("vhisWSResults")))
            End If
            If (Not (ds.Tables("ReportSampleMaster")) Is Nothing) Then
                MyBase.Tables.Add(New ReportSampleMasterDataTable(ds.Tables("ReportSampleMaster")))
            End If
            If (Not (ds.Tables("ReportSampleDetails")) Is Nothing) Then
                MyBase.Tables.Add(New ReportSampleDetailsDataTable(ds.Tables("ReportSampleDetails")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, False, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars()
        Else
            Me.ReadXml(reader)
            Me.InitVars()
        End If
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Friend Overloads Sub InitVars()
        Me.InitVars(True)
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tablethisWSResults = CType(MyBase.Tables("thisWSResults"), thisWSResultsDataTable)
        If (initTable = True) Then
            If (Not (Me.tablethisWSResults) Is Nothing) Then
                Me.tablethisWSResults.InitVars()
            End If
        End If
        Me.tablevhisWSResults = CType(MyBase.Tables("vhisWSResults"), vhisWSResultsDataTable)
        If (initTable = True) Then
            If (Not (Me.tablevhisWSResults) Is Nothing) Then
                Me.tablevhisWSResults.InitVars()
            End If
        End If
        Me.tableReportSampleMaster = CType(MyBase.Tables("ReportSampleMaster"), ReportSampleMasterDataTable)
        If (initTable = True) Then
            If (Not (Me.tableReportSampleMaster) Is Nothing) Then
                Me.tableReportSampleMaster.InitVars()
            End If
        End If
        Me.tableReportSampleDetails = CType(MyBase.Tables("ReportSampleDetails"), ReportSampleDetailsDataTable)
        If (initTable = True) Then
            If (Not (Me.tableReportSampleDetails) Is Nothing) Then
                Me.tableReportSampleDetails.InitVars()
            End If
        End If
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Sub InitClass()
        Me.DataSetName = "HisWSResultsDS"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/HisWSResultsDS.xsd"
        Me.EnforceConstraints = True
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tablethisWSResults = New thisWSResultsDataTable()
        MyBase.Tables.Add(Me.tablethisWSResults)
        Me.tablevhisWSResults = New vhisWSResultsDataTable()
        MyBase.Tables.Add(Me.tablevhisWSResults)
        Me.tableReportSampleMaster = New ReportSampleMasterDataTable()
        MyBase.Tables.Add(Me.tableReportSampleMaster)
        Me.tableReportSampleDetails = New ReportSampleDetailsDataTable()
        MyBase.Tables.Add(Me.tableReportSampleDetails)
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializethisWSResults() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializevhisWSResults() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializeReportSampleMaster() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializeReportSampleDetails() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars()
        End If
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As HisWSResultsDS = New HisWSResultsDS()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0

                        Do While ((s1.Position <> s1.Length) _
                                    AndAlso (s1.ReadByte = s2.ReadByte))


                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If

                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close()
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close()
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub thisWSResultsRowChangeEventHandler(ByVal sender As Object, ByVal e As thisWSResultsRowChangeEvent)

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub vhisWSResultsRowChangeEventHandler(ByVal sender As Object, ByVal e As vhisWSResultsRowChangeEvent)

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub ReportSampleMasterRowChangeEventHandler(ByVal sender As Object, ByVal e As ReportSampleMasterRowChangeEvent)

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub ReportSampleDetailsRowChangeEventHandler(ByVal sender As Object, ByVal e As ReportSampleDetailsRowChangeEvent)

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class thisWSResultsDataTable
        Inherits Global.System.Data.TypedTableBase(Of thisWSResultsRow)

        Private columnHistOrderTestID As Global.System.Data.DataColumn

        Private columnAnalyzerID As Global.System.Data.DataColumn

        Private columnWorkSessionID As Global.System.Data.DataColumn

        Private columnMultiPointNumber As Global.System.Data.DataColumn

        Private columnResultDateTime As Global.System.Data.DataColumn

        Private columnABSValue As Global.System.Data.DataColumn

        Private columnCONCValue As Global.System.Data.DataColumn

        Private columnManualResultFlag As Global.System.Data.DataColumn

        Private columnManualResult As Global.System.Data.DataColumn

        Private columnManualResultText As Global.System.Data.DataColumn

        Private columnUserComment As Global.System.Data.DataColumn

        Private columnCalibratorFactor As Global.System.Data.DataColumn

        Private columnCalibratorBlankAbsUsed As Global.System.Data.DataColumn

        Private columnCurveSlope As Global.System.Data.DataColumn

        Private columnCurveOffSet As Global.System.Data.DataColumn

        Private columnCurveCorrelation As Global.System.Data.DataColumn

        Private columnRelativeErrorCurve As Global.System.Data.DataColumn

        Private columnExportStatus As Global.System.Data.DataColumn

        Private columnBlankAbsorbanceLimit As Global.System.Data.DataColumn

        Private columnKineticBlankLimit As Global.System.Data.DataColumn

        Private columnFactorLowerLimit As Global.System.Data.DataColumn

        Private columnFactorUpperLimit As Global.System.Data.DataColumn

        Private columnABSInitial As Global.System.Data.DataColumn

        Private columnABSWorkReagent As Global.System.Data.DataColumn

        Private columnABSMainFilter As Global.System.Data.DataColumn

        Private columnMinRefRange As Global.System.Data.DataColumn

        Private columnMaxRefRange As Global.System.Data.DataColumn

        Private columnRemarkAlert As Global.System.Data.DataColumn

        Private columnAlarmList As Global.System.Data.DataColumn

        Private columnNotCalcCalib As Global.System.Data.DataColumn

        Private columnClosedResult As Global.System.Data.DataColumn

        Private columnLISMessageID As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "thisWSResults"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property HistOrderTestIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHistOrderTestID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property AnalyzerIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAnalyzerID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property WorkSessionIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWorkSessionID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MultiPointNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMultiPointNumber
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ResultDateTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnResultDateTime
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ABSValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnABSValue
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CONCValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONCValue
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ManualResultFlagColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnManualResultFlag
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ManualResultColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnManualResult
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ManualResultTextColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnManualResultText
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property UserCommentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUserComment
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CalibratorFactorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCalibratorFactor
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CalibratorBlankAbsUsedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCalibratorBlankAbsUsed
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CurveSlopeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCurveSlope
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CurveOffSetColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCurveOffSet
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CurveCorrelationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCurveCorrelation
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property RelativeErrorCurveColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRelativeErrorCurve
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ExportStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExportStatus
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property BlankAbsorbanceLimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBlankAbsorbanceLimit
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property KineticBlankLimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKineticBlankLimit
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FactorLowerLimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFactorLowerLimit
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FactorUpperLimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFactorUpperLimit
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ABSInitialColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnABSInitial
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ABSWorkReagentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnABSWorkReagent
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ABSMainFilterColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnABSMainFilter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MinRefRangeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMinRefRange
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MaxRefRangeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaxRefRange
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property RemarkAlertColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRemarkAlert
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property AlarmListColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAlarmList
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NotCalcCalibColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNotCalcCalib
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ClosedResultColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClosedResult
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property LISMessageIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLISMessageID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As thisWSResultsRow
            Get
                Return CType(Me.Rows(index), thisWSResultsRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event thisWSResultsRowChanging As thisWSResultsRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event thisWSResultsRowChanged As thisWSResultsRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event thisWSResultsRowDeleting As thisWSResultsRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event thisWSResultsRowDeleted As thisWSResultsRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddthisWSResultsRow(ByVal row As thisWSResultsRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddthisWSResultsRow( _
                    ByVal HistOrderTestID As Integer, _
                    ByVal AnalyzerID As String, _
                    ByVal WorkSessionID As String, _
                    ByVal MultiPointNumber As Integer, _
                    ByVal ResultDateTime As Date, _
                    ByVal ABSValue As Single, _
                    ByVal CONCValue As Single, _
                    ByVal ManualResultFlag As Boolean, _
                    ByVal ManualResult As Single, _
                    ByVal ManualResultText As String, _
                    ByVal UserComment As String, _
                    ByVal CalibratorFactor As Single, _
                    ByVal CalibratorBlankAbsUsed As Single, _
                    ByVal CurveSlope As Single, _
                    ByVal CurveOffSet As Single, _
                    ByVal CurveCorrelation As Single, _
                    ByVal RelativeErrorCurve As Single, _
                    ByVal ExportStatus As String, _
                    ByVal BlankAbsorbanceLimit As Single, _
                    ByVal KineticBlankLimit As Single, _
                    ByVal FactorLowerLimit As Single, _
                    ByVal FactorUpperLimit As Single, _
                    ByVal ABSInitial As Single, _
                    ByVal ABSWorkReagent As Single, _
                    ByVal ABSMainFilter As Single, _
                    ByVal MinRefRange As Single, _
                    ByVal MaxRefRange As Single, _
                    ByVal RemarkAlert As String, _
                    ByVal AlarmList As String, _
                    ByVal NotCalcCalib As Boolean, _
                    ByVal ClosedResult As Boolean, _
                    ByVal LISMessageID As String) As thisWSResultsRow
            Dim rowthisWSResultsRow As thisWSResultsRow = CType(Me.NewRow, thisWSResultsRow)
            Dim columnValuesArray() As Object = New Object() {HistOrderTestID, AnalyzerID, WorkSessionID, MultiPointNumber, ResultDateTime, ABSValue, CONCValue, ManualResultFlag, ManualResult, ManualResultText, UserComment, CalibratorFactor, CalibratorBlankAbsUsed, CurveSlope, CurveOffSet, CurveCorrelation, RelativeErrorCurve, ExportStatus, BlankAbsorbanceLimit, KineticBlankLimit, FactorLowerLimit, FactorUpperLimit, ABSInitial, ABSWorkReagent, ABSMainFilter, MinRefRange, MaxRefRange, RemarkAlert, AlarmList, NotCalcCalib, ClosedResult, LISMessageID}
            rowthisWSResultsRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowthisWSResultsRow)
            Return rowthisWSResultsRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As thisWSResultsDataTable = CType(MyBase.Clone, thisWSResultsDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New thisWSResultsDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnHistOrderTestID = MyBase.Columns("HistOrderTestID")
            Me.columnAnalyzerID = MyBase.Columns("AnalyzerID")
            Me.columnWorkSessionID = MyBase.Columns("WorkSessionID")
            Me.columnMultiPointNumber = MyBase.Columns("MultiPointNumber")
            Me.columnResultDateTime = MyBase.Columns("ResultDateTime")
            Me.columnABSValue = MyBase.Columns("ABSValue")
            Me.columnCONCValue = MyBase.Columns("CONCValue")
            Me.columnManualResultFlag = MyBase.Columns("ManualResultFlag")
            Me.columnManualResult = MyBase.Columns("ManualResult")
            Me.columnManualResultText = MyBase.Columns("ManualResultText")
            Me.columnUserComment = MyBase.Columns("UserComment")
            Me.columnCalibratorFactor = MyBase.Columns("CalibratorFactor")
            Me.columnCalibratorBlankAbsUsed = MyBase.Columns("CalibratorBlankAbsUsed")
            Me.columnCurveSlope = MyBase.Columns("CurveSlope")
            Me.columnCurveOffSet = MyBase.Columns("CurveOffSet")
            Me.columnCurveCorrelation = MyBase.Columns("CurveCorrelation")
            Me.columnRelativeErrorCurve = MyBase.Columns("RelativeErrorCurve")
            Me.columnExportStatus = MyBase.Columns("ExportStatus")
            Me.columnBlankAbsorbanceLimit = MyBase.Columns("BlankAbsorbanceLimit")
            Me.columnKineticBlankLimit = MyBase.Columns("KineticBlankLimit")
            Me.columnFactorLowerLimit = MyBase.Columns("FactorLowerLimit")
            Me.columnFactorUpperLimit = MyBase.Columns("FactorUpperLimit")
            Me.columnABSInitial = MyBase.Columns("ABSInitial")
            Me.columnABSWorkReagent = MyBase.Columns("ABSWorkReagent")
            Me.columnABSMainFilter = MyBase.Columns("ABSMainFilter")
            Me.columnMinRefRange = MyBase.Columns("MinRefRange")
            Me.columnMaxRefRange = MyBase.Columns("MaxRefRange")
            Me.columnRemarkAlert = MyBase.Columns("RemarkAlert")
            Me.columnAlarmList = MyBase.Columns("AlarmList")
            Me.columnNotCalcCalib = MyBase.Columns("NotCalcCalib")
            Me.columnClosedResult = MyBase.Columns("ClosedResult")
            Me.columnLISMessageID = MyBase.Columns("LISMessageID")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnHistOrderTestID = New Global.System.Data.DataColumn("HistOrderTestID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHistOrderTestID)
            Me.columnAnalyzerID = New Global.System.Data.DataColumn("AnalyzerID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAnalyzerID)
            Me.columnWorkSessionID = New Global.System.Data.DataColumn("WorkSessionID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWorkSessionID)
            Me.columnMultiPointNumber = New Global.System.Data.DataColumn("MultiPointNumber", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMultiPointNumber)
            Me.columnResultDateTime = New Global.System.Data.DataColumn("ResultDateTime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnResultDateTime)
            Me.columnABSValue = New Global.System.Data.DataColumn("ABSValue", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnABSValue)
            Me.columnCONCValue = New Global.System.Data.DataColumn("CONCValue", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONCValue)
            Me.columnManualResultFlag = New Global.System.Data.DataColumn("ManualResultFlag", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnManualResultFlag)
            Me.columnManualResult = New Global.System.Data.DataColumn("ManualResult", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnManualResult)
            Me.columnManualResultText = New Global.System.Data.DataColumn("ManualResultText", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnManualResultText)
            Me.columnUserComment = New Global.System.Data.DataColumn("UserComment", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUserComment)
            Me.columnCalibratorFactor = New Global.System.Data.DataColumn("CalibratorFactor", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCalibratorFactor)
            Me.columnCalibratorBlankAbsUsed = New Global.System.Data.DataColumn("CalibratorBlankAbsUsed", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCalibratorBlankAbsUsed)
            Me.columnCurveSlope = New Global.System.Data.DataColumn("CurveSlope", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCurveSlope)
            Me.columnCurveOffSet = New Global.System.Data.DataColumn("CurveOffSet", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCurveOffSet)
            Me.columnCurveCorrelation = New Global.System.Data.DataColumn("CurveCorrelation", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCurveCorrelation)
            Me.columnRelativeErrorCurve = New Global.System.Data.DataColumn("RelativeErrorCurve", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRelativeErrorCurve)
            Me.columnExportStatus = New Global.System.Data.DataColumn("ExportStatus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExportStatus)
            Me.columnBlankAbsorbanceLimit = New Global.System.Data.DataColumn("BlankAbsorbanceLimit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBlankAbsorbanceLimit)
            Me.columnKineticBlankLimit = New Global.System.Data.DataColumn("KineticBlankLimit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKineticBlankLimit)
            Me.columnFactorLowerLimit = New Global.System.Data.DataColumn("FactorLowerLimit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFactorLowerLimit)
            Me.columnFactorUpperLimit = New Global.System.Data.DataColumn("FactorUpperLimit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFactorUpperLimit)
            Me.columnABSInitial = New Global.System.Data.DataColumn("ABSInitial", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnABSInitial)
            Me.columnABSWorkReagent = New Global.System.Data.DataColumn("ABSWorkReagent", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnABSWorkReagent)
            Me.columnABSMainFilter = New Global.System.Data.DataColumn("ABSMainFilter", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnABSMainFilter)
            Me.columnMinRefRange = New Global.System.Data.DataColumn("MinRefRange", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMinRefRange)
            Me.columnMaxRefRange = New Global.System.Data.DataColumn("MaxRefRange", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaxRefRange)
            Me.columnRemarkAlert = New Global.System.Data.DataColumn("RemarkAlert", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRemarkAlert)
            Me.columnAlarmList = New Global.System.Data.DataColumn("AlarmList", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAlarmList)
            Me.columnNotCalcCalib = New Global.System.Data.DataColumn("NotCalcCalib", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNotCalcCalib)
            Me.columnClosedResult = New Global.System.Data.DataColumn("ClosedResult", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClosedResult)
            Me.columnLISMessageID = New Global.System.Data.DataColumn("LISMessageID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLISMessageID)
            Me.columnAnalyzerID.DefaultValue = CType("", String)
            Me.columnWorkSessionID.DefaultValue = CType("", String)
            Me.columnManualResultText.DefaultValue = CType("", String)
            Me.columnUserComment.DefaultValue = CType("", String)
            Me.columnAlarmList.DefaultValue = CType("", String)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewthisWSResultsRow() As thisWSResultsRow
            Return CType(Me.NewRow, thisWSResultsRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New thisWSResultsRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(thisWSResultsRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.thisWSResultsRowChangedEvent) Is Nothing) Then
                RaiseEvent thisWSResultsRowChanged(Me, New thisWSResultsRowChangeEvent(CType(e.Row, thisWSResultsRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.thisWSResultsRowChangingEvent) Is Nothing) Then
                RaiseEvent thisWSResultsRowChanging(Me, New thisWSResultsRowChangeEvent(CType(e.Row, thisWSResultsRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.thisWSResultsRowDeletedEvent) Is Nothing) Then
                RaiseEvent thisWSResultsRowDeleted(Me, New thisWSResultsRowChangeEvent(CType(e.Row, thisWSResultsRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.thisWSResultsRowDeletingEvent) Is Nothing) Then
                RaiseEvent thisWSResultsRowDeleting(Me, New thisWSResultsRowChangeEvent(CType(e.Row, thisWSResultsRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemovethisWSResultsRow(ByVal row As thisWSResultsRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As HisWSResultsDS = New HisWSResultsDS()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "thisWSResultsDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class vhisWSResultsDataTable
        Inherits Global.System.Data.TypedTableBase(Of vhisWSResultsRow)

        Private columnHistOrderTestID As Global.System.Data.DataColumn

        Private columnAnalyzerID As Global.System.Data.DataColumn

        Private columnWorkSessionID As Global.System.Data.DataColumn

        Private columnResultDateTime As Global.System.Data.DataColumn

        Private columnPatientID As Global.System.Data.DataColumn

        Private columnSampleClass As Global.System.Data.DataColumn

        Private columnStatFlag As Global.System.Data.DataColumn

        Private columnTestType As Global.System.Data.DataColumn

        Private columnSampleType As Global.System.Data.DataColumn

        Private columnTestID As Global.System.Data.DataColumn

        Private columnTestName As Global.System.Data.DataColumn

        Private columnTestVersionNumber As Global.System.Data.DataColumn

        Private columnCONCValue As Global.System.Data.DataColumn

        Private columnMeasureUnit As Global.System.Data.DataColumn

        Private columnMinRefRange As Global.System.Data.DataColumn

        Private columnMaxRefRange As Global.System.Data.DataColumn

        Private columnExportStatus As Global.System.Data.DataColumn

        Private columnAlarmList As Global.System.Data.DataColumn

        Private columnFormulaText As Global.System.Data.DataColumn

        Private columnStatFlagImage As Global.System.Data.DataColumn

        Private columnExportImage As Global.System.Data.DataColumn

        Private columnGraphImage As Global.System.Data.DataColumn

        Private columnRemarkAlert As Global.System.Data.DataColumn

        Private columnRefRange As Global.System.Data.DataColumn

        Private columnRemarks As Global.System.Data.DataColumn

        Private columnAdditionalInfo As Global.System.Data.DataColumn

        Private columnABSValue As Global.System.Data.DataColumn

        Private columnABSWorkReagent As Global.System.Data.DataColumn

        Private columnKineticBlankLimit As Global.System.Data.DataColumn

        Private columnABSInitial As Global.System.Data.DataColumn

        Private columnABSMainFilter As Global.System.Data.DataColumn

        Private columnBlankAbsorbanceLimit As Global.System.Data.DataColumn

        Private columnCalibratorName As Global.System.Data.DataColumn

        Private columnLotNumber As Global.System.Data.DataColumn

        Private columnNumberOfCalibrators As Global.System.Data.DataColumn

        Private columnTheoreticalConcentration As Global.System.Data.DataColumn

        Private columnCalibratorFactor As Global.System.Data.DataColumn

        Private columnFactorLimits As Global.System.Data.DataColumn

        Private columnFactorLowerLimit As Global.System.Data.DataColumn

        Private columnFactorUpperLimit As Global.System.Data.DataColumn

        Private columnDecimalsAllowed As Global.System.Data.DataColumn

        Private columnCONCValueString As Global.System.Data.DataColumn

        Private columnMultiPointNumber As Global.System.Data.DataColumn

        Private columnSelected As Global.System.Data.DataColumn

        Private columnCalibPointUsed As Global.System.Data.DataColumn

        Private columnManualResult As Global.System.Data.DataColumn

        Private columnManualResultText As Global.System.Data.DataColumn

        Private columnLISMessageID As Global.System.Data.DataColumn

        Private columnLISRequest As Global.System.Data.DataColumn

        Private columnExternalQC As Global.System.Data.DataColumn

        Private columnESOrderID As Global.System.Data.DataColumn

        Private columnLISOrderID As Global.System.Data.DataColumn

        Private columnESPatientID As Global.System.Data.DataColumn

        Private columnLISPatientID As Global.System.Data.DataColumn

        Private columnLISTestName As Global.System.Data.DataColumn

        Private columnLISSampleType As Global.System.Data.DataColumn

        Private columnLISUnits As Global.System.Data.DataColumn

        Private columnSpecimenID As Global.System.Data.DataColumn

        Private columnAwosID As Global.System.Data.DataColumn

        Private columnManualResultFlag As Global.System.Data.DataColumn

        Private columnTestPosition As Global.System.Data.DataColumn

        Private columnBackColorGroup As Global.System.Data.DataColumn

        Private columnTestLongName As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "vhisWSResults"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property HistOrderTestIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHistOrderTestID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property AnalyzerIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAnalyzerID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property WorkSessionIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWorkSessionID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ResultDateTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnResultDateTime
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PatientIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPatientID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SampleClassColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSampleClass
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property StatFlagColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStatFlag
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TestTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTestType
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SampleTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSampleType
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TestIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTestID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TestNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTestName
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TestVersionNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTestVersionNumber
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CONCValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONCValue
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MeasureUnitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMeasureUnit
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MinRefRangeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMinRefRange
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MaxRefRangeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaxRefRange
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ExportStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExportStatus
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property AlarmListColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAlarmList
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FormulaTextColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFormulaText
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property StatFlagImageColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStatFlagImage
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ExportImageColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExportImage
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property GraphImageColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGraphImage
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property RemarkAlertColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRemarkAlert
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property RefRangeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRefRange
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property RemarksColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRemarks
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property AdditionalInfoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAdditionalInfo
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ABSValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnABSValue
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ABSWorkReagentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnABSWorkReagent
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property KineticBlankLimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKineticBlankLimit
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ABSInitialColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnABSInitial
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ABSMainFilterColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnABSMainFilter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property BlankAbsorbanceLimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBlankAbsorbanceLimit
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CalibratorNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCalibratorName
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property LotNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLotNumber
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NumberOfCalibratorsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumberOfCalibrators
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TheoreticalConcentrationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTheoreticalConcentration
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CalibratorFactorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCalibratorFactor
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FactorLimitsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFactorLimits
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FactorLowerLimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFactorLowerLimit
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FactorUpperLimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFactorUpperLimit
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DecimalsAllowedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDecimalsAllowed
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CONCValueStringColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONCValueString
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MultiPointNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMultiPointNumber
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SelectedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSelected
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CalibPointUsedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCalibPointUsed
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ManualResultColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnManualResult
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ManualResultTextColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnManualResultText
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property LISMessageIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLISMessageID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property LISRequestColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLISRequest
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ExternalQCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExternalQC
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ESOrderIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESOrderID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property LISOrderIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLISOrderID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ESPatientIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESPatientID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property LISPatientIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLISPatientID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property LISTestNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLISTestName
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property LISSampleTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLISSampleType
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property LISUnitsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLISUnits
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SpecimenIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecimenID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property AwosIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAwosID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ManualResultFlagColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnManualResultFlag
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TestPositionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTestPosition
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property BackColorGroupColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBackColorGroup
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TestLongNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTestLongName
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As vhisWSResultsRow
            Get
                Return CType(Me.Rows(index), vhisWSResultsRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event vhisWSResultsRowChanging As vhisWSResultsRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event vhisWSResultsRowChanged As vhisWSResultsRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event vhisWSResultsRowDeleting As vhisWSResultsRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event vhisWSResultsRowDeleted As vhisWSResultsRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddvhisWSResultsRow(ByVal row As vhisWSResultsRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddvhisWSResultsRow( _
                    ByVal HistOrderTestID As Integer, _
                    ByVal AnalyzerID As String, _
                    ByVal WorkSessionID As String, _
                    ByVal ResultDateTime As Date, _
                    ByVal PatientID As String, _
                    ByVal SampleClass As String, _
                    ByVal StatFlag As Boolean, _
                    ByVal TestType As String, _
                    ByVal SampleType As String, _
                    ByVal TestID As Integer, _
                    ByVal TestName As String, _
                    ByVal TestVersionNumber As Byte, _
                    ByVal CONCValue As Single, _
                    ByVal MeasureUnit As String, _
                    ByVal MinRefRange As Single, _
                    ByVal MaxRefRange As Single, _
                    ByVal ExportStatus As String, _
                    ByVal AlarmList As String, _
                    ByVal FormulaText As String, _
                    ByVal StatFlagImage() As Byte, _
                    ByVal ExportImage() As Byte, _
                    ByVal GraphImage() As Byte, _
                    ByVal RemarkAlert As String, _
                    ByVal RefRange As String, _
                    ByVal Remarks As String, _
                    ByVal AdditionalInfo As String, _
                    ByVal ABSValue As Single, _
                    ByVal ABSWorkReagent As Single, _
                    ByVal KineticBlankLimit As Single, _
                    ByVal ABSInitial As Single, _
                    ByVal ABSMainFilter As Single, _
                    ByVal BlankAbsorbanceLimit As Single, _
                    ByVal CalibratorName As String, _
                    ByVal LotNumber As String, _
                    ByVal NumberOfCalibrators As Integer, _
                    ByVal TheoreticalConcentration As Single, _
                    ByVal CalibratorFactor As Single, _
                    ByVal FactorLimits As String, _
                    ByVal FactorLowerLimit As Single, _
                    ByVal FactorUpperLimit As Single, _
                    ByVal DecimalsAllowed As Byte, _
                    ByVal CONCValueString As String, _
                    ByVal MultiPointNumber As Integer, _
                    ByVal Selected As Boolean, _
                    ByVal CalibPointUsed As Integer, _
                    ByVal ManualResult As Single, _
                    ByVal ManualResultText As String, _
                    ByVal LISMessageID As String, _
                    ByVal LISRequest As Boolean, _
                    ByVal ExternalQC As Boolean, _
                    ByVal ESOrderID As String, _
                    ByVal LISOrderID As String, _
                    ByVal ESPatientID As String, _
                    ByVal LISPatientID As String, _
                    ByVal LISTestName As String, _
                    ByVal LISSampleType As String, _
                    ByVal LISUnits As String, _
                    ByVal SpecimenID As String, _
                    ByVal AwosID As String, _
                    ByVal ManualResultFlag As Boolean, _
                    ByVal TestPosition As Integer, _
                    ByVal BackColorGroup As Integer, _
                    ByVal TestLongName As String) As vhisWSResultsRow
            Dim rowvhisWSResultsRow As vhisWSResultsRow = CType(Me.NewRow, vhisWSResultsRow)
            Dim columnValuesArray() As Object = New Object() {HistOrderTestID, AnalyzerID, WorkSessionID, ResultDateTime, PatientID, SampleClass, StatFlag, TestType, SampleType, TestID, TestName, TestVersionNumber, CONCValue, MeasureUnit, MinRefRange, MaxRefRange, ExportStatus, AlarmList, FormulaText, StatFlagImage, ExportImage, GraphImage, RemarkAlert, RefRange, Remarks, AdditionalInfo, ABSValue, ABSWorkReagent, KineticBlankLimit, ABSInitial, ABSMainFilter, BlankAbsorbanceLimit, CalibratorName, LotNumber, NumberOfCalibrators, TheoreticalConcentration, CalibratorFactor, FactorLimits, FactorLowerLimit, FactorUpperLimit, DecimalsAllowed, CONCValueString, MultiPointNumber, Selected, CalibPointUsed, ManualResult, ManualResultText, LISMessageID, LISRequest, ExternalQC, ESOrderID, LISOrderID, ESPatientID, LISPatientID, LISTestName, LISSampleType, LISUnits, SpecimenID, AwosID, ManualResultFlag, TestPosition, BackColorGroup, TestLongName}
            rowvhisWSResultsRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowvhisWSResultsRow)
            Return rowvhisWSResultsRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As vhisWSResultsDataTable = CType(MyBase.Clone, vhisWSResultsDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New vhisWSResultsDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnHistOrderTestID = MyBase.Columns("HistOrderTestID")
            Me.columnAnalyzerID = MyBase.Columns("AnalyzerID")
            Me.columnWorkSessionID = MyBase.Columns("WorkSessionID")
            Me.columnResultDateTime = MyBase.Columns("ResultDateTime")
            Me.columnPatientID = MyBase.Columns("PatientID")
            Me.columnSampleClass = MyBase.Columns("SampleClass")
            Me.columnStatFlag = MyBase.Columns("StatFlag")
            Me.columnTestType = MyBase.Columns("TestType")
            Me.columnSampleType = MyBase.Columns("SampleType")
            Me.columnTestID = MyBase.Columns("TestID")
            Me.columnTestName = MyBase.Columns("TestName")
            Me.columnTestVersionNumber = MyBase.Columns("TestVersionNumber")
            Me.columnCONCValue = MyBase.Columns("CONCValue")
            Me.columnMeasureUnit = MyBase.Columns("MeasureUnit")
            Me.columnMinRefRange = MyBase.Columns("MinRefRange")
            Me.columnMaxRefRange = MyBase.Columns("MaxRefRange")
            Me.columnExportStatus = MyBase.Columns("ExportStatus")
            Me.columnAlarmList = MyBase.Columns("AlarmList")
            Me.columnFormulaText = MyBase.Columns("FormulaText")
            Me.columnStatFlagImage = MyBase.Columns("StatFlagImage")
            Me.columnExportImage = MyBase.Columns("ExportImage")
            Me.columnGraphImage = MyBase.Columns("GraphImage")
            Me.columnRemarkAlert = MyBase.Columns("RemarkAlert")
            Me.columnRefRange = MyBase.Columns("RefRange")
            Me.columnRemarks = MyBase.Columns("Remarks")
            Me.columnAdditionalInfo = MyBase.Columns("AdditionalInfo")
            Me.columnABSValue = MyBase.Columns("ABSValue")
            Me.columnABSWorkReagent = MyBase.Columns("ABSWorkReagent")
            Me.columnKineticBlankLimit = MyBase.Columns("KineticBlankLimit")
            Me.columnABSInitial = MyBase.Columns("ABSInitial")
            Me.columnABSMainFilter = MyBase.Columns("ABSMainFilter")
            Me.columnBlankAbsorbanceLimit = MyBase.Columns("BlankAbsorbanceLimit")
            Me.columnCalibratorName = MyBase.Columns("CalibratorName")
            Me.columnLotNumber = MyBase.Columns("LotNumber")
            Me.columnNumberOfCalibrators = MyBase.Columns("NumberOfCalibrators")
            Me.columnTheoreticalConcentration = MyBase.Columns("TheoreticalConcentration")
            Me.columnCalibratorFactor = MyBase.Columns("CalibratorFactor")
            Me.columnFactorLimits = MyBase.Columns("FactorLimits")
            Me.columnFactorLowerLimit = MyBase.Columns("FactorLowerLimit")
            Me.columnFactorUpperLimit = MyBase.Columns("FactorUpperLimit")
            Me.columnDecimalsAllowed = MyBase.Columns("DecimalsAllowed")
            Me.columnCONCValueString = MyBase.Columns("CONCValueString")
            Me.columnMultiPointNumber = MyBase.Columns("MultiPointNumber")
            Me.columnSelected = MyBase.Columns("Selected")
            Me.columnCalibPointUsed = MyBase.Columns("CalibPointUsed")
            Me.columnManualResult = MyBase.Columns("ManualResult")
            Me.columnManualResultText = MyBase.Columns("ManualResultText")
            Me.columnLISMessageID = MyBase.Columns("LISMessageID")
            Me.columnLISRequest = MyBase.Columns("LISRequest")
            Me.columnExternalQC = MyBase.Columns("ExternalQC")
            Me.columnESOrderID = MyBase.Columns("ESOrderID")
            Me.columnLISOrderID = MyBase.Columns("LISOrderID")
            Me.columnESPatientID = MyBase.Columns("ESPatientID")
            Me.columnLISPatientID = MyBase.Columns("LISPatientID")
            Me.columnLISTestName = MyBase.Columns("LISTestName")
            Me.columnLISSampleType = MyBase.Columns("LISSampleType")
            Me.columnLISUnits = MyBase.Columns("LISUnits")
            Me.columnSpecimenID = MyBase.Columns("SpecimenID")
            Me.columnAwosID = MyBase.Columns("AwosID")
            Me.columnManualResultFlag = MyBase.Columns("ManualResultFlag")
            Me.columnTestPosition = MyBase.Columns("TestPosition")
            Me.columnBackColorGroup = MyBase.Columns("BackColorGroup")
            Me.columnTestLongName = MyBase.Columns("TestLongName")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnHistOrderTestID = New Global.System.Data.DataColumn("HistOrderTestID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHistOrderTestID)
            Me.columnAnalyzerID = New Global.System.Data.DataColumn("AnalyzerID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAnalyzerID)
            Me.columnWorkSessionID = New Global.System.Data.DataColumn("WorkSessionID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWorkSessionID)
            Me.columnResultDateTime = New Global.System.Data.DataColumn("ResultDateTime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnResultDateTime)
            Me.columnPatientID = New Global.System.Data.DataColumn("PatientID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPatientID)
            Me.columnSampleClass = New Global.System.Data.DataColumn("SampleClass", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSampleClass)
            Me.columnStatFlag = New Global.System.Data.DataColumn("StatFlag", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStatFlag)
            Me.columnTestType = New Global.System.Data.DataColumn("TestType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTestType)
            Me.columnSampleType = New Global.System.Data.DataColumn("SampleType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSampleType)
            Me.columnTestID = New Global.System.Data.DataColumn("TestID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTestID)
            Me.columnTestName = New Global.System.Data.DataColumn("TestName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTestName)
            Me.columnTestVersionNumber = New Global.System.Data.DataColumn("TestVersionNumber", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTestVersionNumber)
            Me.columnCONCValue = New Global.System.Data.DataColumn("CONCValue", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONCValue)
            Me.columnMeasureUnit = New Global.System.Data.DataColumn("MeasureUnit", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMeasureUnit)
            Me.columnMinRefRange = New Global.System.Data.DataColumn("MinRefRange", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMinRefRange)
            Me.columnMaxRefRange = New Global.System.Data.DataColumn("MaxRefRange", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaxRefRange)
            Me.columnExportStatus = New Global.System.Data.DataColumn("ExportStatus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExportStatus)
            Me.columnAlarmList = New Global.System.Data.DataColumn("AlarmList", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAlarmList)
            Me.columnFormulaText = New Global.System.Data.DataColumn("FormulaText", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFormulaText)
            Me.columnStatFlagImage = New Global.System.Data.DataColumn("StatFlagImage", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStatFlagImage)
            Me.columnExportImage = New Global.System.Data.DataColumn("ExportImage", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExportImage)
            Me.columnGraphImage = New Global.System.Data.DataColumn("GraphImage", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGraphImage)
            Me.columnRemarkAlert = New Global.System.Data.DataColumn("RemarkAlert", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRemarkAlert)
            Me.columnRefRange = New Global.System.Data.DataColumn("RefRange", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRefRange)
            Me.columnRemarks = New Global.System.Data.DataColumn("Remarks", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRemarks)
            Me.columnAdditionalInfo = New Global.System.Data.DataColumn("AdditionalInfo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAdditionalInfo)
            Me.columnABSValue = New Global.System.Data.DataColumn("ABSValue", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnABSValue)
            Me.columnABSWorkReagent = New Global.System.Data.DataColumn("ABSWorkReagent", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnABSWorkReagent)
            Me.columnKineticBlankLimit = New Global.System.Data.DataColumn("KineticBlankLimit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKineticBlankLimit)
            Me.columnABSInitial = New Global.System.Data.DataColumn("ABSInitial", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnABSInitial)
            Me.columnABSMainFilter = New Global.System.Data.DataColumn("ABSMainFilter", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnABSMainFilter)
            Me.columnBlankAbsorbanceLimit = New Global.System.Data.DataColumn("BlankAbsorbanceLimit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBlankAbsorbanceLimit)
            Me.columnCalibratorName = New Global.System.Data.DataColumn("CalibratorName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCalibratorName)
            Me.columnLotNumber = New Global.System.Data.DataColumn("LotNumber", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLotNumber)
            Me.columnNumberOfCalibrators = New Global.System.Data.DataColumn("NumberOfCalibrators", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumberOfCalibrators)
            Me.columnTheoreticalConcentration = New Global.System.Data.DataColumn("TheoreticalConcentration", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTheoreticalConcentration)
            Me.columnCalibratorFactor = New Global.System.Data.DataColumn("CalibratorFactor", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCalibratorFactor)
            Me.columnFactorLimits = New Global.System.Data.DataColumn("FactorLimits", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFactorLimits)
            Me.columnFactorLowerLimit = New Global.System.Data.DataColumn("FactorLowerLimit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFactorLowerLimit)
            Me.columnFactorUpperLimit = New Global.System.Data.DataColumn("FactorUpperLimit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFactorUpperLimit)
            Me.columnDecimalsAllowed = New Global.System.Data.DataColumn("DecimalsAllowed", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDecimalsAllowed)
            Me.columnCONCValueString = New Global.System.Data.DataColumn("CONCValueString", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONCValueString)
            Me.columnMultiPointNumber = New Global.System.Data.DataColumn("MultiPointNumber", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMultiPointNumber)
            Me.columnSelected = New Global.System.Data.DataColumn("Selected", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSelected)
            Me.columnCalibPointUsed = New Global.System.Data.DataColumn("CalibPointUsed", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCalibPointUsed)
            Me.columnManualResult = New Global.System.Data.DataColumn("ManualResult", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnManualResult)
            Me.columnManualResultText = New Global.System.Data.DataColumn("ManualResultText", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnManualResultText)
            Me.columnLISMessageID = New Global.System.Data.DataColumn("LISMessageID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLISMessageID)
            Me.columnLISRequest = New Global.System.Data.DataColumn("LISRequest", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLISRequest)
            Me.columnExternalQC = New Global.System.Data.DataColumn("ExternalQC", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExternalQC)
            Me.columnESOrderID = New Global.System.Data.DataColumn("ESOrderID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESOrderID)
            Me.columnLISOrderID = New Global.System.Data.DataColumn("LISOrderID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLISOrderID)
            Me.columnESPatientID = New Global.System.Data.DataColumn("ESPatientID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESPatientID)
            Me.columnLISPatientID = New Global.System.Data.DataColumn("LISPatientID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLISPatientID)
            Me.columnLISTestName = New Global.System.Data.DataColumn("LISTestName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLISTestName)
            Me.columnLISSampleType = New Global.System.Data.DataColumn("LISSampleType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLISSampleType)
            Me.columnLISUnits = New Global.System.Data.DataColumn("LISUnits", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLISUnits)
            Me.columnSpecimenID = New Global.System.Data.DataColumn("SpecimenID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecimenID)
            Me.columnAwosID = New Global.System.Data.DataColumn("AwosID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAwosID)
            Me.columnManualResultFlag = New Global.System.Data.DataColumn("ManualResultFlag", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnManualResultFlag)
            Me.columnTestPosition = New Global.System.Data.DataColumn("TestPosition", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTestPosition)
            Me.columnBackColorGroup = New Global.System.Data.DataColumn("BackColorGroup", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBackColorGroup)
            Me.columnTestLongName = New Global.System.Data.DataColumn("TestLongName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTestLongName)
            Me.columnAnalyzerID.MaxLength = 25
            Me.columnWorkSessionID.MaxLength = 10
            Me.columnPatientID.MaxLength = 30
            Me.columnSampleClass.MaxLength = 15
            Me.columnTestType.MaxLength = 15
            Me.columnSampleType.MaxLength = 20
            Me.columnTestName.MaxLength = 16
            Me.columnMeasureUnit.MaxLength = 255
            Me.columnExportStatus.MaxLength = 15
            Me.columnAlarmList.MaxLength = 255
            Me.columnFormulaText.MaxLength = 255
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewvhisWSResultsRow() As vhisWSResultsRow
            Return CType(Me.NewRow, vhisWSResultsRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New vhisWSResultsRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(vhisWSResultsRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.vhisWSResultsRowChangedEvent) Is Nothing) Then
                RaiseEvent vhisWSResultsRowChanged(Me, New vhisWSResultsRowChangeEvent(CType(e.Row, vhisWSResultsRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.vhisWSResultsRowChangingEvent) Is Nothing) Then
                RaiseEvent vhisWSResultsRowChanging(Me, New vhisWSResultsRowChangeEvent(CType(e.Row, vhisWSResultsRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.vhisWSResultsRowDeletedEvent) Is Nothing) Then
                RaiseEvent vhisWSResultsRowDeleted(Me, New vhisWSResultsRowChangeEvent(CType(e.Row, vhisWSResultsRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.vhisWSResultsRowDeletingEvent) Is Nothing) Then
                RaiseEvent vhisWSResultsRowDeleting(Me, New vhisWSResultsRowChangeEvent(CType(e.Row, vhisWSResultsRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemovevhisWSResultsRow(ByVal row As vhisWSResultsRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As HisWSResultsDS = New HisWSResultsDS()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "vhisWSResultsDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class ReportSampleMasterDataTable
        Inherits Global.System.Data.TypedTableBase(Of ReportSampleMasterRow)

        Private columnPatientID As Global.System.Data.DataColumn

        Private columnFullID As Global.System.Data.DataColumn

        Private columnFullName As Global.System.Data.DataColumn

        Private columnGender As Global.System.Data.DataColumn

        Private columnFormatedDateOfBirth As Global.System.Data.DataColumn

        Private columnAgeWithUnit As Global.System.Data.DataColumn

        Private columnPerformedBy As Global.System.Data.DataColumn

        Private columnComments As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "ReportSampleMaster"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PatientIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPatientID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FullIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFullID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FullNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFullName
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property GenderColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGender
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FormatedDateOfBirthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFormatedDateOfBirth
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property AgeWithUnitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAgeWithUnit
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PerformedByColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPerformedBy
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CommentsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnComments
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As ReportSampleMasterRow
            Get
                Return CType(Me.Rows(index), ReportSampleMasterRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event ReportSampleMasterRowChanging As ReportSampleMasterRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event ReportSampleMasterRowChanged As ReportSampleMasterRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event ReportSampleMasterRowDeleting As ReportSampleMasterRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event ReportSampleMasterRowDeleted As ReportSampleMasterRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddReportSampleMasterRow(ByVal row As ReportSampleMasterRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddReportSampleMasterRow(ByVal PatientID As String, ByVal FullID As String, ByVal FullName As String, ByVal Gender As String, ByVal FormatedDateOfBirth As String, ByVal AgeWithUnit As String, ByVal PerformedBy As String, ByVal Comments As String) As ReportSampleMasterRow
            Dim rowReportSampleMasterRow As ReportSampleMasterRow = CType(Me.NewRow, ReportSampleMasterRow)
            Dim columnValuesArray() As Object = New Object() {PatientID, FullID, FullName, Gender, FormatedDateOfBirth, AgeWithUnit, PerformedBy, Comments}
            rowReportSampleMasterRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowReportSampleMasterRow)
            Return rowReportSampleMasterRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ReportSampleMasterDataTable = CType(MyBase.Clone, ReportSampleMasterDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ReportSampleMasterDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnPatientID = MyBase.Columns("PatientID")
            Me.columnFullID = MyBase.Columns("FullID")
            Me.columnFullName = MyBase.Columns("FullName")
            Me.columnGender = MyBase.Columns("Gender")
            Me.columnFormatedDateOfBirth = MyBase.Columns("FormatedDateOfBirth")
            Me.columnAgeWithUnit = MyBase.Columns("AgeWithUnit")
            Me.columnPerformedBy = MyBase.Columns("PerformedBy")
            Me.columnComments = MyBase.Columns("Comments")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnPatientID = New Global.System.Data.DataColumn("PatientID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPatientID)
            Me.columnFullID = New Global.System.Data.DataColumn("FullID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFullID)
            Me.columnFullName = New Global.System.Data.DataColumn("FullName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFullName)
            Me.columnGender = New Global.System.Data.DataColumn("Gender", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGender)
            Me.columnFormatedDateOfBirth = New Global.System.Data.DataColumn("FormatedDateOfBirth", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFormatedDateOfBirth)
            Me.columnAgeWithUnit = New Global.System.Data.DataColumn("AgeWithUnit", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAgeWithUnit)
            Me.columnPerformedBy = New Global.System.Data.DataColumn("PerformedBy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPerformedBy)
            Me.columnComments = New Global.System.Data.DataColumn("Comments", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnComments)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewReportSampleMasterRow() As ReportSampleMasterRow
            Return CType(Me.NewRow, ReportSampleMasterRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ReportSampleMasterRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ReportSampleMasterRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ReportSampleMasterRowChangedEvent) Is Nothing) Then
                RaiseEvent ReportSampleMasterRowChanged(Me, New ReportSampleMasterRowChangeEvent(CType(e.Row, ReportSampleMasterRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ReportSampleMasterRowChangingEvent) Is Nothing) Then
                RaiseEvent ReportSampleMasterRowChanging(Me, New ReportSampleMasterRowChangeEvent(CType(e.Row, ReportSampleMasterRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ReportSampleMasterRowDeletedEvent) Is Nothing) Then
                RaiseEvent ReportSampleMasterRowDeleted(Me, New ReportSampleMasterRowChangeEvent(CType(e.Row, ReportSampleMasterRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ReportSampleMasterRowDeletingEvent) Is Nothing) Then
                RaiseEvent ReportSampleMasterRowDeleting(Me, New ReportSampleMasterRowChangeEvent(CType(e.Row, ReportSampleMasterRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveReportSampleMasterRow(ByVal row As ReportSampleMasterRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As HisWSResultsDS = New HisWSResultsDS()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ReportSampleMasterDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class ReportSampleDetailsDataTable
        Inherits Global.System.Data.TypedTableBase(Of ReportSampleDetailsRow)

        Private columnPatientID As Global.System.Data.DataColumn

        Private columnTestName As Global.System.Data.DataColumn

        Private columnSampleType As Global.System.Data.DataColumn

        Private columnReplicateNumber As Global.System.Data.DataColumn

        Private columnABSValue As Global.System.Data.DataColumn

        Private columnCONC_Value As Global.System.Data.DataColumn

        Private columnReferenceRanges As Global.System.Data.DataColumn

        Private columnUnit As Global.System.Data.DataColumn

        Private columnResultDate As Global.System.Data.DataColumn

        Private columnRemarks As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "ReportSampleDetails"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PatientIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPatientID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TestNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTestName
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SampleTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSampleType
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ReplicateNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReplicateNumber
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ABSValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnABSValue
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CONC_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONC_Value
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ReferenceRangesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReferenceRanges
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property UnitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUnit
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ResultDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnResultDate
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property RemarksColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRemarks
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As ReportSampleDetailsRow
            Get
                Return CType(Me.Rows(index), ReportSampleDetailsRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event ReportSampleDetailsRowChanging As ReportSampleDetailsRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event ReportSampleDetailsRowChanged As ReportSampleDetailsRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event ReportSampleDetailsRowDeleting As ReportSampleDetailsRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event ReportSampleDetailsRowDeleted As ReportSampleDetailsRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddReportSampleDetailsRow(ByVal row As ReportSampleDetailsRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddReportSampleDetailsRow(ByVal PatientID As String, ByVal TestName As String, ByVal SampleType As String, ByVal ReplicateNumber As String, ByVal ABSValue As String, ByVal CONC_Value As String, ByVal ReferenceRanges As String, ByVal Unit As String, ByVal ResultDate As String, ByVal Remarks As String) As ReportSampleDetailsRow
            Dim rowReportSampleDetailsRow As ReportSampleDetailsRow = CType(Me.NewRow, ReportSampleDetailsRow)
            Dim columnValuesArray() As Object = New Object() {PatientID, TestName, SampleType, ReplicateNumber, ABSValue, CONC_Value, ReferenceRanges, Unit, ResultDate, Remarks}
            rowReportSampleDetailsRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowReportSampleDetailsRow)
            Return rowReportSampleDetailsRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ReportSampleDetailsDataTable = CType(MyBase.Clone, ReportSampleDetailsDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ReportSampleDetailsDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnPatientID = MyBase.Columns("PatientID")
            Me.columnTestName = MyBase.Columns("TestName")
            Me.columnSampleType = MyBase.Columns("SampleType")
            Me.columnReplicateNumber = MyBase.Columns("ReplicateNumber")
            Me.columnABSValue = MyBase.Columns("ABSValue")
            Me.columnCONC_Value = MyBase.Columns("CONC_Value")
            Me.columnReferenceRanges = MyBase.Columns("ReferenceRanges")
            Me.columnUnit = MyBase.Columns("Unit")
            Me.columnResultDate = MyBase.Columns("ResultDate")
            Me.columnRemarks = MyBase.Columns("Remarks")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnPatientID = New Global.System.Data.DataColumn("PatientID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPatientID)
            Me.columnTestName = New Global.System.Data.DataColumn("TestName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTestName)
            Me.columnSampleType = New Global.System.Data.DataColumn("SampleType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSampleType)
            Me.columnReplicateNumber = New Global.System.Data.DataColumn("ReplicateNumber", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReplicateNumber)
            Me.columnABSValue = New Global.System.Data.DataColumn("ABSValue", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnABSValue)
            Me.columnCONC_Value = New Global.System.Data.DataColumn("CONC_Value", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONC_Value)
            Me.columnReferenceRanges = New Global.System.Data.DataColumn("ReferenceRanges", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReferenceRanges)
            Me.columnUnit = New Global.System.Data.DataColumn("Unit", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUnit)
            Me.columnResultDate = New Global.System.Data.DataColumn("ResultDate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnResultDate)
            Me.columnRemarks = New Global.System.Data.DataColumn("Remarks", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRemarks)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewReportSampleDetailsRow() As ReportSampleDetailsRow
            Return CType(Me.NewRow, ReportSampleDetailsRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ReportSampleDetailsRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ReportSampleDetailsRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ReportSampleDetailsRowChangedEvent) Is Nothing) Then
                RaiseEvent ReportSampleDetailsRowChanged(Me, New ReportSampleDetailsRowChangeEvent(CType(e.Row, ReportSampleDetailsRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ReportSampleDetailsRowChangingEvent) Is Nothing) Then
                RaiseEvent ReportSampleDetailsRowChanging(Me, New ReportSampleDetailsRowChangeEvent(CType(e.Row, ReportSampleDetailsRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ReportSampleDetailsRowDeletedEvent) Is Nothing) Then
                RaiseEvent ReportSampleDetailsRowDeleted(Me, New ReportSampleDetailsRowChangeEvent(CType(e.Row, ReportSampleDetailsRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ReportSampleDetailsRowDeletingEvent) Is Nothing) Then
                RaiseEvent ReportSampleDetailsRowDeleting(Me, New ReportSampleDetailsRowChangeEvent(CType(e.Row, ReportSampleDetailsRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveReportSampleDetailsRow(ByVal row As ReportSampleDetailsRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As HisWSResultsDS = New HisWSResultsDS()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ReportSampleDetailsDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class thisWSResultsRow
        Inherits Global.System.Data.DataRow

        Private tablethisWSResults As thisWSResultsDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablethisWSResults = CType(Me.Table, thisWSResultsDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property HistOrderTestID() As Integer
            Get
                Try
                    Return CType(Me(Me.tablethisWSResults.HistOrderTestIDColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HistOrderTestID' in table 'thisWSResults' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tablethisWSResults.HistOrderTestIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property AnalyzerID() As String
            Get
                If Me.IsAnalyzerIDNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablethisWSResults.AnalyzerIDColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablethisWSResults.AnalyzerIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property WorkSessionID() As String
            Get
                If Me.IsWorkSessionIDNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablethisWSResults.WorkSessionIDColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablethisWSResults.WorkSessionIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MultiPointNumber() As Integer
            Get
                Try
                    Return CType(Me(Me.tablethisWSResults.MultiPointNumberColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MultiPointNumber' in table 'thisWSResults' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tablethisWSResults.MultiPointNumberColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ResultDateTime() As Date
            Get
                Try
                    Return CType(Me(Me.tablethisWSResults.ResultDateTimeColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ResultDateTime' in table 'thisWSResults' is DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tablethisWSResults.ResultDateTimeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ABSValue() As Single
            Get
                Try
                    Return CType(Me(Me.tablethisWSResults.ABSValueColumn), Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ABSValue' in table 'thisWSResults' is DBNull.", e)
                End Try
            End Get
            Set(value As Single)
                Me(Me.tablethisWSResults.ABSValueColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CONCValue() As Single
            Get
                Try
                    Return CType(Me(Me.tablethisWSResults.CONCValueColumn), Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CONCValue' in table 'thisWSResults' is DBNull.", e)
                End Try
            End Get
            Set(value As Single)
                Me(Me.tablethisWSResults.CONCValueColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ManualResultFlag() As Boolean
            Get
                Try
                    Return CType(Me(Me.tablethisWSResults.ManualResultFlagColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ManualResultFlag' in table 'thisWSResults' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tablethisWSResults.ManualResultFlagColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ManualResult() As Single
            Get
                Try
                    Return CType(Me(Me.tablethisWSResults.ManualResultColumn), Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ManualResult' in table 'thisWSResults' is DBNull.", e)
                End Try
            End Get
            Set(value As Single)
                Me(Me.tablethisWSResults.ManualResultColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ManualResultText() As String
            Get
                If Me.IsManualResultTextNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablethisWSResults.ManualResultTextColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablethisWSResults.ManualResultTextColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property UserComment() As String
            Get
                If Me.IsUserCommentNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablethisWSResults.UserCommentColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablethisWSResults.UserCommentColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CalibratorFactor() As Single
            Get
                Try
                    Return CType(Me(Me.tablethisWSResults.CalibratorFactorColumn), Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CalibratorFactor' in table 'thisWSResults' is DBNull.", e)
                End Try
            End Get
            Set(value As Single)
                Me(Me.tablethisWSResults.CalibratorFactorColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CalibratorBlankAbsUsed() As Single
            Get
                Try
                    Return CType(Me(Me.tablethisWSResults.CalibratorBlankAbsUsedColumn), Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CalibratorBlankAbsUsed' in table 'thisWSResults' is DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As Single)
                Me(Me.tablethisWSResults.CalibratorBlankAbsUsedColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CurveSlope() As Single
            Get
                Try
                    Return CType(Me(Me.tablethisWSResults.CurveSlopeColumn), Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CurveSlope' in table 'thisWSResults' is DBNull.", e)
                End Try
            End Get
            Set(value As Single)
                Me(Me.tablethisWSResults.CurveSlopeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CurveOffSet() As Single
            Get
                Try
                    Return CType(Me(Me.tablethisWSResults.CurveOffSetColumn), Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CurveOffSet' in table 'thisWSResults' is DBNull.", e)
                End Try
            End Get
            Set(value As Single)
                Me(Me.tablethisWSResults.CurveOffSetColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CurveCorrelation() As Single
            Get
                Try
                    Return CType(Me(Me.tablethisWSResults.CurveCorrelationColumn), Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CurveCorrelation' in table 'thisWSResults' is DBNull.", e)
                End Try
            End Get
            Set(value As Single)
                Me(Me.tablethisWSResults.CurveCorrelationColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RelativeErrorCurve() As Single
            Get
                Try
                    Return CType(Me(Me.tablethisWSResults.RelativeErrorCurveColumn), Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RelativeErrorCurve' in table 'thisWSResults' is DBNull.", e)
                End Try
            End Get
            Set(value As Single)
                Me(Me.tablethisWSResults.RelativeErrorCurveColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ExportStatus() As String
            Get
                If Me.IsExportStatusNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablethisWSResults.ExportStatusColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablethisWSResults.ExportStatusColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property BlankAbsorbanceLimit() As Single
            Get
                Try
                    Return CType(Me(Me.tablethisWSResults.BlankAbsorbanceLimitColumn), Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BlankAbsorbanceLimit' in table 'thisWSResults' is DBNull.", e)
                End Try
            End Get
            Set(value As Single)
                Me(Me.tablethisWSResults.BlankAbsorbanceLimitColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property KineticBlankLimit() As Single
            Get
                Try
                    Return CType(Me(Me.tablethisWSResults.KineticBlankLimitColumn), Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KineticBlankLimit' in table 'thisWSResults' is DBNull.", e)
                End Try
            End Get
            Set(value As Single)
                Me(Me.tablethisWSResults.KineticBlankLimitColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FactorLowerLimit() As Single
            Get
                Try
                    Return CType(Me(Me.tablethisWSResults.FactorLowerLimitColumn), Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FactorLowerLimit' in table 'thisWSResults' is DBNull.", e)
                End Try
            End Get
            Set(value As Single)
                Me(Me.tablethisWSResults.FactorLowerLimitColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FactorUpperLimit() As Single
            Get
                Try
                    Return CType(Me(Me.tablethisWSResults.FactorUpperLimitColumn), Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FactorUpperLimit' in table 'thisWSResults' is DBNull.", e)
                End Try
            End Get
            Set(value As Single)
                Me(Me.tablethisWSResults.FactorUpperLimitColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ABSInitial() As Single
            Get
                Try
                    Return CType(Me(Me.tablethisWSResults.ABSInitialColumn), Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ABSInitial' in table 'thisWSResults' is DBNull.", e)
                End Try
            End Get
            Set(value As Single)
                Me(Me.tablethisWSResults.ABSInitialColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ABSWorkReagent() As Single
            Get
                Try
                    Return CType(Me(Me.tablethisWSResults.ABSWorkReagentColumn), Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ABSWorkReagent' in table 'thisWSResults' is DBNull.", e)
                End Try
            End Get
            Set(value As Single)
                Me(Me.tablethisWSResults.ABSWorkReagentColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ABSMainFilter() As Single
            Get
                Try
                    Return CType(Me(Me.tablethisWSResults.ABSMainFilterColumn), Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ABSMainFilter' in table 'thisWSResults' is DBNull.", e)
                End Try
            End Get
            Set(value As Single)
                Me(Me.tablethisWSResults.ABSMainFilterColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MinRefRange() As Single
            Get
                Try
                    Return CType(Me(Me.tablethisWSResults.MinRefRangeColumn), Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MinRefRange' in table 'thisWSResults' is DBNull.", e)
                End Try
            End Get
            Set(value As Single)
                Me(Me.tablethisWSResults.MinRefRangeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MaxRefRange() As Single
            Get
                Try
                    Return CType(Me(Me.tablethisWSResults.MaxRefRangeColumn), Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MaxRefRange' in table 'thisWSResults' is DBNull.", e)
                End Try
            End Get
            Set(value As Single)
                Me(Me.tablethisWSResults.MaxRefRangeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RemarkAlert() As String
            Get
                If Me.IsRemarkAlertNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablethisWSResults.RemarkAlertColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablethisWSResults.RemarkAlertColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property AlarmList() As String
            Get
                If Me.IsAlarmListNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablethisWSResults.AlarmListColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablethisWSResults.AlarmListColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NotCalcCalib() As Boolean
            Get
                Try
                    Return CType(Me(Me.tablethisWSResults.NotCalcCalibColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NotCalcCalib' in table 'thisWSResults' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tablethisWSResults.NotCalcCalibColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ClosedResult() As Boolean
            Get
                Try
                    Return CType(Me(Me.tablethisWSResults.ClosedResultColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ClosedResult' in table 'thisWSResults' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tablethisWSResults.ClosedResultColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property LISMessageID() As String
            Get
                If Me.IsLISMessageIDNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablethisWSResults.LISMessageIDColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablethisWSResults.LISMessageIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsHistOrderTestIDNull() As Boolean
            Return Me.IsNull(Me.tablethisWSResults.HistOrderTestIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetHistOrderTestIDNull()
            Me(Me.tablethisWSResults.HistOrderTestIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsAnalyzerIDNull() As Boolean
            Return Me.IsNull(Me.tablethisWSResults.AnalyzerIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetAnalyzerIDNull()
            Me(Me.tablethisWSResults.AnalyzerIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsWorkSessionIDNull() As Boolean
            Return Me.IsNull(Me.tablethisWSResults.WorkSessionIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetWorkSessionIDNull()
            Me(Me.tablethisWSResults.WorkSessionIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMultiPointNumberNull() As Boolean
            Return Me.IsNull(Me.tablethisWSResults.MultiPointNumberColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMultiPointNumberNull()
            Me(Me.tablethisWSResults.MultiPointNumberColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsResultDateTimeNull() As Boolean
            Return Me.IsNull(Me.tablethisWSResults.ResultDateTimeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetResultDateTimeNull()
            Me(Me.tablethisWSResults.ResultDateTimeColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsABSValueNull() As Boolean
            Return Me.IsNull(Me.tablethisWSResults.ABSValueColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetABSValueNull()
            Me(Me.tablethisWSResults.ABSValueColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCONCValueNull() As Boolean
            Return Me.IsNull(Me.tablethisWSResults.CONCValueColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCONCValueNull()
            Me(Me.tablethisWSResults.CONCValueColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsManualResultFlagNull() As Boolean
            Return Me.IsNull(Me.tablethisWSResults.ManualResultFlagColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetManualResultFlagNull()
            Me(Me.tablethisWSResults.ManualResultFlagColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsManualResultNull() As Boolean
            Return Me.IsNull(Me.tablethisWSResults.ManualResultColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetManualResultNull()
            Me(Me.tablethisWSResults.ManualResultColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsManualResultTextNull() As Boolean
            Return Me.IsNull(Me.tablethisWSResults.ManualResultTextColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetManualResultTextNull()
            Me(Me.tablethisWSResults.ManualResultTextColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsUserCommentNull() As Boolean
            Return Me.IsNull(Me.tablethisWSResults.UserCommentColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetUserCommentNull()
            Me(Me.tablethisWSResults.UserCommentColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCalibratorFactorNull() As Boolean
            Return Me.IsNull(Me.tablethisWSResults.CalibratorFactorColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCalibratorFactorNull()
            Me(Me.tablethisWSResults.CalibratorFactorColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCalibratorBlankAbsUsedNull() As Boolean
            Return Me.IsNull(Me.tablethisWSResults.CalibratorBlankAbsUsedColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCalibratorBlankAbsUsedNull()
            Me(Me.tablethisWSResults.CalibratorBlankAbsUsedColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCurveSlopeNull() As Boolean
            Return Me.IsNull(Me.tablethisWSResults.CurveSlopeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCurveSlopeNull()
            Me(Me.tablethisWSResults.CurveSlopeColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCurveOffSetNull() As Boolean
            Return Me.IsNull(Me.tablethisWSResults.CurveOffSetColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCurveOffSetNull()
            Me(Me.tablethisWSResults.CurveOffSetColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCurveCorrelationNull() As Boolean
            Return Me.IsNull(Me.tablethisWSResults.CurveCorrelationColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCurveCorrelationNull()
            Me(Me.tablethisWSResults.CurveCorrelationColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRelativeErrorCurveNull() As Boolean
            Return Me.IsNull(Me.tablethisWSResults.RelativeErrorCurveColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRelativeErrorCurveNull()
            Me(Me.tablethisWSResults.RelativeErrorCurveColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsExportStatusNull() As Boolean
            Return Me.IsNull(Me.tablethisWSResults.ExportStatusColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetExportStatusNull()
            Me(Me.tablethisWSResults.ExportStatusColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsBlankAbsorbanceLimitNull() As Boolean
            Return Me.IsNull(Me.tablethisWSResults.BlankAbsorbanceLimitColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetBlankAbsorbanceLimitNull()
            Me(Me.tablethisWSResults.BlankAbsorbanceLimitColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsKineticBlankLimitNull() As Boolean
            Return Me.IsNull(Me.tablethisWSResults.KineticBlankLimitColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetKineticBlankLimitNull()
            Me(Me.tablethisWSResults.KineticBlankLimitColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFactorLowerLimitNull() As Boolean
            Return Me.IsNull(Me.tablethisWSResults.FactorLowerLimitColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFactorLowerLimitNull()
            Me(Me.tablethisWSResults.FactorLowerLimitColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFactorUpperLimitNull() As Boolean
            Return Me.IsNull(Me.tablethisWSResults.FactorUpperLimitColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFactorUpperLimitNull()
            Me(Me.tablethisWSResults.FactorUpperLimitColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsABSInitialNull() As Boolean
            Return Me.IsNull(Me.tablethisWSResults.ABSInitialColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetABSInitialNull()
            Me(Me.tablethisWSResults.ABSInitialColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsABSWorkReagentNull() As Boolean
            Return Me.IsNull(Me.tablethisWSResults.ABSWorkReagentColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetABSWorkReagentNull()
            Me(Me.tablethisWSResults.ABSWorkReagentColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsABSMainFilterNull() As Boolean
            Return Me.IsNull(Me.tablethisWSResults.ABSMainFilterColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetABSMainFilterNull()
            Me(Me.tablethisWSResults.ABSMainFilterColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMinRefRangeNull() As Boolean
            Return Me.IsNull(Me.tablethisWSResults.MinRefRangeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMinRefRangeNull()
            Me(Me.tablethisWSResults.MinRefRangeColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMaxRefRangeNull() As Boolean
            Return Me.IsNull(Me.tablethisWSResults.MaxRefRangeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMaxRefRangeNull()
            Me(Me.tablethisWSResults.MaxRefRangeColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRemarkAlertNull() As Boolean
            Return Me.IsNull(Me.tablethisWSResults.RemarkAlertColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRemarkAlertNull()
            Me(Me.tablethisWSResults.RemarkAlertColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsAlarmListNull() As Boolean
            Return Me.IsNull(Me.tablethisWSResults.AlarmListColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetAlarmListNull()
            Me(Me.tablethisWSResults.AlarmListColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNotCalcCalibNull() As Boolean
            Return Me.IsNull(Me.tablethisWSResults.NotCalcCalibColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNotCalcCalibNull()
            Me(Me.tablethisWSResults.NotCalcCalibColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsClosedResultNull() As Boolean
            Return Me.IsNull(Me.tablethisWSResults.ClosedResultColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetClosedResultNull()
            Me(Me.tablethisWSResults.ClosedResultColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsLISMessageIDNull() As Boolean
            Return Me.IsNull(Me.tablethisWSResults.LISMessageIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetLISMessageIDNull()
            Me(Me.tablethisWSResults.LISMessageIDColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class vhisWSResultsRow
        Inherits Global.System.Data.DataRow

        Private tablevhisWSResults As vhisWSResultsDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablevhisWSResults = CType(Me.Table, vhisWSResultsDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property HistOrderTestID() As Integer
            Get
                Try
                    Return CType(Me(Me.tablevhisWSResults.HistOrderTestIDColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HistOrderTestID' in table 'vhisWSResults' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tablevhisWSResults.HistOrderTestIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property AnalyzerID() As String
            Get
                If Me.IsAnalyzerIDNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablevhisWSResults.AnalyzerIDColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablevhisWSResults.AnalyzerIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property WorkSessionID() As String
            Get
                If Me.IsWorkSessionIDNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablevhisWSResults.WorkSessionIDColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablevhisWSResults.WorkSessionIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ResultDateTime() As Date
            Get
                Try
                    Return CType(Me(Me.tablevhisWSResults.ResultDateTimeColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ResultDateTime' in table 'vhisWSResults' is DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tablevhisWSResults.ResultDateTimeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PatientID() As String
            Get
                If Me.IsPatientIDNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablevhisWSResults.PatientIDColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablevhisWSResults.PatientIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SampleClass() As String
            Get
                If Me.IsSampleClassNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablevhisWSResults.SampleClassColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablevhisWSResults.SampleClassColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property StatFlag() As Boolean
            Get
                Try
                    Return CType(Me(Me.tablevhisWSResults.StatFlagColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'StatFlag' in table 'vhisWSResults' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tablevhisWSResults.StatFlagColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TestType() As String
            Get
                If Me.IsTestTypeNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablevhisWSResults.TestTypeColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablevhisWSResults.TestTypeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SampleType() As String
            Get
                If Me.IsSampleTypeNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablevhisWSResults.SampleTypeColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablevhisWSResults.SampleTypeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TestID() As Integer
            Get
                Try
                    Return CType(Me(Me.tablevhisWSResults.TestIDColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TestID' in table 'vhisWSResults' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tablevhisWSResults.TestIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TestName() As String
            Get
                If Me.IsTestNameNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablevhisWSResults.TestNameColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablevhisWSResults.TestNameColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TestVersionNumber() As Byte
            Get
                Try
                    Return CType(Me(Me.tablevhisWSResults.TestVersionNumberColumn), Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TestVersionNumber' in table 'vhisWSResults' is DBNull.", e)
                End Try
            End Get
            Set(value As Byte)
                Me(Me.tablevhisWSResults.TestVersionNumberColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CONCValue() As Single
            Get
                Try
                    Return CType(Me(Me.tablevhisWSResults.CONCValueColumn), Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CONCValue' in table 'vhisWSResults' is DBNull.", e)
                End Try
            End Get
            Set(value As Single)
                Me(Me.tablevhisWSResults.CONCValueColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MeasureUnit() As String
            Get
                If Me.IsMeasureUnitNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablevhisWSResults.MeasureUnitColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablevhisWSResults.MeasureUnitColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MinRefRange() As Single
            Get
                Try
                    Return CType(Me(Me.tablevhisWSResults.MinRefRangeColumn), Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MinRefRange' in table 'vhisWSResults' is DBNull.", e)
                End Try
            End Get
            Set(value As Single)
                Me(Me.tablevhisWSResults.MinRefRangeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MaxRefRange() As Single
            Get
                Try
                    Return CType(Me(Me.tablevhisWSResults.MaxRefRangeColumn), Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MaxRefRange' in table 'vhisWSResults' is DBNull.", e)
                End Try
            End Get
            Set(value As Single)
                Me(Me.tablevhisWSResults.MaxRefRangeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ExportStatus() As String
            Get
                If Me.IsExportStatusNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablevhisWSResults.ExportStatusColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablevhisWSResults.ExportStatusColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property AlarmList() As String
            Get
                If Me.IsAlarmListNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablevhisWSResults.AlarmListColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablevhisWSResults.AlarmListColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FormulaText() As String
            Get
                If Me.IsFormulaTextNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablevhisWSResults.FormulaTextColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablevhisWSResults.FormulaTextColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property StatFlagImage() As Byte()
            Get
                If Me.IsStatFlagImageNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tablevhisWSResults.StatFlagImageColumn), Byte())
                End If
            End Get
            Set(value As Byte())
                Me(Me.tablevhisWSResults.StatFlagImageColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ExportImage() As Byte()
            Get
                If Me.IsExportImageNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tablevhisWSResults.ExportImageColumn), Byte())
                End If
            End Get
            Set(value As Byte())
                Me(Me.tablevhisWSResults.ExportImageColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property GraphImage() As Byte()
            Get
                If Me.IsGraphImageNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tablevhisWSResults.GraphImageColumn), Byte())
                End If
            End Get
            Set(value As Byte())
                Me(Me.tablevhisWSResults.GraphImageColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RemarkAlert() As String
            Get
                If Me.IsRemarkAlertNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablevhisWSResults.RemarkAlertColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablevhisWSResults.RemarkAlertColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RefRange() As String
            Get
                If Me.IsRefRangeNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablevhisWSResults.RefRangeColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablevhisWSResults.RefRangeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Remarks() As String
            Get
                If Me.IsRemarksNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablevhisWSResults.RemarksColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablevhisWSResults.RemarksColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property AdditionalInfo() As String
            Get
                If Me.IsAdditionalInfoNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablevhisWSResults.AdditionalInfoColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablevhisWSResults.AdditionalInfoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ABSValue() As Single
            Get
                Try
                    Return CType(Me(Me.tablevhisWSResults.ABSValueColumn), Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ABSValue' in table 'vhisWSResults' is DBNull.", e)
                End Try
            End Get
            Set(value As Single)
                Me(Me.tablevhisWSResults.ABSValueColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ABSWorkReagent() As Single
            Get
                Try
                    Return CType(Me(Me.tablevhisWSResults.ABSWorkReagentColumn), Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ABSWorkReagent' in table 'vhisWSResults' is DBNull.", e)
                End Try
            End Get
            Set(value As Single)
                Me(Me.tablevhisWSResults.ABSWorkReagentColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property KineticBlankLimit() As Single
            Get
                Try
                    Return CType(Me(Me.tablevhisWSResults.KineticBlankLimitColumn), Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KineticBlankLimit' in table 'vhisWSResults' is DBNull.", e)
                End Try
            End Get
            Set(value As Single)
                Me(Me.tablevhisWSResults.KineticBlankLimitColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ABSInitial() As Single
            Get
                Try
                    Return CType(Me(Me.tablevhisWSResults.ABSInitialColumn), Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ABSInitial' in table 'vhisWSResults' is DBNull.", e)
                End Try
            End Get
            Set(value As Single)
                Me(Me.tablevhisWSResults.ABSInitialColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ABSMainFilter() As Single
            Get
                Try
                    Return CType(Me(Me.tablevhisWSResults.ABSMainFilterColumn), Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ABSMainFilter' in table 'vhisWSResults' is DBNull.", e)
                End Try
            End Get
            Set(value As Single)
                Me(Me.tablevhisWSResults.ABSMainFilterColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property BlankAbsorbanceLimit() As Single
            Get
                Try
                    Return CType(Me(Me.tablevhisWSResults.BlankAbsorbanceLimitColumn), Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BlankAbsorbanceLimit' in table 'vhisWSResults' is DBNull.", e)
                End Try
            End Get
            Set(value As Single)
                Me(Me.tablevhisWSResults.BlankAbsorbanceLimitColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CalibratorName() As String
            Get
                If Me.IsCalibratorNameNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablevhisWSResults.CalibratorNameColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablevhisWSResults.CalibratorNameColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property LotNumber() As String
            Get
                If Me.IsLotNumberNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablevhisWSResults.LotNumberColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablevhisWSResults.LotNumberColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NumberOfCalibrators() As Integer
            Get
                Try
                    Return CType(Me(Me.tablevhisWSResults.NumberOfCalibratorsColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NumberOfCalibrators' in table 'vhisWSResults' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tablevhisWSResults.NumberOfCalibratorsColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TheoreticalConcentration() As Single
            Get
                Try
                    Return CType(Me(Me.tablevhisWSResults.TheoreticalConcentrationColumn), Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TheoreticalConcentration' in table 'vhisWSResults' is DBNul" & _
                            "l.", e)
                End Try
            End Get
            Set(value As Single)
                Me(Me.tablevhisWSResults.TheoreticalConcentrationColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CalibratorFactor() As Single
            Get
                Try
                    Return CType(Me(Me.tablevhisWSResults.CalibratorFactorColumn), Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CalibratorFactor' in table 'vhisWSResults' is DBNull.", e)
                End Try
            End Get
            Set(value As Single)
                Me(Me.tablevhisWSResults.CalibratorFactorColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FactorLimits() As String
            Get
                If Me.IsFactorLimitsNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablevhisWSResults.FactorLimitsColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablevhisWSResults.FactorLimitsColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FactorLowerLimit() As Single
            Get
                Try
                    Return CType(Me(Me.tablevhisWSResults.FactorLowerLimitColumn), Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FactorLowerLimit' in table 'vhisWSResults' is DBNull.", e)
                End Try
            End Get
            Set(value As Single)
                Me(Me.tablevhisWSResults.FactorLowerLimitColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FactorUpperLimit() As Single
            Get
                Try
                    Return CType(Me(Me.tablevhisWSResults.FactorUpperLimitColumn), Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FactorUpperLimit' in table 'vhisWSResults' is DBNull.", e)
                End Try
            End Get
            Set(value As Single)
                Me(Me.tablevhisWSResults.FactorUpperLimitColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DecimalsAllowed() As Byte
            Get
                Try
                    Return CType(Me(Me.tablevhisWSResults.DecimalsAllowedColumn), Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DecimalsAllowed' in table 'vhisWSResults' is DBNull.", e)
                End Try
            End Get
            Set(value As Byte)
                Me(Me.tablevhisWSResults.DecimalsAllowedColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CONCValueString() As String
            Get
                If Me.IsCONCValueStringNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablevhisWSResults.CONCValueStringColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablevhisWSResults.CONCValueStringColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MultiPointNumber() As Integer
            Get
                Try
                    Return CType(Me(Me.tablevhisWSResults.MultiPointNumberColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MultiPointNumber' in table 'vhisWSResults' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tablevhisWSResults.MultiPointNumberColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Selected() As Boolean
            Get
                Try
                    Return CType(Me(Me.tablevhisWSResults.SelectedColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Selected' in table 'vhisWSResults' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tablevhisWSResults.SelectedColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CalibPointUsed() As Integer
            Get
                Try
                    Return CType(Me(Me.tablevhisWSResults.CalibPointUsedColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CalibPointUsed' in table 'vhisWSResults' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tablevhisWSResults.CalibPointUsedColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ManualResult() As Single
            Get
                Try
                    Return CType(Me(Me.tablevhisWSResults.ManualResultColumn), Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ManualResult' in table 'vhisWSResults' is DBNull.", e)
                End Try
            End Get
            Set(value As Single)
                Me(Me.tablevhisWSResults.ManualResultColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ManualResultText() As String
            Get
                If Me.IsManualResultTextNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablevhisWSResults.ManualResultTextColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablevhisWSResults.ManualResultTextColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property LISMessageID() As String
            Get
                If Me.IsLISMessageIDNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablevhisWSResults.LISMessageIDColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablevhisWSResults.LISMessageIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property LISRequest() As Boolean
            Get
                Try
                    Return CType(Me(Me.tablevhisWSResults.LISRequestColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LISRequest' in table 'vhisWSResults' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tablevhisWSResults.LISRequestColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ExternalQC() As Boolean
            Get
                Try
                    Return CType(Me(Me.tablevhisWSResults.ExternalQCColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ExternalQC' in table 'vhisWSResults' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tablevhisWSResults.ExternalQCColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ESOrderID() As String
            Get
                If Me.IsESOrderIDNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablevhisWSResults.ESOrderIDColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablevhisWSResults.ESOrderIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property LISOrderID() As String
            Get
                If Me.IsLISOrderIDNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablevhisWSResults.LISOrderIDColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablevhisWSResults.LISOrderIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ESPatientID() As String
            Get
                If Me.IsESPatientIDNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablevhisWSResults.ESPatientIDColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablevhisWSResults.ESPatientIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property LISPatientID() As String
            Get
                If Me.IsLISPatientIDNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablevhisWSResults.LISPatientIDColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablevhisWSResults.LISPatientIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property LISTestName() As String
            Get
                If Me.IsLISTestNameNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablevhisWSResults.LISTestNameColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablevhisWSResults.LISTestNameColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property LISSampleType() As String
            Get
                If Me.IsLISSampleTypeNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablevhisWSResults.LISSampleTypeColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablevhisWSResults.LISSampleTypeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property LISUnits() As String
            Get
                If Me.IsLISUnitsNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablevhisWSResults.LISUnitsColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablevhisWSResults.LISUnitsColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SpecimenID() As String
            Get
                If Me.IsSpecimenIDNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablevhisWSResults.SpecimenIDColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablevhisWSResults.SpecimenIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property AwosID() As String
            Get
                If Me.IsAwosIDNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablevhisWSResults.AwosIDColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablevhisWSResults.AwosIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ManualResultFlag() As Boolean
            Get
                Try
                    Return CType(Me(Me.tablevhisWSResults.ManualResultFlagColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ManualResultFlag' in table 'vhisWSResults' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tablevhisWSResults.ManualResultFlagColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TestPosition() As Integer
            Get
                Try
                    Return CType(Me(Me.tablevhisWSResults.TestPositionColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TestPosition' in table 'vhisWSResults' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tablevhisWSResults.TestPositionColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property BackColorGroup() As Integer
            Get
                Try
                    Return CType(Me(Me.tablevhisWSResults.BackColorGroupColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BackColorGroup' in table 'vhisWSResults' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tablevhisWSResults.BackColorGroupColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TestLongName() As String
            Get
                If Me.IsTestLongNameNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablevhisWSResults.TestLongNameColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tablevhisWSResults.TestLongNameColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsHistOrderTestIDNull() As Boolean
            Return Me.IsNull(Me.tablevhisWSResults.HistOrderTestIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetHistOrderTestIDNull()
            Me(Me.tablevhisWSResults.HistOrderTestIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsAnalyzerIDNull() As Boolean
            Return Me.IsNull(Me.tablevhisWSResults.AnalyzerIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetAnalyzerIDNull()
            Me(Me.tablevhisWSResults.AnalyzerIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsWorkSessionIDNull() As Boolean
            Return Me.IsNull(Me.tablevhisWSResults.WorkSessionIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetWorkSessionIDNull()
            Me(Me.tablevhisWSResults.WorkSessionIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsResultDateTimeNull() As Boolean
            Return Me.IsNull(Me.tablevhisWSResults.ResultDateTimeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetResultDateTimeNull()
            Me(Me.tablevhisWSResults.ResultDateTimeColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPatientIDNull() As Boolean
            Return Me.IsNull(Me.tablevhisWSResults.PatientIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPatientIDNull()
            Me(Me.tablevhisWSResults.PatientIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSampleClassNull() As Boolean
            Return Me.IsNull(Me.tablevhisWSResults.SampleClassColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSampleClassNull()
            Me(Me.tablevhisWSResults.SampleClassColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsStatFlagNull() As Boolean
            Return Me.IsNull(Me.tablevhisWSResults.StatFlagColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetStatFlagNull()
            Me(Me.tablevhisWSResults.StatFlagColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTestTypeNull() As Boolean
            Return Me.IsNull(Me.tablevhisWSResults.TestTypeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTestTypeNull()
            Me(Me.tablevhisWSResults.TestTypeColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSampleTypeNull() As Boolean
            Return Me.IsNull(Me.tablevhisWSResults.SampleTypeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSampleTypeNull()
            Me(Me.tablevhisWSResults.SampleTypeColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTestIDNull() As Boolean
            Return Me.IsNull(Me.tablevhisWSResults.TestIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTestIDNull()
            Me(Me.tablevhisWSResults.TestIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTestNameNull() As Boolean
            Return Me.IsNull(Me.tablevhisWSResults.TestNameColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTestNameNull()
            Me(Me.tablevhisWSResults.TestNameColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTestVersionNumberNull() As Boolean
            Return Me.IsNull(Me.tablevhisWSResults.TestVersionNumberColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTestVersionNumberNull()
            Me(Me.tablevhisWSResults.TestVersionNumberColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCONCValueNull() As Boolean
            Return Me.IsNull(Me.tablevhisWSResults.CONCValueColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCONCValueNull()
            Me(Me.tablevhisWSResults.CONCValueColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMeasureUnitNull() As Boolean
            Return Me.IsNull(Me.tablevhisWSResults.MeasureUnitColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMeasureUnitNull()
            Me(Me.tablevhisWSResults.MeasureUnitColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMinRefRangeNull() As Boolean
            Return Me.IsNull(Me.tablevhisWSResults.MinRefRangeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMinRefRangeNull()
            Me(Me.tablevhisWSResults.MinRefRangeColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMaxRefRangeNull() As Boolean
            Return Me.IsNull(Me.tablevhisWSResults.MaxRefRangeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMaxRefRangeNull()
            Me(Me.tablevhisWSResults.MaxRefRangeColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsExportStatusNull() As Boolean
            Return Me.IsNull(Me.tablevhisWSResults.ExportStatusColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetExportStatusNull()
            Me(Me.tablevhisWSResults.ExportStatusColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsAlarmListNull() As Boolean
            Return Me.IsNull(Me.tablevhisWSResults.AlarmListColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetAlarmListNull()
            Me(Me.tablevhisWSResults.AlarmListColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFormulaTextNull() As Boolean
            Return Me.IsNull(Me.tablevhisWSResults.FormulaTextColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFormulaTextNull()
            Me(Me.tablevhisWSResults.FormulaTextColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsStatFlagImageNull() As Boolean
            Return Me.IsNull(Me.tablevhisWSResults.StatFlagImageColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetStatFlagImageNull()
            Me(Me.tablevhisWSResults.StatFlagImageColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsExportImageNull() As Boolean
            Return Me.IsNull(Me.tablevhisWSResults.ExportImageColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetExportImageNull()
            Me(Me.tablevhisWSResults.ExportImageColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsGraphImageNull() As Boolean
            Return Me.IsNull(Me.tablevhisWSResults.GraphImageColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetGraphImageNull()
            Me(Me.tablevhisWSResults.GraphImageColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRemarkAlertNull() As Boolean
            Return Me.IsNull(Me.tablevhisWSResults.RemarkAlertColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRemarkAlertNull()
            Me(Me.tablevhisWSResults.RemarkAlertColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRefRangeNull() As Boolean
            Return Me.IsNull(Me.tablevhisWSResults.RefRangeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRefRangeNull()
            Me(Me.tablevhisWSResults.RefRangeColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRemarksNull() As Boolean
            Return Me.IsNull(Me.tablevhisWSResults.RemarksColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRemarksNull()
            Me(Me.tablevhisWSResults.RemarksColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsAdditionalInfoNull() As Boolean
            Return Me.IsNull(Me.tablevhisWSResults.AdditionalInfoColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetAdditionalInfoNull()
            Me(Me.tablevhisWSResults.AdditionalInfoColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsABSValueNull() As Boolean
            Return Me.IsNull(Me.tablevhisWSResults.ABSValueColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetABSValueNull()
            Me(Me.tablevhisWSResults.ABSValueColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsABSWorkReagentNull() As Boolean
            Return Me.IsNull(Me.tablevhisWSResults.ABSWorkReagentColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetABSWorkReagentNull()
            Me(Me.tablevhisWSResults.ABSWorkReagentColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsKineticBlankLimitNull() As Boolean
            Return Me.IsNull(Me.tablevhisWSResults.KineticBlankLimitColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetKineticBlankLimitNull()
            Me(Me.tablevhisWSResults.KineticBlankLimitColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsABSInitialNull() As Boolean
            Return Me.IsNull(Me.tablevhisWSResults.ABSInitialColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetABSInitialNull()
            Me(Me.tablevhisWSResults.ABSInitialColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsABSMainFilterNull() As Boolean
            Return Me.IsNull(Me.tablevhisWSResults.ABSMainFilterColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetABSMainFilterNull()
            Me(Me.tablevhisWSResults.ABSMainFilterColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsBlankAbsorbanceLimitNull() As Boolean
            Return Me.IsNull(Me.tablevhisWSResults.BlankAbsorbanceLimitColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetBlankAbsorbanceLimitNull()
            Me(Me.tablevhisWSResults.BlankAbsorbanceLimitColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCalibratorNameNull() As Boolean
            Return Me.IsNull(Me.tablevhisWSResults.CalibratorNameColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCalibratorNameNull()
            Me(Me.tablevhisWSResults.CalibratorNameColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsLotNumberNull() As Boolean
            Return Me.IsNull(Me.tablevhisWSResults.LotNumberColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetLotNumberNull()
            Me(Me.tablevhisWSResults.LotNumberColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNumberOfCalibratorsNull() As Boolean
            Return Me.IsNull(Me.tablevhisWSResults.NumberOfCalibratorsColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNumberOfCalibratorsNull()
            Me(Me.tablevhisWSResults.NumberOfCalibratorsColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTheoreticalConcentrationNull() As Boolean
            Return Me.IsNull(Me.tablevhisWSResults.TheoreticalConcentrationColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTheoreticalConcentrationNull()
            Me(Me.tablevhisWSResults.TheoreticalConcentrationColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCalibratorFactorNull() As Boolean
            Return Me.IsNull(Me.tablevhisWSResults.CalibratorFactorColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCalibratorFactorNull()
            Me(Me.tablevhisWSResults.CalibratorFactorColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFactorLimitsNull() As Boolean
            Return Me.IsNull(Me.tablevhisWSResults.FactorLimitsColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFactorLimitsNull()
            Me(Me.tablevhisWSResults.FactorLimitsColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFactorLowerLimitNull() As Boolean
            Return Me.IsNull(Me.tablevhisWSResults.FactorLowerLimitColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFactorLowerLimitNull()
            Me(Me.tablevhisWSResults.FactorLowerLimitColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFactorUpperLimitNull() As Boolean
            Return Me.IsNull(Me.tablevhisWSResults.FactorUpperLimitColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFactorUpperLimitNull()
            Me(Me.tablevhisWSResults.FactorUpperLimitColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDecimalsAllowedNull() As Boolean
            Return Me.IsNull(Me.tablevhisWSResults.DecimalsAllowedColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDecimalsAllowedNull()
            Me(Me.tablevhisWSResults.DecimalsAllowedColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCONCValueStringNull() As Boolean
            Return Me.IsNull(Me.tablevhisWSResults.CONCValueStringColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCONCValueStringNull()
            Me(Me.tablevhisWSResults.CONCValueStringColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMultiPointNumberNull() As Boolean
            Return Me.IsNull(Me.tablevhisWSResults.MultiPointNumberColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMultiPointNumberNull()
            Me(Me.tablevhisWSResults.MultiPointNumberColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSelectedNull() As Boolean
            Return Me.IsNull(Me.tablevhisWSResults.SelectedColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSelectedNull()
            Me(Me.tablevhisWSResults.SelectedColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCalibPointUsedNull() As Boolean
            Return Me.IsNull(Me.tablevhisWSResults.CalibPointUsedColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCalibPointUsedNull()
            Me(Me.tablevhisWSResults.CalibPointUsedColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsManualResultNull() As Boolean
            Return Me.IsNull(Me.tablevhisWSResults.ManualResultColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetManualResultNull()
            Me(Me.tablevhisWSResults.ManualResultColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsManualResultTextNull() As Boolean
            Return Me.IsNull(Me.tablevhisWSResults.ManualResultTextColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetManualResultTextNull()
            Me(Me.tablevhisWSResults.ManualResultTextColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsLISMessageIDNull() As Boolean
            Return Me.IsNull(Me.tablevhisWSResults.LISMessageIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetLISMessageIDNull()
            Me(Me.tablevhisWSResults.LISMessageIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsLISRequestNull() As Boolean
            Return Me.IsNull(Me.tablevhisWSResults.LISRequestColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetLISRequestNull()
            Me(Me.tablevhisWSResults.LISRequestColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsExternalQCNull() As Boolean
            Return Me.IsNull(Me.tablevhisWSResults.ExternalQCColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetExternalQCNull()
            Me(Me.tablevhisWSResults.ExternalQCColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsESOrderIDNull() As Boolean
            Return Me.IsNull(Me.tablevhisWSResults.ESOrderIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetESOrderIDNull()
            Me(Me.tablevhisWSResults.ESOrderIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsLISOrderIDNull() As Boolean
            Return Me.IsNull(Me.tablevhisWSResults.LISOrderIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetLISOrderIDNull()
            Me(Me.tablevhisWSResults.LISOrderIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsESPatientIDNull() As Boolean
            Return Me.IsNull(Me.tablevhisWSResults.ESPatientIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetESPatientIDNull()
            Me(Me.tablevhisWSResults.ESPatientIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsLISPatientIDNull() As Boolean
            Return Me.IsNull(Me.tablevhisWSResults.LISPatientIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetLISPatientIDNull()
            Me(Me.tablevhisWSResults.LISPatientIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsLISTestNameNull() As Boolean
            Return Me.IsNull(Me.tablevhisWSResults.LISTestNameColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetLISTestNameNull()
            Me(Me.tablevhisWSResults.LISTestNameColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsLISSampleTypeNull() As Boolean
            Return Me.IsNull(Me.tablevhisWSResults.LISSampleTypeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetLISSampleTypeNull()
            Me(Me.tablevhisWSResults.LISSampleTypeColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsLISUnitsNull() As Boolean
            Return Me.IsNull(Me.tablevhisWSResults.LISUnitsColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetLISUnitsNull()
            Me(Me.tablevhisWSResults.LISUnitsColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSpecimenIDNull() As Boolean
            Return Me.IsNull(Me.tablevhisWSResults.SpecimenIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSpecimenIDNull()
            Me(Me.tablevhisWSResults.SpecimenIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsAwosIDNull() As Boolean
            Return Me.IsNull(Me.tablevhisWSResults.AwosIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetAwosIDNull()
            Me(Me.tablevhisWSResults.AwosIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsManualResultFlagNull() As Boolean
            Return Me.IsNull(Me.tablevhisWSResults.ManualResultFlagColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetManualResultFlagNull()
            Me(Me.tablevhisWSResults.ManualResultFlagColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTestPositionNull() As Boolean
            Return Me.IsNull(Me.tablevhisWSResults.TestPositionColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTestPositionNull()
            Me(Me.tablevhisWSResults.TestPositionColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsBackColorGroupNull() As Boolean
            Return Me.IsNull(Me.tablevhisWSResults.BackColorGroupColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetBackColorGroupNull()
            Me(Me.tablevhisWSResults.BackColorGroupColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTestLongNameNull() As Boolean
            Return Me.IsNull(Me.tablevhisWSResults.TestLongNameColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTestLongNameNull()
            Me(Me.tablevhisWSResults.TestLongNameColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ReportSampleMasterRow
        Inherits Global.System.Data.DataRow

        Private tableReportSampleMaster As ReportSampleMasterDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableReportSampleMaster = CType(Me.Table, ReportSampleMasterDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PatientID() As String
            Get
                Try
                    Return CType(Me(Me.tableReportSampleMaster.PatientIDColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PatientID' in table 'ReportSampleMaster' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableReportSampleMaster.PatientIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FullID() As String
            Get
                Try
                    Return CType(Me(Me.tableReportSampleMaster.FullIDColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FullID' in table 'ReportSampleMaster' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableReportSampleMaster.FullIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FullName() As String
            Get
                Try
                    Return CType(Me(Me.tableReportSampleMaster.FullNameColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FullName' in table 'ReportSampleMaster' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableReportSampleMaster.FullNameColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Gender() As String
            Get
                Try
                    Return CType(Me(Me.tableReportSampleMaster.GenderColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Gender' in table 'ReportSampleMaster' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableReportSampleMaster.GenderColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FormatedDateOfBirth() As String
            Get
                Try
                    Return CType(Me(Me.tableReportSampleMaster.FormatedDateOfBirthColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FormatedDateOfBirth' in table 'ReportSampleMaster' is DBNul" & _
                            "l.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableReportSampleMaster.FormatedDateOfBirthColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property AgeWithUnit() As String
            Get
                Try
                    Return CType(Me(Me.tableReportSampleMaster.AgeWithUnitColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AgeWithUnit' in table 'ReportSampleMaster' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableReportSampleMaster.AgeWithUnitColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PerformedBy() As String
            Get
                Try
                    Return CType(Me(Me.tableReportSampleMaster.PerformedByColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PerformedBy' in table 'ReportSampleMaster' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableReportSampleMaster.PerformedByColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Comments() As String
            Get
                Try
                    Return CType(Me(Me.tableReportSampleMaster.CommentsColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Comments' in table 'ReportSampleMaster' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableReportSampleMaster.CommentsColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPatientIDNull() As Boolean
            Return Me.IsNull(Me.tableReportSampleMaster.PatientIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPatientIDNull()
            Me(Me.tableReportSampleMaster.PatientIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFullIDNull() As Boolean
            Return Me.IsNull(Me.tableReportSampleMaster.FullIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFullIDNull()
            Me(Me.tableReportSampleMaster.FullIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFullNameNull() As Boolean
            Return Me.IsNull(Me.tableReportSampleMaster.FullNameColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFullNameNull()
            Me(Me.tableReportSampleMaster.FullNameColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsGenderNull() As Boolean
            Return Me.IsNull(Me.tableReportSampleMaster.GenderColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetGenderNull()
            Me(Me.tableReportSampleMaster.GenderColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFormatedDateOfBirthNull() As Boolean
            Return Me.IsNull(Me.tableReportSampleMaster.FormatedDateOfBirthColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFormatedDateOfBirthNull()
            Me(Me.tableReportSampleMaster.FormatedDateOfBirthColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsAgeWithUnitNull() As Boolean
            Return Me.IsNull(Me.tableReportSampleMaster.AgeWithUnitColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetAgeWithUnitNull()
            Me(Me.tableReportSampleMaster.AgeWithUnitColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPerformedByNull() As Boolean
            Return Me.IsNull(Me.tableReportSampleMaster.PerformedByColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPerformedByNull()
            Me(Me.tableReportSampleMaster.PerformedByColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCommentsNull() As Boolean
            Return Me.IsNull(Me.tableReportSampleMaster.CommentsColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCommentsNull()
            Me(Me.tableReportSampleMaster.CommentsColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ReportSampleDetailsRow
        Inherits Global.System.Data.DataRow

        Private tableReportSampleDetails As ReportSampleDetailsDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableReportSampleDetails = CType(Me.Table, ReportSampleDetailsDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PatientID() As String
            Get
                Try
                    Return CType(Me(Me.tableReportSampleDetails.PatientIDColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PatientID' in table 'ReportSampleDetails' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableReportSampleDetails.PatientIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TestName() As String
            Get
                Try
                    Return CType(Me(Me.tableReportSampleDetails.TestNameColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TestName' in table 'ReportSampleDetails' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableReportSampleDetails.TestNameColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SampleType() As String
            Get
                Try
                    Return CType(Me(Me.tableReportSampleDetails.SampleTypeColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SampleType' in table 'ReportSampleDetails' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableReportSampleDetails.SampleTypeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ReplicateNumber() As String
            Get
                Try
                    Return CType(Me(Me.tableReportSampleDetails.ReplicateNumberColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ReplicateNumber' in table 'ReportSampleDetails' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableReportSampleDetails.ReplicateNumberColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ABSValue() As String
            Get
                Try
                    Return CType(Me(Me.tableReportSampleDetails.ABSValueColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ABSValue' in table 'ReportSampleDetails' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableReportSampleDetails.ABSValueColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CONC_Value() As String
            Get
                Try
                    Return CType(Me(Me.tableReportSampleDetails.CONC_ValueColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CONC_Value' in table 'ReportSampleDetails' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableReportSampleDetails.CONC_ValueColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ReferenceRanges() As String
            Get
                Try
                    Return CType(Me(Me.tableReportSampleDetails.ReferenceRangesColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ReferenceRanges' in table 'ReportSampleDetails' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableReportSampleDetails.ReferenceRangesColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Unit() As String
            Get
                Try
                    Return CType(Me(Me.tableReportSampleDetails.UnitColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Unit' in table 'ReportSampleDetails' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableReportSampleDetails.UnitColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ResultDate() As String
            Get
                Try
                    Return CType(Me(Me.tableReportSampleDetails.ResultDateColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ResultDate' in table 'ReportSampleDetails' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableReportSampleDetails.ResultDateColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Remarks() As String
            Get
                Try
                    Return CType(Me(Me.tableReportSampleDetails.RemarksColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Remarks' in table 'ReportSampleDetails' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableReportSampleDetails.RemarksColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPatientIDNull() As Boolean
            Return Me.IsNull(Me.tableReportSampleDetails.PatientIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPatientIDNull()
            Me(Me.tableReportSampleDetails.PatientIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTestNameNull() As Boolean
            Return Me.IsNull(Me.tableReportSampleDetails.TestNameColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTestNameNull()
            Me(Me.tableReportSampleDetails.TestNameColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSampleTypeNull() As Boolean
            Return Me.IsNull(Me.tableReportSampleDetails.SampleTypeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSampleTypeNull()
            Me(Me.tableReportSampleDetails.SampleTypeColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsReplicateNumberNull() As Boolean
            Return Me.IsNull(Me.tableReportSampleDetails.ReplicateNumberColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetReplicateNumberNull()
            Me(Me.tableReportSampleDetails.ReplicateNumberColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsABSValueNull() As Boolean
            Return Me.IsNull(Me.tableReportSampleDetails.ABSValueColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetABSValueNull()
            Me(Me.tableReportSampleDetails.ABSValueColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCONC_ValueNull() As Boolean
            Return Me.IsNull(Me.tableReportSampleDetails.CONC_ValueColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCONC_ValueNull()
            Me(Me.tableReportSampleDetails.CONC_ValueColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsReferenceRangesNull() As Boolean
            Return Me.IsNull(Me.tableReportSampleDetails.ReferenceRangesColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetReferenceRangesNull()
            Me(Me.tableReportSampleDetails.ReferenceRangesColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsUnitNull() As Boolean
            Return Me.IsNull(Me.tableReportSampleDetails.UnitColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetUnitNull()
            Me(Me.tableReportSampleDetails.UnitColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsResultDateNull() As Boolean
            Return Me.IsNull(Me.tableReportSampleDetails.ResultDateColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetResultDateNull()
            Me(Me.tableReportSampleDetails.ResultDateColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRemarksNull() As Boolean
            Return Me.IsNull(Me.tableReportSampleDetails.RemarksColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRemarksNull()
            Me(Me.tableReportSampleDetails.RemarksColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class thisWSResultsRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As thisWSResultsRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As thisWSResultsRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As thisWSResultsRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class vhisWSResultsRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As vhisWSResultsRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As vhisWSResultsRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As vhisWSResultsRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class ReportSampleMasterRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As ReportSampleMasterRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As ReportSampleMasterRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As ReportSampleMasterRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class ReportSampleDetailsRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As ReportSampleDetailsRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As ReportSampleDetailsRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As ReportSampleDetailsRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
