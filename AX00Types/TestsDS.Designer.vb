'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.17929
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("TestsDS"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class TestsDS
    Inherits Global.System.Data.DataSet
    
    Private tabletparTests As tparTestsDataTable
    
    Private tabletestCalculations As testCalculationsDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("tparTests")) Is Nothing) Then
                MyBase.Tables.Add(New tparTestsDataTable(ds.Tables("tparTests")))
            End If
            If (Not (ds.Tables("testCalculations")) Is Nothing) Then
                MyBase.Tables.Add(New testCalculationsDataTable(ds.Tables("testCalculations")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tparTests() As tparTestsDataTable
        Get
            Return Me.tabletparTests
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property testCalculations() As testCalculationsDataTable
        Get
            Return Me.tabletestCalculations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As TestsDS = CType(MyBase.Clone,TestsDS)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("tparTests")) Is Nothing) Then
                MyBase.Tables.Add(New tparTestsDataTable(ds.Tables("tparTests")))
            End If
            If (Not (ds.Tables("testCalculations")) Is Nothing) Then
                MyBase.Tables.Add(New testCalculationsDataTable(ds.Tables("testCalculations")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tabletparTests = CType(MyBase.Tables("tparTests"),tparTestsDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletparTests) Is Nothing) Then
                Me.tabletparTests.InitVars
            End If
        End If
        Me.tabletestCalculations = CType(MyBase.Tables("testCalculations"),testCalculationsDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletestCalculations) Is Nothing) Then
                Me.tabletestCalculations.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "TestsDS"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/TestsDS.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tabletparTests = New tparTestsDataTable()
        MyBase.Tables.Add(Me.tabletparTests)
        Me.tabletestCalculations = New testCalculationsDataTable()
        MyBase.Tables.Add(Me.tabletestCalculations)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializetparTests() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializetestCalculations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As TestsDS = New TestsDS()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub tparTestsRowChangeEventHandler(ByVal sender As Object, ByVal e As tparTestsRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub testCalculationsRowChangeEventHandler(ByVal sender As Object, ByVal e As testCalculationsRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tparTestsDataTable
        Inherits Global.System.Data.TypedTableBase(Of tparTestsRow)
        
        Private columnTestID As Global.System.Data.DataColumn
        
        Private columnTestName As Global.System.Data.DataColumn
        
        Private columnShortName As Global.System.Data.DataColumn
        
        Private columnTestPosition As Global.System.Data.DataColumn
        
        Private columnPreloadedTest As Global.System.Data.DataColumn
        
        Private columnMeasureUnit As Global.System.Data.DataColumn
        
        Private columnAnalysisMode As Global.System.Data.DataColumn
        
        Private columnReagentsNumber As Global.System.Data.DataColumn
        
        Private columnReactionType As Global.System.Data.DataColumn
        
        Private columnReplicatesNumber As Global.System.Data.DataColumn
        
        Private columnDecimalsAllowed As Global.System.Data.DataColumn
        
        Private columnTurbidimetryFlag As Global.System.Data.DataColumn
        
        Private columnAbsorbanceFlag As Global.System.Data.DataColumn
        
        Private columnReadingMode As Global.System.Data.DataColumn
        
        Private columnFirstReadingCycle As Global.System.Data.DataColumn
        
        Private columnSecondReadingCycle As Global.System.Data.DataColumn
        
        Private columnMainWavelength As Global.System.Data.DataColumn
        
        Private columnReferenceWavelength As Global.System.Data.DataColumn
        
        Private columnBlankMode As Global.System.Data.DataColumn
        
        Private columnBlankReplicates As Global.System.Data.DataColumn
        
        Private columnKineticBlankLimit As Global.System.Data.DataColumn
        
        Private columnProzoneRatio As Global.System.Data.DataColumn
        
        Private columnProzoneTime1 As Global.System.Data.DataColumn
        
        Private columnProzoneTime2 As Global.System.Data.DataColumn
        
        Private columnInUse As Global.System.Data.DataColumn
        
        Private columnTestVersionNumber As Global.System.Data.DataColumn
        
        Private columnTestVersionDateTime As Global.System.Data.DataColumn
        
        Private columnSpecialTest As Global.System.Data.DataColumn
        
        Private columnTS_User As Global.System.Data.DataColumn
        
        Private columnTS_DateTime As Global.System.Data.DataColumn
        
        Private columnIconPath As Global.System.Data.DataColumn
        
        Private columnNewTest As Global.System.Data.DataColumn
        
        Private columnExistBlankResult As Global.System.Data.DataColumn
        
        Private columnDeleteResultAnswer As Global.System.Data.DataColumn
        
        Private columnNumberOfControls As Global.System.Data.DataColumn
        
        Private columnSampleType As Global.System.Data.DataColumn
        
        Private columnEnableStatus As Global.System.Data.DataColumn
        
        Private columnType As Global.System.Data.DataColumn
        
        Private columnCalibratorID As Global.System.Data.DataColumn
        
        Private columnTestCalibratorID As Global.System.Data.DataColumn
        
        Private columnCalibratorName As Global.System.Data.DataColumn
        
        Private columnFactoryCalib As Global.System.Data.DataColumn
        
        Private columnRejectionCriteria As Global.System.Data.DataColumn
        
        Private columnQCActive As Global.System.Data.DataColumn
        
        Private columnActiveControl As Global.System.Data.DataColumn
        
        Private columnControlID As Global.System.Data.DataColumn
        
        Private columnLISValue As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "tparTests"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TestIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTestID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TestNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTestName
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ShortNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnShortName
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TestPositionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTestPosition
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PreloadedTestColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPreloadedTest
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MeasureUnitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMeasureUnit
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property AnalysisModeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAnalysisMode
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ReagentsNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReagentsNumber
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ReactionTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReactionType
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ReplicatesNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReplicatesNumber
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DecimalsAllowedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDecimalsAllowed
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TurbidimetryFlagColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTurbidimetryFlag
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property AbsorbanceFlagColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAbsorbanceFlag
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ReadingModeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReadingMode
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FirstReadingCycleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFirstReadingCycle
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SecondReadingCycleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSecondReadingCycle
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MainWavelengthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMainWavelength
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ReferenceWavelengthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReferenceWavelength
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property BlankModeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBlankMode
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property BlankReplicatesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBlankReplicates
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property KineticBlankLimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKineticBlankLimit
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ProzoneRatioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProzoneRatio
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ProzoneTime1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnProzoneTime1
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ProzoneTime2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnProzoneTime2
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property InUseColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInUse
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TestVersionNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTestVersionNumber
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TestVersionDateTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTestVersionDateTime
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SpecialTestColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecialTest
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TS_UserColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTS_User
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TS_DateTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTS_DateTime
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IconPathColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIconPath
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NewTestColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNewTest
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ExistBlankResultColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExistBlankResult
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DeleteResultAnswerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDeleteResultAnswer
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NumberOfControlsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumberOfControls
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SampleTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSampleType
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property EnableStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEnableStatus
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnType
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CalibratorIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCalibratorID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TestCalibratorIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTestCalibratorID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CalibratorNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCalibratorName
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FactoryCalibColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFactoryCalib
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property RejectionCriteriaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRejectionCriteria
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property QCActiveColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQCActive
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ActiveControlColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnActiveControl
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ControlIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnControlID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property LISValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLISValue
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As tparTestsRow
            Get
                Return CType(Me.Rows(index), tparTestsRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event tparTestsRowChanging As tparTestsRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event tparTestsRowChanged As tparTestsRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event tparTestsRowDeleting As tparTestsRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event tparTestsRowDeleted As tparTestsRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddtparTestsRow(ByVal row As tparTestsRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddtparTestsRow( _
                    ByVal TestID As Integer, _
                    ByVal TestName As String, _
                    ByVal ShortName As String, _
                    ByVal TestPosition As Integer, _
                    ByVal PreloadedTest As Boolean, _
                    ByVal MeasureUnit As String, _
                    ByVal AnalysisMode As String, _
                    ByVal ReagentsNumber As Integer, _
                    ByVal ReactionType As String, _
                    ByVal ReplicatesNumber As Integer, _
                    ByVal DecimalsAllowed As Integer, _
                    ByVal TurbidimetryFlag As Boolean, _
                    ByVal AbsorbanceFlag As Boolean, _
                    ByVal ReadingMode As String, _
                    ByVal FirstReadingCycle As Integer, _
                    ByVal SecondReadingCycle As Integer, _
                    ByVal MainWavelength As Integer, _
                    ByVal ReferenceWavelength As Integer, _
                    ByVal BlankMode As String, _
                    ByVal BlankReplicates As Integer, _
                    ByVal KineticBlankLimit As Single, _
                    ByVal ProzoneRatio As Single, _
                    ByVal ProzoneTime1 As Integer, _
                    ByVal ProzoneTime2 As Integer, _
                    ByVal InUse As Boolean, _
                    ByVal TestVersionNumber As Integer, _
                    ByVal TestVersionDateTime As Date, _
                    ByVal SpecialTest As Boolean, _
                    ByVal TS_User As String, _
                    ByVal TS_DateTime As Date, _
                    ByVal IconPath As String, _
                    ByVal NewTest As Boolean, _
                    ByVal ExistBlankResult As Boolean, _
                    ByVal DeleteResultAnswer As Boolean, _
                    ByVal NumberOfControls As Integer, _
                    ByVal SampleType As String, _
                    ByVal EnableStatus As Boolean, _
                    ByVal Type() As Byte, _
                    ByVal CalibratorID As Integer, _
                    ByVal TestCalibratorID As Integer, _
                    ByVal CalibratorName As String, _
                    ByVal FactoryCalib As Boolean, _
                    ByVal RejectionCriteria As Single, _
                    ByVal QCActive As Boolean, _
                    ByVal ActiveControl As Boolean, _
                    ByVal ControlID As Integer, _
                    ByVal LISValue As String) As tparTestsRow
            Dim rowtparTestsRow As tparTestsRow = CType(Me.NewRow, tparTestsRow)
            Dim columnValuesArray() As Object = New Object() {TestID, TestName, ShortName, TestPosition, PreloadedTest, MeasureUnit, AnalysisMode, ReagentsNumber, ReactionType, ReplicatesNumber, DecimalsAllowed, TurbidimetryFlag, AbsorbanceFlag, ReadingMode, FirstReadingCycle, SecondReadingCycle, MainWavelength, ReferenceWavelength, BlankMode, BlankReplicates, KineticBlankLimit, ProzoneRatio, ProzoneTime1, ProzoneTime2, InUse, TestVersionNumber, TestVersionDateTime, SpecialTest, TS_User, TS_DateTime, IconPath, NewTest, ExistBlankResult, DeleteResultAnswer, NumberOfControls, SampleType, EnableStatus, Type, CalibratorID, TestCalibratorID, CalibratorName, FactoryCalib, RejectionCriteria, QCActive, ActiveControl, ControlID, LISValue}
            rowtparTestsRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtparTestsRow)
            Return rowtparTestsRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tparTestsDataTable = CType(MyBase.Clone, tparTestsDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tparTestsDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnTestID = MyBase.Columns("TestID")
            Me.columnTestName = MyBase.Columns("TestName")
            Me.columnShortName = MyBase.Columns("ShortName")
            Me.columnTestPosition = MyBase.Columns("TestPosition")
            Me.columnPreloadedTest = MyBase.Columns("PreloadedTest")
            Me.columnMeasureUnit = MyBase.Columns("MeasureUnit")
            Me.columnAnalysisMode = MyBase.Columns("AnalysisMode")
            Me.columnReagentsNumber = MyBase.Columns("ReagentsNumber")
            Me.columnReactionType = MyBase.Columns("ReactionType")
            Me.columnReplicatesNumber = MyBase.Columns("ReplicatesNumber")
            Me.columnDecimalsAllowed = MyBase.Columns("DecimalsAllowed")
            Me.columnTurbidimetryFlag = MyBase.Columns("TurbidimetryFlag")
            Me.columnAbsorbanceFlag = MyBase.Columns("AbsorbanceFlag")
            Me.columnReadingMode = MyBase.Columns("ReadingMode")
            Me.columnFirstReadingCycle = MyBase.Columns("FirstReadingCycle")
            Me.columnSecondReadingCycle = MyBase.Columns("SecondReadingCycle")
            Me.columnMainWavelength = MyBase.Columns("MainWavelength")
            Me.columnReferenceWavelength = MyBase.Columns("ReferenceWavelength")
            Me.columnBlankMode = MyBase.Columns("BlankMode")
            Me.columnBlankReplicates = MyBase.Columns("BlankReplicates")
            Me.columnKineticBlankLimit = MyBase.Columns("KineticBlankLimit")
            Me.columnProzoneRatio = MyBase.Columns("ProzoneRatio")
            Me.columnProzoneTime1 = MyBase.Columns("ProzoneTime1")
            Me.columnProzoneTime2 = MyBase.Columns("ProzoneTime2")
            Me.columnInUse = MyBase.Columns("InUse")
            Me.columnTestVersionNumber = MyBase.Columns("TestVersionNumber")
            Me.columnTestVersionDateTime = MyBase.Columns("TestVersionDateTime")
            Me.columnSpecialTest = MyBase.Columns("SpecialTest")
            Me.columnTS_User = MyBase.Columns("TS_User")
            Me.columnTS_DateTime = MyBase.Columns("TS_DateTime")
            Me.columnIconPath = MyBase.Columns("IconPath")
            Me.columnNewTest = MyBase.Columns("NewTest")
            Me.columnExistBlankResult = MyBase.Columns("ExistBlankResult")
            Me.columnDeleteResultAnswer = MyBase.Columns("DeleteResultAnswer")
            Me.columnNumberOfControls = MyBase.Columns("NumberOfControls")
            Me.columnSampleType = MyBase.Columns("SampleType")
            Me.columnEnableStatus = MyBase.Columns("EnableStatus")
            Me.columnType = MyBase.Columns("Type")
            Me.columnCalibratorID = MyBase.Columns("CalibratorID")
            Me.columnTestCalibratorID = MyBase.Columns("TestCalibratorID")
            Me.columnCalibratorName = MyBase.Columns("CalibratorName")
            Me.columnFactoryCalib = MyBase.Columns("FactoryCalib")
            Me.columnRejectionCriteria = MyBase.Columns("RejectionCriteria")
            Me.columnQCActive = MyBase.Columns("QCActive")
            Me.columnActiveControl = MyBase.Columns("ActiveControl")
            Me.columnControlID = MyBase.Columns("ControlID")
            Me.columnLISValue = MyBase.Columns("LISValue")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnTestID = New Global.System.Data.DataColumn("TestID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTestID)
            Me.columnTestName = New Global.System.Data.DataColumn("TestName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTestName)
            Me.columnShortName = New Global.System.Data.DataColumn("ShortName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnShortName)
            Me.columnTestPosition = New Global.System.Data.DataColumn("TestPosition", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTestPosition)
            Me.columnPreloadedTest = New Global.System.Data.DataColumn("PreloadedTest", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPreloadedTest)
            Me.columnMeasureUnit = New Global.System.Data.DataColumn("MeasureUnit", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMeasureUnit)
            Me.columnAnalysisMode = New Global.System.Data.DataColumn("AnalysisMode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAnalysisMode)
            Me.columnReagentsNumber = New Global.System.Data.DataColumn("ReagentsNumber", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReagentsNumber)
            Me.columnReactionType = New Global.System.Data.DataColumn("ReactionType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReactionType)
            Me.columnReplicatesNumber = New Global.System.Data.DataColumn("ReplicatesNumber", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReplicatesNumber)
            Me.columnDecimalsAllowed = New Global.System.Data.DataColumn("DecimalsAllowed", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDecimalsAllowed)
            Me.columnTurbidimetryFlag = New Global.System.Data.DataColumn("TurbidimetryFlag", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTurbidimetryFlag)
            Me.columnAbsorbanceFlag = New Global.System.Data.DataColumn("AbsorbanceFlag", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAbsorbanceFlag)
            Me.columnReadingMode = New Global.System.Data.DataColumn("ReadingMode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReadingMode)
            Me.columnFirstReadingCycle = New Global.System.Data.DataColumn("FirstReadingCycle", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFirstReadingCycle)
            Me.columnSecondReadingCycle = New Global.System.Data.DataColumn("SecondReadingCycle", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSecondReadingCycle)
            Me.columnMainWavelength = New Global.System.Data.DataColumn("MainWavelength", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMainWavelength)
            Me.columnReferenceWavelength = New Global.System.Data.DataColumn("ReferenceWavelength", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReferenceWavelength)
            Me.columnBlankMode = New Global.System.Data.DataColumn("BlankMode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBlankMode)
            Me.columnBlankReplicates = New Global.System.Data.DataColumn("BlankReplicates", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBlankReplicates)
            Me.columnKineticBlankLimit = New Global.System.Data.DataColumn("KineticBlankLimit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKineticBlankLimit)
            Me.columnProzoneRatio = New Global.System.Data.DataColumn("ProzoneRatio", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProzoneRatio)
            Me.columnProzoneTime1 = New Global.System.Data.DataColumn("ProzoneTime1", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProzoneTime1)
            Me.columnProzoneTime2 = New Global.System.Data.DataColumn("ProzoneTime2", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProzoneTime2)
            Me.columnInUse = New Global.System.Data.DataColumn("InUse", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInUse)
            Me.columnTestVersionNumber = New Global.System.Data.DataColumn("TestVersionNumber", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTestVersionNumber)
            Me.columnTestVersionDateTime = New Global.System.Data.DataColumn("TestVersionDateTime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTestVersionDateTime)
            Me.columnSpecialTest = New Global.System.Data.DataColumn("SpecialTest", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecialTest)
            Me.columnTS_User = New Global.System.Data.DataColumn("TS_User", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTS_User)
            Me.columnTS_DateTime = New Global.System.Data.DataColumn("TS_DateTime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTS_DateTime)
            Me.columnIconPath = New Global.System.Data.DataColumn("IconPath", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIconPath)
            Me.columnNewTest = New Global.System.Data.DataColumn("NewTest", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNewTest)
            Me.columnExistBlankResult = New Global.System.Data.DataColumn("ExistBlankResult", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExistBlankResult)
            Me.columnDeleteResultAnswer = New Global.System.Data.DataColumn("DeleteResultAnswer", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDeleteResultAnswer)
            Me.columnNumberOfControls = New Global.System.Data.DataColumn("NumberOfControls", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumberOfControls)
            Me.columnSampleType = New Global.System.Data.DataColumn("SampleType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSampleType)
            Me.columnEnableStatus = New Global.System.Data.DataColumn("EnableStatus", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEnableStatus)
            Me.columnType = New Global.System.Data.DataColumn("Type", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnType)
            Me.columnCalibratorID = New Global.System.Data.DataColumn("CalibratorID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCalibratorID)
            Me.columnTestCalibratorID = New Global.System.Data.DataColumn("TestCalibratorID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTestCalibratorID)
            Me.columnCalibratorName = New Global.System.Data.DataColumn("CalibratorName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCalibratorName)
            Me.columnFactoryCalib = New Global.System.Data.DataColumn("FactoryCalib", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFactoryCalib)
            Me.columnRejectionCriteria = New Global.System.Data.DataColumn("RejectionCriteria", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRejectionCriteria)
            Me.columnQCActive = New Global.System.Data.DataColumn("QCActive", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQCActive)
            Me.columnActiveControl = New Global.System.Data.DataColumn("ActiveControl", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnActiveControl)
            Me.columnControlID = New Global.System.Data.DataColumn("ControlID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnControlID)
            Me.columnLISValue = New Global.System.Data.DataColumn("LISValue", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLISValue)
            Me.columnTestName.MaxLength = 16
            Me.columnMeasureUnit.MaxLength = 20
            Me.columnAnalysisMode.MaxLength = 15
            Me.columnReactionType.MaxLength = 15
            Me.columnReadingMode.MaxLength = 15
            Me.columnBlankMode.MaxLength = 15
            Me.columnTS_User.MaxLength = 16
            Me.columnNewTest.DefaultValue = CType(False, Boolean)
            Me.columnExistBlankResult.DefaultValue = CType(False, Boolean)
            Me.columnDeleteResultAnswer.DefaultValue = CType(False, Boolean)
            Me.columnSampleType.DefaultValue = CType("", String)
            Me.columnEnableStatus.DefaultValue = CType(False, Boolean)
            Me.columnLISValue.DefaultValue = CType("", String)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewtparTestsRow() As tparTestsRow
            Return CType(Me.NewRow, tparTestsRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tparTestsRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tparTestsRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tparTestsRowChangedEvent) Is Nothing) Then
                RaiseEvent tparTestsRowChanged(Me, New tparTestsRowChangeEvent(CType(e.Row, tparTestsRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tparTestsRowChangingEvent) Is Nothing) Then
                RaiseEvent tparTestsRowChanging(Me, New tparTestsRowChangeEvent(CType(e.Row, tparTestsRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tparTestsRowDeletedEvent) Is Nothing) Then
                RaiseEvent tparTestsRowDeleted(Me, New tparTestsRowChangeEvent(CType(e.Row, tparTestsRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tparTestsRowDeletingEvent) Is Nothing) Then
                RaiseEvent tparTestsRowDeleting(Me, New tparTestsRowChangeEvent(CType(e.Row, tparTestsRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemovetparTestsRow(ByVal row As tparTestsRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As TestsDS = New TestsDS()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tparTestsDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class testCalculationsDataTable
        Inherits Global.System.Data.TypedTableBase(Of testCalculationsRow)

        Private columnAnalysisMode As Global.System.Data.DataColumn

        Private columnReagentsNumber As Global.System.Data.DataColumn

        Private columnReactionType As Global.System.Data.DataColumn

        Private columnAbsorbanceFlag As Global.System.Data.DataColumn

        Private columnReadingMode As Global.System.Data.DataColumn

        Private columnFirstReadingCycle As Global.System.Data.DataColumn

        Private columnSecondReadingCycle As Global.System.Data.DataColumn

        Private columnMainWavelength As Global.System.Data.DataColumn

        Private columnReferenceWavelength As Global.System.Data.DataColumn

        Private columnBlankMode As Global.System.Data.DataColumn

        Private columnKineticBlankLimit As Global.System.Data.DataColumn

        Private columnProzoneRatio As Global.System.Data.DataColumn

        Private columnProzoneTime1 As Global.System.Data.DataColumn

        Private columnProzoneTime2 As Global.System.Data.DataColumn

        Private columnTestVersionNumber As Global.System.Data.DataColumn

        Private columnReagentVolume As Global.System.Data.DataColumn

        Private columnIncPostReagentVolume As Global.System.Data.DataColumn

        Private columnRedPostReagentVolume As Global.System.Data.DataColumn

        Private columnSampleVolume As Global.System.Data.DataColumn

        Private columnAbsorbanceDilutionFactor As Global.System.Data.DataColumn

        Private columnPredilutionUseFlag As Global.System.Data.DataColumn

        Private columnPredilutionFactor As Global.System.Data.DataColumn

        Private columnBlankAbsorbanceLimit As Global.System.Data.DataColumn

        Private columnIncPostdilutionFactor As Global.System.Data.DataColumn

        Private columnIncPostSampleVolume As Global.System.Data.DataColumn

        Private columnRedPostdilutionFactor As Global.System.Data.DataColumn

        Private columnRedPostSampleVolume As Global.System.Data.DataColumn

        Private columnLinearityLimit As Global.System.Data.DataColumn

        Private columnDetectionLimit As Global.System.Data.DataColumn

        Private columnSubstrateDepletionValue As Global.System.Data.DataColumn

        Private columnSlopeFactorA As Global.System.Data.DataColumn

        Private columnSlopeFactorB As Global.System.Data.DataColumn

        Private columnFactorUpperLimit As Global.System.Data.DataColumn

        Private columnFactorLowerLimit As Global.System.Data.DataColumn

        Private columnReagentNumber As Global.System.Data.DataColumn

        Private columnActiveRangeType As Global.System.Data.DataColumn

        Private columnCalibratorType As Global.System.Data.DataColumn

        Private columnCalibrationFactor As Global.System.Data.DataColumn

        Private columnSampleTypeAlternative As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "testCalculations"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property AnalysisModeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAnalysisMode
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ReagentsNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReagentsNumber
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ReactionTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReactionType
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property AbsorbanceFlagColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAbsorbanceFlag
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ReadingModeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReadingMode
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FirstReadingCycleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFirstReadingCycle
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SecondReadingCycleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSecondReadingCycle
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MainWavelengthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMainWavelength
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ReferenceWavelengthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReferenceWavelength
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property BlankModeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBlankMode
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property KineticBlankLimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKineticBlankLimit
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ProzoneRatioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProzoneRatio
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ProzoneTime1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnProzoneTime1
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ProzoneTime2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnProzoneTime2
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TestVersionNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTestVersionNumber
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ReagentVolumeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReagentVolume
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IncPostReagentVolumeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIncPostReagentVolume
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property RedPostReagentVolumeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRedPostReagentVolume
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SampleVolumeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSampleVolume
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property AbsorbanceDilutionFactorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAbsorbanceDilutionFactor
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PredilutionUseFlagColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPredilutionUseFlag
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PredilutionFactorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPredilutionFactor
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property BlankAbsorbanceLimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBlankAbsorbanceLimit
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IncPostdilutionFactorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIncPostdilutionFactor
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IncPostSampleVolumeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIncPostSampleVolume
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property RedPostdilutionFactorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRedPostdilutionFactor
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property RedPostSampleVolumeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRedPostSampleVolume
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property LinearityLimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLinearityLimit
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DetectionLimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDetectionLimit
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SubstrateDepletionValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubstrateDepletionValue
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SlopeFactorAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSlopeFactorA
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SlopeFactorBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSlopeFactorB
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FactorUpperLimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFactorUpperLimit
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FactorLowerLimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFactorLowerLimit
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ReagentNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReagentNumber
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ActiveRangeTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnActiveRangeType
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CalibratorTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCalibratorType
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CalibrationFactorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCalibrationFactor
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SampleTypeAlternativeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSampleTypeAlternative
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As testCalculationsRow
            Get
                Return CType(Me.Rows(index), testCalculationsRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event testCalculationsRowChanging As testCalculationsRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event testCalculationsRowChanged As testCalculationsRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event testCalculationsRowDeleting As testCalculationsRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event testCalculationsRowDeleted As testCalculationsRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddtestCalculationsRow(ByVal row As testCalculationsRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddtestCalculationsRow( _
                    ByVal AnalysisMode As String, _
                    ByVal ReagentsNumber As Integer, _
                    ByVal ReactionType As String, _
                    ByVal AbsorbanceFlag As Boolean, _
                    ByVal ReadingMode As String, _
                    ByVal FirstReadingCycle As Integer, _
                    ByVal SecondReadingCycle As Integer, _
                    ByVal MainWavelength As Integer, _
                    ByVal ReferenceWavelength As Integer, _
                    ByVal BlankMode As String, _
                    ByVal KineticBlankLimit As Single, _
                    ByVal ProzoneRatio As Single, _
                    ByVal ProzoneTime1 As Integer, _
                    ByVal ProzoneTime2 As Integer, _
                    ByVal TestVersionNumber As Integer, _
                    ByVal ReagentVolume As Single, _
                    ByVal IncPostReagentVolume As Single, _
                    ByVal RedPostReagentVolume As Single, _
                    ByVal SampleVolume As Single, _
                    ByVal AbsorbanceDilutionFactor As Single, _
                    ByVal PredilutionUseFlag As Boolean, _
                    ByVal PredilutionFactor As Single, _
                    ByVal BlankAbsorbanceLimit As Single, _
                    ByVal IncPostdilutionFactor As Single, _
                    ByVal IncPostSampleVolume As Single, _
                    ByVal RedPostdilutionFactor As Single, _
                    ByVal RedPostSampleVolume As Single, _
                    ByVal LinearityLimit As Single, _
                    ByVal DetectionLimit As Single, _
                    ByVal SubstrateDepletionValue As Single, _
                    ByVal SlopeFactorA As Single, _
                    ByVal SlopeFactorB As Single, _
                    ByVal FactorUpperLimit As Single, _
                    ByVal FactorLowerLimit As Single, _
                    ByVal ReagentNumber As Integer, _
                    ByVal ActiveRangeType As String, _
                    ByVal CalibratorType As String, _
                    ByVal CalibrationFactor As Single, _
                    ByVal SampleTypeAlternative As String) As testCalculationsRow
            Dim rowtestCalculationsRow As testCalculationsRow = CType(Me.NewRow, testCalculationsRow)
            Dim columnValuesArray() As Object = New Object() {AnalysisMode, ReagentsNumber, ReactionType, AbsorbanceFlag, ReadingMode, FirstReadingCycle, SecondReadingCycle, MainWavelength, ReferenceWavelength, BlankMode, KineticBlankLimit, ProzoneRatio, ProzoneTime1, ProzoneTime2, TestVersionNumber, ReagentVolume, IncPostReagentVolume, RedPostReagentVolume, SampleVolume, AbsorbanceDilutionFactor, PredilutionUseFlag, PredilutionFactor, BlankAbsorbanceLimit, IncPostdilutionFactor, IncPostSampleVolume, RedPostdilutionFactor, RedPostSampleVolume, LinearityLimit, DetectionLimit, SubstrateDepletionValue, SlopeFactorA, SlopeFactorB, FactorUpperLimit, FactorLowerLimit, ReagentNumber, ActiveRangeType, CalibratorType, CalibrationFactor, SampleTypeAlternative}
            rowtestCalculationsRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtestCalculationsRow)
            Return rowtestCalculationsRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As testCalculationsDataTable = CType(MyBase.Clone, testCalculationsDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New testCalculationsDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnAnalysisMode = MyBase.Columns("AnalysisMode")
            Me.columnReagentsNumber = MyBase.Columns("ReagentsNumber")
            Me.columnReactionType = MyBase.Columns("ReactionType")
            Me.columnAbsorbanceFlag = MyBase.Columns("AbsorbanceFlag")
            Me.columnReadingMode = MyBase.Columns("ReadingMode")
            Me.columnFirstReadingCycle = MyBase.Columns("FirstReadingCycle")
            Me.columnSecondReadingCycle = MyBase.Columns("SecondReadingCycle")
            Me.columnMainWavelength = MyBase.Columns("MainWavelength")
            Me.columnReferenceWavelength = MyBase.Columns("ReferenceWavelength")
            Me.columnBlankMode = MyBase.Columns("BlankMode")
            Me.columnKineticBlankLimit = MyBase.Columns("KineticBlankLimit")
            Me.columnProzoneRatio = MyBase.Columns("ProzoneRatio")
            Me.columnProzoneTime1 = MyBase.Columns("ProzoneTime1")
            Me.columnProzoneTime2 = MyBase.Columns("ProzoneTime2")
            Me.columnTestVersionNumber = MyBase.Columns("TestVersionNumber")
            Me.columnReagentVolume = MyBase.Columns("ReagentVolume")
            Me.columnIncPostReagentVolume = MyBase.Columns("IncPostReagentVolume")
            Me.columnRedPostReagentVolume = MyBase.Columns("RedPostReagentVolume")
            Me.columnSampleVolume = MyBase.Columns("SampleVolume")
            Me.columnAbsorbanceDilutionFactor = MyBase.Columns("AbsorbanceDilutionFactor")
            Me.columnPredilutionUseFlag = MyBase.Columns("PredilutionUseFlag")
            Me.columnPredilutionFactor = MyBase.Columns("PredilutionFactor")
            Me.columnBlankAbsorbanceLimit = MyBase.Columns("BlankAbsorbanceLimit")
            Me.columnIncPostdilutionFactor = MyBase.Columns("IncPostdilutionFactor")
            Me.columnIncPostSampleVolume = MyBase.Columns("IncPostSampleVolume")
            Me.columnRedPostdilutionFactor = MyBase.Columns("RedPostdilutionFactor")
            Me.columnRedPostSampleVolume = MyBase.Columns("RedPostSampleVolume")
            Me.columnLinearityLimit = MyBase.Columns("LinearityLimit")
            Me.columnDetectionLimit = MyBase.Columns("DetectionLimit")
            Me.columnSubstrateDepletionValue = MyBase.Columns("SubstrateDepletionValue")
            Me.columnSlopeFactorA = MyBase.Columns("SlopeFactorA")
            Me.columnSlopeFactorB = MyBase.Columns("SlopeFactorB")
            Me.columnFactorUpperLimit = MyBase.Columns("FactorUpperLimit")
            Me.columnFactorLowerLimit = MyBase.Columns("FactorLowerLimit")
            Me.columnReagentNumber = MyBase.Columns("ReagentNumber")
            Me.columnActiveRangeType = MyBase.Columns("ActiveRangeType")
            Me.columnCalibratorType = MyBase.Columns("CalibratorType")
            Me.columnCalibrationFactor = MyBase.Columns("CalibrationFactor")
            Me.columnSampleTypeAlternative = MyBase.Columns("SampleTypeAlternative")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnAnalysisMode = New Global.System.Data.DataColumn("AnalysisMode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAnalysisMode)
            Me.columnReagentsNumber = New Global.System.Data.DataColumn("ReagentsNumber", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReagentsNumber)
            Me.columnReactionType = New Global.System.Data.DataColumn("ReactionType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReactionType)
            Me.columnAbsorbanceFlag = New Global.System.Data.DataColumn("AbsorbanceFlag", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAbsorbanceFlag)
            Me.columnReadingMode = New Global.System.Data.DataColumn("ReadingMode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReadingMode)
            Me.columnFirstReadingCycle = New Global.System.Data.DataColumn("FirstReadingCycle", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFirstReadingCycle)
            Me.columnSecondReadingCycle = New Global.System.Data.DataColumn("SecondReadingCycle", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSecondReadingCycle)
            Me.columnMainWavelength = New Global.System.Data.DataColumn("MainWavelength", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMainWavelength)
            Me.columnReferenceWavelength = New Global.System.Data.DataColumn("ReferenceWavelength", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReferenceWavelength)
            Me.columnBlankMode = New Global.System.Data.DataColumn("BlankMode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBlankMode)
            Me.columnKineticBlankLimit = New Global.System.Data.DataColumn("KineticBlankLimit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKineticBlankLimit)
            Me.columnProzoneRatio = New Global.System.Data.DataColumn("ProzoneRatio", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProzoneRatio)
            Me.columnProzoneTime1 = New Global.System.Data.DataColumn("ProzoneTime1", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProzoneTime1)
            Me.columnProzoneTime2 = New Global.System.Data.DataColumn("ProzoneTime2", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProzoneTime2)
            Me.columnTestVersionNumber = New Global.System.Data.DataColumn("TestVersionNumber", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTestVersionNumber)
            Me.columnReagentVolume = New Global.System.Data.DataColumn("ReagentVolume", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReagentVolume)
            Me.columnIncPostReagentVolume = New Global.System.Data.DataColumn("IncPostReagentVolume", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIncPostReagentVolume)
            Me.columnRedPostReagentVolume = New Global.System.Data.DataColumn("RedPostReagentVolume", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRedPostReagentVolume)
            Me.columnSampleVolume = New Global.System.Data.DataColumn("SampleVolume", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSampleVolume)
            Me.columnAbsorbanceDilutionFactor = New Global.System.Data.DataColumn("AbsorbanceDilutionFactor", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAbsorbanceDilutionFactor)
            Me.columnPredilutionUseFlag = New Global.System.Data.DataColumn("PredilutionUseFlag", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPredilutionUseFlag)
            Me.columnPredilutionFactor = New Global.System.Data.DataColumn("PredilutionFactor", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPredilutionFactor)
            Me.columnBlankAbsorbanceLimit = New Global.System.Data.DataColumn("BlankAbsorbanceLimit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBlankAbsorbanceLimit)
            Me.columnIncPostdilutionFactor = New Global.System.Data.DataColumn("IncPostdilutionFactor", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIncPostdilutionFactor)
            Me.columnIncPostSampleVolume = New Global.System.Data.DataColumn("IncPostSampleVolume", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIncPostSampleVolume)
            Me.columnRedPostdilutionFactor = New Global.System.Data.DataColumn("RedPostdilutionFactor", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRedPostdilutionFactor)
            Me.columnRedPostSampleVolume = New Global.System.Data.DataColumn("RedPostSampleVolume", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRedPostSampleVolume)
            Me.columnLinearityLimit = New Global.System.Data.DataColumn("LinearityLimit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLinearityLimit)
            Me.columnDetectionLimit = New Global.System.Data.DataColumn("DetectionLimit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDetectionLimit)
            Me.columnSubstrateDepletionValue = New Global.System.Data.DataColumn("SubstrateDepletionValue", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubstrateDepletionValue)
            Me.columnSlopeFactorA = New Global.System.Data.DataColumn("SlopeFactorA", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSlopeFactorA)
            Me.columnSlopeFactorB = New Global.System.Data.DataColumn("SlopeFactorB", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSlopeFactorB)
            Me.columnFactorUpperLimit = New Global.System.Data.DataColumn("FactorUpperLimit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFactorUpperLimit)
            Me.columnFactorLowerLimit = New Global.System.Data.DataColumn("FactorLowerLimit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFactorLowerLimit)
            Me.columnReagentNumber = New Global.System.Data.DataColumn("ReagentNumber", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReagentNumber)
            Me.columnActiveRangeType = New Global.System.Data.DataColumn("ActiveRangeType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnActiveRangeType)
            Me.columnCalibratorType = New Global.System.Data.DataColumn("CalibratorType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCalibratorType)
            Me.columnCalibrationFactor = New Global.System.Data.DataColumn("CalibrationFactor", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCalibrationFactor)
            Me.columnSampleTypeAlternative = New Global.System.Data.DataColumn("SampleTypeAlternative", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSampleTypeAlternative)
            Me.columnAnalysisMode.MaxLength = 15
            Me.columnReactionType.MaxLength = 15
            Me.columnReadingMode.MaxLength = 15
            Me.columnBlankMode.MaxLength = 15
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewtestCalculationsRow() As testCalculationsRow
            Return CType(Me.NewRow, testCalculationsRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New testCalculationsRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(testCalculationsRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.testCalculationsRowChangedEvent) Is Nothing) Then
                RaiseEvent testCalculationsRowChanged(Me, New testCalculationsRowChangeEvent(CType(e.Row, testCalculationsRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.testCalculationsRowChangingEvent) Is Nothing) Then
                RaiseEvent testCalculationsRowChanging(Me, New testCalculationsRowChangeEvent(CType(e.Row, testCalculationsRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.testCalculationsRowDeletedEvent) Is Nothing) Then
                RaiseEvent testCalculationsRowDeleted(Me, New testCalculationsRowChangeEvent(CType(e.Row, testCalculationsRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.testCalculationsRowDeletingEvent) Is Nothing) Then
                RaiseEvent testCalculationsRowDeleting(Me, New testCalculationsRowChangeEvent(CType(e.Row, testCalculationsRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemovetestCalculationsRow(ByVal row As testCalculationsRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As TestsDS = New TestsDS()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "testCalculationsDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tparTestsRow
        Inherits Global.System.Data.DataRow

        Private tabletparTests As tparTestsDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletparTests = CType(Me.Table, tparTestsDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TestID() As Integer
            Get
                Try
                    Return CType(Me(Me.tabletparTests.TestIDColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TestID' in table 'tparTests' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tabletparTests.TestIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TestName() As String
            Get
                Try
                    Return CType(Me(Me.tabletparTests.TestNameColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TestName' in table 'tparTests' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabletparTests.TestNameColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ShortName() As String
            Get
                Try
                    Return CType(Me(Me.tabletparTests.ShortNameColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ShortName' in table 'tparTests' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabletparTests.ShortNameColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TestPosition() As Integer
            Get
                Try
                    Return CType(Me(Me.tabletparTests.TestPositionColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TestPosition' in table 'tparTests' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tabletparTests.TestPositionColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PreloadedTest() As Boolean
            Get
                Try
                    Return CType(Me(Me.tabletparTests.PreloadedTestColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PreloadedTest' in table 'tparTests' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tabletparTests.PreloadedTestColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MeasureUnit() As String
            Get
                Try
                    Return CType(Me(Me.tabletparTests.MeasureUnitColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MeasureUnit' in table 'tparTests' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabletparTests.MeasureUnitColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property AnalysisMode() As String
            Get
                Try
                    Return CType(Me(Me.tabletparTests.AnalysisModeColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AnalysisMode' in table 'tparTests' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabletparTests.AnalysisModeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ReagentsNumber() As Integer
            Get
                Try
                    Return CType(Me(Me.tabletparTests.ReagentsNumberColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ReagentsNumber' in table 'tparTests' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tabletparTests.ReagentsNumberColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ReactionType() As String
            Get
                Try
                    Return CType(Me(Me.tabletparTests.ReactionTypeColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ReactionType' in table 'tparTests' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabletparTests.ReactionTypeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ReplicatesNumber() As Integer
            Get
                Try
                    Return CType(Me(Me.tabletparTests.ReplicatesNumberColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ReplicatesNumber' in table 'tparTests' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tabletparTests.ReplicatesNumberColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DecimalsAllowed() As Integer
            Get
                Try
                    Return CType(Me(Me.tabletparTests.DecimalsAllowedColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DecimalsAllowed' in table 'tparTests' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tabletparTests.DecimalsAllowedColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TurbidimetryFlag() As Boolean
            Get
                Try
                    Return CType(Me(Me.tabletparTests.TurbidimetryFlagColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TurbidimetryFlag' in table 'tparTests' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tabletparTests.TurbidimetryFlagColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property AbsorbanceFlag() As Boolean
            Get
                Try
                    Return CType(Me(Me.tabletparTests.AbsorbanceFlagColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AbsorbanceFlag' in table 'tparTests' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tabletparTests.AbsorbanceFlagColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ReadingMode() As String
            Get
                Try
                    Return CType(Me(Me.tabletparTests.ReadingModeColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ReadingMode' in table 'tparTests' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabletparTests.ReadingModeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FirstReadingCycle() As Integer
            Get
                Try
                    Return CType(Me(Me.tabletparTests.FirstReadingCycleColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FirstReadingCycle' in table 'tparTests' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tabletparTests.FirstReadingCycleColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SecondReadingCycle() As Integer
            Get
                Try
                    Return CType(Me(Me.tabletparTests.SecondReadingCycleColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SecondReadingCycle' in table 'tparTests' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tabletparTests.SecondReadingCycleColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MainWavelength() As Integer
            Get
                Try
                    Return CType(Me(Me.tabletparTests.MainWavelengthColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MainWavelength' in table 'tparTests' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tabletparTests.MainWavelengthColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ReferenceWavelength() As Integer
            Get
                Try
                    Return CType(Me(Me.tabletparTests.ReferenceWavelengthColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ReferenceWavelength' in table 'tparTests' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tabletparTests.ReferenceWavelengthColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property BlankMode() As String
            Get
                Try
                    Return CType(Me(Me.tabletparTests.BlankModeColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BlankMode' in table 'tparTests' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabletparTests.BlankModeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property BlankReplicates() As Integer
            Get
                Try
                    Return CType(Me(Me.tabletparTests.BlankReplicatesColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BlankReplicates' in table 'tparTests' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tabletparTests.BlankReplicatesColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property KineticBlankLimit() As Single
            Get
                Try
                    Return CType(Me(Me.tabletparTests.KineticBlankLimitColumn), Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KineticBlankLimit' in table 'tparTests' is DBNull.", e)
                End Try
            End Get
            Set(value As Single)
                Me(Me.tabletparTests.KineticBlankLimitColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ProzoneRatio() As Single
            Get
                Try
                    Return CType(Me(Me.tabletparTests.ProzoneRatioColumn), Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProzoneRatio' in table 'tparTests' is DBNull.", e)
                End Try
            End Get
            Set(value As Single)
                Me(Me.tabletparTests.ProzoneRatioColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ProzoneTime1() As Integer
            Get
                Try
                    Return CType(Me(Me.tabletparTests.ProzoneTime1Column), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProzoneTime1' in table 'tparTests' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tabletparTests.ProzoneTime1Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ProzoneTime2() As Integer
            Get
                Try
                    Return CType(Me(Me.tabletparTests.ProzoneTime2Column), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProzoneTime2' in table 'tparTests' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tabletparTests.ProzoneTime2Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property InUse() As Boolean
            Get
                Try
                    Return CType(Me(Me.tabletparTests.InUseColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'InUse' in table 'tparTests' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tabletparTests.InUseColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TestVersionNumber() As Integer
            Get
                Try
                    Return CType(Me(Me.tabletparTests.TestVersionNumberColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TestVersionNumber' in table 'tparTests' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tabletparTests.TestVersionNumberColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TestVersionDateTime() As Date
            Get
                Try
                    Return CType(Me(Me.tabletparTests.TestVersionDateTimeColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TestVersionDateTime' in table 'tparTests' is DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tabletparTests.TestVersionDateTimeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SpecialTest() As Boolean
            Get
                Try
                    Return CType(Me(Me.tabletparTests.SpecialTestColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SpecialTest' in table 'tparTests' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tabletparTests.SpecialTestColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TS_User() As String
            Get
                Try
                    Return CType(Me(Me.tabletparTests.TS_UserColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TS_User' in table 'tparTests' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabletparTests.TS_UserColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TS_DateTime() As Date
            Get
                Try
                    Return CType(Me(Me.tabletparTests.TS_DateTimeColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TS_DateTime' in table 'tparTests' is DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tabletparTests.TS_DateTimeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IconPath() As String
            Get
                If Me.IsIconPathNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tabletparTests.IconPathColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tabletparTests.IconPathColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NewTest() As Boolean
            Get
                Try
                    Return CType(Me(Me.tabletparTests.NewTestColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NewTest' in table 'tparTests' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tabletparTests.NewTestColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ExistBlankResult() As Boolean
            Get
                Try
                    Return CType(Me(Me.tabletparTests.ExistBlankResultColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ExistBlankResult' in table 'tparTests' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tabletparTests.ExistBlankResultColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DeleteResultAnswer() As Boolean
            Get
                Try
                    Return CType(Me(Me.tabletparTests.DeleteResultAnswerColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DeleteResultAnswer' in table 'tparTests' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tabletparTests.DeleteResultAnswerColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NumberOfControls() As Integer
            Get
                Try
                    Return CType(Me(Me.tabletparTests.NumberOfControlsColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NumberOfControls' in table 'tparTests' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tabletparTests.NumberOfControlsColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SampleType() As String
            Get
                Try
                    Return CType(Me(Me.tabletparTests.SampleTypeColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SampleType' in table 'tparTests' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabletparTests.SampleTypeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property EnableStatus() As Boolean
            Get
                Try
                    Return CType(Me(Me.tabletparTests.EnableStatusColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EnableStatus' in table 'tparTests' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tabletparTests.EnableStatusColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Type() As Byte()
            Get
                Try
                    Return CType(Me(Me.tabletparTests.TypeColumn), Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Type' in table 'tparTests' is DBNull.", e)
                End Try
            End Get
            Set(value As Byte())
                Me(Me.tabletparTests.TypeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CalibratorID() As Integer
            Get
                Try
                    Return CType(Me(Me.tabletparTests.CalibratorIDColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CalibratorID' in table 'tparTests' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tabletparTests.CalibratorIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TestCalibratorID() As Integer
            Get
                Try
                    Return CType(Me(Me.tabletparTests.TestCalibratorIDColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TestCalibratorID' in table 'tparTests' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tabletparTests.TestCalibratorIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CalibratorName() As String
            Get
                Try
                    Return CType(Me(Me.tabletparTests.CalibratorNameColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CalibratorName' in table 'tparTests' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabletparTests.CalibratorNameColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FactoryCalib() As Boolean
            Get
                Try
                    Return CType(Me(Me.tabletparTests.FactoryCalibColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FactoryCalib' in table 'tparTests' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tabletparTests.FactoryCalibColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RejectionCriteria() As Single
            Get
                Try
                    Return CType(Me(Me.tabletparTests.RejectionCriteriaColumn), Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RejectionCriteria' in table 'tparTests' is DBNull.", e)
                End Try
            End Get
            Set(value As Single)
                Me(Me.tabletparTests.RejectionCriteriaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property QCActive() As Boolean
            Get
                Try
                    Return CType(Me(Me.tabletparTests.QCActiveColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QCActive' in table 'tparTests' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tabletparTests.QCActiveColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ActiveControl() As Boolean
            Get
                Try
                    Return CType(Me(Me.tabletparTests.ActiveControlColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ActiveControl' in table 'tparTests' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tabletparTests.ActiveControlColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ControlID() As Integer
            Get
                Try
                    Return CType(Me(Me.tabletparTests.ControlIDColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ControlID' in table 'tparTests' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tabletparTests.ControlIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property LISValue() As String
            Get
                Try
                    Return CType(Me(Me.tabletparTests.LISValueColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LISValue' in table 'tparTests' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabletparTests.LISValueColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTestIDNull() As Boolean
            Return Me.IsNull(Me.tabletparTests.TestIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTestIDNull()
            Me(Me.tabletparTests.TestIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTestNameNull() As Boolean
            Return Me.IsNull(Me.tabletparTests.TestNameColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTestNameNull()
            Me(Me.tabletparTests.TestNameColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsShortNameNull() As Boolean
            Return Me.IsNull(Me.tabletparTests.ShortNameColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetShortNameNull()
            Me(Me.tabletparTests.ShortNameColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTestPositionNull() As Boolean
            Return Me.IsNull(Me.tabletparTests.TestPositionColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTestPositionNull()
            Me(Me.tabletparTests.TestPositionColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPreloadedTestNull() As Boolean
            Return Me.IsNull(Me.tabletparTests.PreloadedTestColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPreloadedTestNull()
            Me(Me.tabletparTests.PreloadedTestColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMeasureUnitNull() As Boolean
            Return Me.IsNull(Me.tabletparTests.MeasureUnitColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMeasureUnitNull()
            Me(Me.tabletparTests.MeasureUnitColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsAnalysisModeNull() As Boolean
            Return Me.IsNull(Me.tabletparTests.AnalysisModeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetAnalysisModeNull()
            Me(Me.tabletparTests.AnalysisModeColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsReagentsNumberNull() As Boolean
            Return Me.IsNull(Me.tabletparTests.ReagentsNumberColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetReagentsNumberNull()
            Me(Me.tabletparTests.ReagentsNumberColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsReactionTypeNull() As Boolean
            Return Me.IsNull(Me.tabletparTests.ReactionTypeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetReactionTypeNull()
            Me(Me.tabletparTests.ReactionTypeColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsReplicatesNumberNull() As Boolean
            Return Me.IsNull(Me.tabletparTests.ReplicatesNumberColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetReplicatesNumberNull()
            Me(Me.tabletparTests.ReplicatesNumberColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDecimalsAllowedNull() As Boolean
            Return Me.IsNull(Me.tabletparTests.DecimalsAllowedColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDecimalsAllowedNull()
            Me(Me.tabletparTests.DecimalsAllowedColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTurbidimetryFlagNull() As Boolean
            Return Me.IsNull(Me.tabletparTests.TurbidimetryFlagColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTurbidimetryFlagNull()
            Me(Me.tabletparTests.TurbidimetryFlagColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsAbsorbanceFlagNull() As Boolean
            Return Me.IsNull(Me.tabletparTests.AbsorbanceFlagColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetAbsorbanceFlagNull()
            Me(Me.tabletparTests.AbsorbanceFlagColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsReadingModeNull() As Boolean
            Return Me.IsNull(Me.tabletparTests.ReadingModeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetReadingModeNull()
            Me(Me.tabletparTests.ReadingModeColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFirstReadingCycleNull() As Boolean
            Return Me.IsNull(Me.tabletparTests.FirstReadingCycleColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFirstReadingCycleNull()
            Me(Me.tabletparTests.FirstReadingCycleColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSecondReadingCycleNull() As Boolean
            Return Me.IsNull(Me.tabletparTests.SecondReadingCycleColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSecondReadingCycleNull()
            Me(Me.tabletparTests.SecondReadingCycleColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMainWavelengthNull() As Boolean
            Return Me.IsNull(Me.tabletparTests.MainWavelengthColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMainWavelengthNull()
            Me(Me.tabletparTests.MainWavelengthColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsReferenceWavelengthNull() As Boolean
            Return Me.IsNull(Me.tabletparTests.ReferenceWavelengthColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetReferenceWavelengthNull()
            Me(Me.tabletparTests.ReferenceWavelengthColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsBlankModeNull() As Boolean
            Return Me.IsNull(Me.tabletparTests.BlankModeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetBlankModeNull()
            Me(Me.tabletparTests.BlankModeColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsBlankReplicatesNull() As Boolean
            Return Me.IsNull(Me.tabletparTests.BlankReplicatesColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetBlankReplicatesNull()
            Me(Me.tabletparTests.BlankReplicatesColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsKineticBlankLimitNull() As Boolean
            Return Me.IsNull(Me.tabletparTests.KineticBlankLimitColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetKineticBlankLimitNull()
            Me(Me.tabletparTests.KineticBlankLimitColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsProzoneRatioNull() As Boolean
            Return Me.IsNull(Me.tabletparTests.ProzoneRatioColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetProzoneRatioNull()
            Me(Me.tabletparTests.ProzoneRatioColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsProzoneTime1Null() As Boolean
            Return Me.IsNull(Me.tabletparTests.ProzoneTime1Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetProzoneTime1Null()
            Me(Me.tabletparTests.ProzoneTime1Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsProzoneTime2Null() As Boolean
            Return Me.IsNull(Me.tabletparTests.ProzoneTime2Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetProzoneTime2Null()
            Me(Me.tabletparTests.ProzoneTime2Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsInUseNull() As Boolean
            Return Me.IsNull(Me.tabletparTests.InUseColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetInUseNull()
            Me(Me.tabletparTests.InUseColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTestVersionNumberNull() As Boolean
            Return Me.IsNull(Me.tabletparTests.TestVersionNumberColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTestVersionNumberNull()
            Me(Me.tabletparTests.TestVersionNumberColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTestVersionDateTimeNull() As Boolean
            Return Me.IsNull(Me.tabletparTests.TestVersionDateTimeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTestVersionDateTimeNull()
            Me(Me.tabletparTests.TestVersionDateTimeColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSpecialTestNull() As Boolean
            Return Me.IsNull(Me.tabletparTests.SpecialTestColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSpecialTestNull()
            Me(Me.tabletparTests.SpecialTestColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTS_UserNull() As Boolean
            Return Me.IsNull(Me.tabletparTests.TS_UserColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTS_UserNull()
            Me(Me.tabletparTests.TS_UserColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTS_DateTimeNull() As Boolean
            Return Me.IsNull(Me.tabletparTests.TS_DateTimeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTS_DateTimeNull()
            Me(Me.tabletparTests.TS_DateTimeColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsIconPathNull() As Boolean
            Return Me.IsNull(Me.tabletparTests.IconPathColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetIconPathNull()
            Me(Me.tabletparTests.IconPathColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNewTestNull() As Boolean
            Return Me.IsNull(Me.tabletparTests.NewTestColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNewTestNull()
            Me(Me.tabletparTests.NewTestColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsExistBlankResultNull() As Boolean
            Return Me.IsNull(Me.tabletparTests.ExistBlankResultColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetExistBlankResultNull()
            Me(Me.tabletparTests.ExistBlankResultColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDeleteResultAnswerNull() As Boolean
            Return Me.IsNull(Me.tabletparTests.DeleteResultAnswerColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDeleteResultAnswerNull()
            Me(Me.tabletparTests.DeleteResultAnswerColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNumberOfControlsNull() As Boolean
            Return Me.IsNull(Me.tabletparTests.NumberOfControlsColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNumberOfControlsNull()
            Me(Me.tabletparTests.NumberOfControlsColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSampleTypeNull() As Boolean
            Return Me.IsNull(Me.tabletparTests.SampleTypeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSampleTypeNull()
            Me(Me.tabletparTests.SampleTypeColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsEnableStatusNull() As Boolean
            Return Me.IsNull(Me.tabletparTests.EnableStatusColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetEnableStatusNull()
            Me(Me.tabletparTests.EnableStatusColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTypeNull() As Boolean
            Return Me.IsNull(Me.tabletparTests.TypeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTypeNull()
            Me(Me.tabletparTests.TypeColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCalibratorIDNull() As Boolean
            Return Me.IsNull(Me.tabletparTests.CalibratorIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCalibratorIDNull()
            Me(Me.tabletparTests.CalibratorIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTestCalibratorIDNull() As Boolean
            Return Me.IsNull(Me.tabletparTests.TestCalibratorIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTestCalibratorIDNull()
            Me(Me.tabletparTests.TestCalibratorIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCalibratorNameNull() As Boolean
            Return Me.IsNull(Me.tabletparTests.CalibratorNameColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCalibratorNameNull()
            Me(Me.tabletparTests.CalibratorNameColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFactoryCalibNull() As Boolean
            Return Me.IsNull(Me.tabletparTests.FactoryCalibColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFactoryCalibNull()
            Me(Me.tabletparTests.FactoryCalibColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRejectionCriteriaNull() As Boolean
            Return Me.IsNull(Me.tabletparTests.RejectionCriteriaColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRejectionCriteriaNull()
            Me(Me.tabletparTests.RejectionCriteriaColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsQCActiveNull() As Boolean
            Return Me.IsNull(Me.tabletparTests.QCActiveColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetQCActiveNull()
            Me(Me.tabletparTests.QCActiveColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsActiveControlNull() As Boolean
            Return Me.IsNull(Me.tabletparTests.ActiveControlColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetActiveControlNull()
            Me(Me.tabletparTests.ActiveControlColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsControlIDNull() As Boolean
            Return Me.IsNull(Me.tabletparTests.ControlIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetControlIDNull()
            Me(Me.tabletparTests.ControlIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsLISValueNull() As Boolean
            Return Me.IsNull(Me.tabletparTests.LISValueColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetLISValueNull()
            Me(Me.tabletparTests.LISValueColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class testCalculationsRow
        Inherits Global.System.Data.DataRow
        
        Private tabletestCalculations As testCalculationsDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletestCalculations = CType(Me.Table,testCalculationsDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AnalysisMode() As String
            Get
                Try 
                    Return CType(Me(Me.tabletestCalculations.AnalysisModeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AnalysisMode' in table 'testCalculations' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletestCalculations.AnalysisModeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ReagentsNumber() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletestCalculations.ReagentsNumberColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ReagentsNumber' in table 'testCalculations' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletestCalculations.ReagentsNumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ReactionType() As String
            Get
                Try 
                    Return CType(Me(Me.tabletestCalculations.ReactionTypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ReactionType' in table 'testCalculations' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletestCalculations.ReactionTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AbsorbanceFlag() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletestCalculations.AbsorbanceFlagColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AbsorbanceFlag' in table 'testCalculations' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletestCalculations.AbsorbanceFlagColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ReadingMode() As String
            Get
                Try 
                    Return CType(Me(Me.tabletestCalculations.ReadingModeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ReadingMode' in table 'testCalculations' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletestCalculations.ReadingModeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FirstReadingCycle() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletestCalculations.FirstReadingCycleColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FirstReadingCycle' in table 'testCalculations' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletestCalculations.FirstReadingCycleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SecondReadingCycle() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletestCalculations.SecondReadingCycleColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SecondReadingCycle' in table 'testCalculations' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletestCalculations.SecondReadingCycleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MainWavelength() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletestCalculations.MainWavelengthColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MainWavelength' in table 'testCalculations' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletestCalculations.MainWavelengthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ReferenceWavelength() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletestCalculations.ReferenceWavelengthColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ReferenceWavelength' in table 'testCalculations' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tabletestCalculations.ReferenceWavelengthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BlankMode() As String
            Get
                Try 
                    Return CType(Me(Me.tabletestCalculations.BlankModeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BlankMode' in table 'testCalculations' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletestCalculations.BlankModeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property KineticBlankLimit() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletestCalculations.KineticBlankLimitColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KineticBlankLimit' in table 'testCalculations' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletestCalculations.KineticBlankLimitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ProzoneRatio() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletestCalculations.ProzoneRatioColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProzoneRatio' in table 'testCalculations' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletestCalculations.ProzoneRatioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ProzoneTime1() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletestCalculations.ProzoneTime1Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProzoneTime1' in table 'testCalculations' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletestCalculations.ProzoneTime1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ProzoneTime2() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletestCalculations.ProzoneTime2Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProzoneTime2' in table 'testCalculations' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletestCalculations.ProzoneTime2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TestVersionNumber() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletestCalculations.TestVersionNumberColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TestVersionNumber' in table 'testCalculations' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletestCalculations.TestVersionNumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ReagentVolume() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletestCalculations.ReagentVolumeColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ReagentVolume' in table 'testCalculations' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletestCalculations.ReagentVolumeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IncPostReagentVolume() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletestCalculations.IncPostReagentVolumeColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IncPostReagentVolume' in table 'testCalculations' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tabletestCalculations.IncPostReagentVolumeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RedPostReagentVolume() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletestCalculations.RedPostReagentVolumeColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RedPostReagentVolume' in table 'testCalculations' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tabletestCalculations.RedPostReagentVolumeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SampleVolume() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletestCalculations.SampleVolumeColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SampleVolume' in table 'testCalculations' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletestCalculations.SampleVolumeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AbsorbanceDilutionFactor() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletestCalculations.AbsorbanceDilutionFactorColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AbsorbanceDilutionFactor' in table 'testCalculations' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tabletestCalculations.AbsorbanceDilutionFactorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PredilutionUseFlag() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletestCalculations.PredilutionUseFlagColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PredilutionUseFlag' in table 'testCalculations' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletestCalculations.PredilutionUseFlagColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PredilutionFactor() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletestCalculations.PredilutionFactorColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PredilutionFactor' in table 'testCalculations' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletestCalculations.PredilutionFactorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BlankAbsorbanceLimit() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletestCalculations.BlankAbsorbanceLimitColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BlankAbsorbanceLimit' in table 'testCalculations' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tabletestCalculations.BlankAbsorbanceLimitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IncPostdilutionFactor() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletestCalculations.IncPostdilutionFactorColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IncPostdilutionFactor' in table 'testCalculations' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tabletestCalculations.IncPostdilutionFactorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IncPostSampleVolume() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletestCalculations.IncPostSampleVolumeColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IncPostSampleVolume' in table 'testCalculations' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tabletestCalculations.IncPostSampleVolumeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RedPostdilutionFactor() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletestCalculations.RedPostdilutionFactorColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RedPostdilutionFactor' in table 'testCalculations' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tabletestCalculations.RedPostdilutionFactorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RedPostSampleVolume() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletestCalculations.RedPostSampleVolumeColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RedPostSampleVolume' in table 'testCalculations' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tabletestCalculations.RedPostSampleVolumeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LinearityLimit() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletestCalculations.LinearityLimitColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LinearityLimit' in table 'testCalculations' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletestCalculations.LinearityLimitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DetectionLimit() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletestCalculations.DetectionLimitColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DetectionLimit' in table 'testCalculations' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletestCalculations.DetectionLimitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SubstrateDepletionValue() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletestCalculations.SubstrateDepletionValueColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SubstrateDepletionValue' in table 'testCalculations' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletestCalculations.SubstrateDepletionValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SlopeFactorA() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletestCalculations.SlopeFactorAColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SlopeFactorA' in table 'testCalculations' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletestCalculations.SlopeFactorAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SlopeFactorB() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletestCalculations.SlopeFactorBColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SlopeFactorB' in table 'testCalculations' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletestCalculations.SlopeFactorBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FactorUpperLimit() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletestCalculations.FactorUpperLimitColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FactorUpperLimit' in table 'testCalculations' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletestCalculations.FactorUpperLimitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FactorLowerLimit() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletestCalculations.FactorLowerLimitColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FactorLowerLimit' in table 'testCalculations' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletestCalculations.FactorLowerLimitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ReagentNumber() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletestCalculations.ReagentNumberColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ReagentNumber' in table 'testCalculations' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletestCalculations.ReagentNumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ActiveRangeType() As String
            Get
                If Me.IsActiveRangeTypeNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tabletestCalculations.ActiveRangeTypeColumn),String)
                End If
            End Get
            Set
                Me(Me.tabletestCalculations.ActiveRangeTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CalibratorType() As String
            Get
                If Me.IsCalibratorTypeNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tabletestCalculations.CalibratorTypeColumn),String)
                End If
            End Get
            Set
                Me(Me.tabletestCalculations.CalibratorTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CalibrationFactor() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletestCalculations.CalibrationFactorColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CalibrationFactor' in table 'testCalculations' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletestCalculations.CalibrationFactorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SampleTypeAlternative() As String
            Get
                If Me.IsSampleTypeAlternativeNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tabletestCalculations.SampleTypeAlternativeColumn),String)
                End If
            End Get
            Set
                Me(Me.tabletestCalculations.SampleTypeAlternativeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAnalysisModeNull() As Boolean
            Return Me.IsNull(Me.tabletestCalculations.AnalysisModeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAnalysisModeNull()
            Me(Me.tabletestCalculations.AnalysisModeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsReagentsNumberNull() As Boolean
            Return Me.IsNull(Me.tabletestCalculations.ReagentsNumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetReagentsNumberNull()
            Me(Me.tabletestCalculations.ReagentsNumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsReactionTypeNull() As Boolean
            Return Me.IsNull(Me.tabletestCalculations.ReactionTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetReactionTypeNull()
            Me(Me.tabletestCalculations.ReactionTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAbsorbanceFlagNull() As Boolean
            Return Me.IsNull(Me.tabletestCalculations.AbsorbanceFlagColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAbsorbanceFlagNull()
            Me(Me.tabletestCalculations.AbsorbanceFlagColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsReadingModeNull() As Boolean
            Return Me.IsNull(Me.tabletestCalculations.ReadingModeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetReadingModeNull()
            Me(Me.tabletestCalculations.ReadingModeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFirstReadingCycleNull() As Boolean
            Return Me.IsNull(Me.tabletestCalculations.FirstReadingCycleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFirstReadingCycleNull()
            Me(Me.tabletestCalculations.FirstReadingCycleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSecondReadingCycleNull() As Boolean
            Return Me.IsNull(Me.tabletestCalculations.SecondReadingCycleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSecondReadingCycleNull()
            Me(Me.tabletestCalculations.SecondReadingCycleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMainWavelengthNull() As Boolean
            Return Me.IsNull(Me.tabletestCalculations.MainWavelengthColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMainWavelengthNull()
            Me(Me.tabletestCalculations.MainWavelengthColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsReferenceWavelengthNull() As Boolean
            Return Me.IsNull(Me.tabletestCalculations.ReferenceWavelengthColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetReferenceWavelengthNull()
            Me(Me.tabletestCalculations.ReferenceWavelengthColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBlankModeNull() As Boolean
            Return Me.IsNull(Me.tabletestCalculations.BlankModeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBlankModeNull()
            Me(Me.tabletestCalculations.BlankModeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKineticBlankLimitNull() As Boolean
            Return Me.IsNull(Me.tabletestCalculations.KineticBlankLimitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKineticBlankLimitNull()
            Me(Me.tabletestCalculations.KineticBlankLimitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProzoneRatioNull() As Boolean
            Return Me.IsNull(Me.tabletestCalculations.ProzoneRatioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProzoneRatioNull()
            Me(Me.tabletestCalculations.ProzoneRatioColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProzoneTime1Null() As Boolean
            Return Me.IsNull(Me.tabletestCalculations.ProzoneTime1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProzoneTime1Null()
            Me(Me.tabletestCalculations.ProzoneTime1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProzoneTime2Null() As Boolean
            Return Me.IsNull(Me.tabletestCalculations.ProzoneTime2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProzoneTime2Null()
            Me(Me.tabletestCalculations.ProzoneTime2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTestVersionNumberNull() As Boolean
            Return Me.IsNull(Me.tabletestCalculations.TestVersionNumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTestVersionNumberNull()
            Me(Me.tabletestCalculations.TestVersionNumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsReagentVolumeNull() As Boolean
            Return Me.IsNull(Me.tabletestCalculations.ReagentVolumeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetReagentVolumeNull()
            Me(Me.tabletestCalculations.ReagentVolumeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIncPostReagentVolumeNull() As Boolean
            Return Me.IsNull(Me.tabletestCalculations.IncPostReagentVolumeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIncPostReagentVolumeNull()
            Me(Me.tabletestCalculations.IncPostReagentVolumeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRedPostReagentVolumeNull() As Boolean
            Return Me.IsNull(Me.tabletestCalculations.RedPostReagentVolumeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRedPostReagentVolumeNull()
            Me(Me.tabletestCalculations.RedPostReagentVolumeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSampleVolumeNull() As Boolean
            Return Me.IsNull(Me.tabletestCalculations.SampleVolumeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSampleVolumeNull()
            Me(Me.tabletestCalculations.SampleVolumeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAbsorbanceDilutionFactorNull() As Boolean
            Return Me.IsNull(Me.tabletestCalculations.AbsorbanceDilutionFactorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAbsorbanceDilutionFactorNull()
            Me(Me.tabletestCalculations.AbsorbanceDilutionFactorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPredilutionUseFlagNull() As Boolean
            Return Me.IsNull(Me.tabletestCalculations.PredilutionUseFlagColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPredilutionUseFlagNull()
            Me(Me.tabletestCalculations.PredilutionUseFlagColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPredilutionFactorNull() As Boolean
            Return Me.IsNull(Me.tabletestCalculations.PredilutionFactorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPredilutionFactorNull()
            Me(Me.tabletestCalculations.PredilutionFactorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBlankAbsorbanceLimitNull() As Boolean
            Return Me.IsNull(Me.tabletestCalculations.BlankAbsorbanceLimitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBlankAbsorbanceLimitNull()
            Me(Me.tabletestCalculations.BlankAbsorbanceLimitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIncPostdilutionFactorNull() As Boolean
            Return Me.IsNull(Me.tabletestCalculations.IncPostdilutionFactorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIncPostdilutionFactorNull()
            Me(Me.tabletestCalculations.IncPostdilutionFactorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIncPostSampleVolumeNull() As Boolean
            Return Me.IsNull(Me.tabletestCalculations.IncPostSampleVolumeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIncPostSampleVolumeNull()
            Me(Me.tabletestCalculations.IncPostSampleVolumeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRedPostdilutionFactorNull() As Boolean
            Return Me.IsNull(Me.tabletestCalculations.RedPostdilutionFactorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRedPostdilutionFactorNull()
            Me(Me.tabletestCalculations.RedPostdilutionFactorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRedPostSampleVolumeNull() As Boolean
            Return Me.IsNull(Me.tabletestCalculations.RedPostSampleVolumeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRedPostSampleVolumeNull()
            Me(Me.tabletestCalculations.RedPostSampleVolumeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLinearityLimitNull() As Boolean
            Return Me.IsNull(Me.tabletestCalculations.LinearityLimitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLinearityLimitNull()
            Me(Me.tabletestCalculations.LinearityLimitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDetectionLimitNull() As Boolean
            Return Me.IsNull(Me.tabletestCalculations.DetectionLimitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDetectionLimitNull()
            Me(Me.tabletestCalculations.DetectionLimitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSubstrateDepletionValueNull() As Boolean
            Return Me.IsNull(Me.tabletestCalculations.SubstrateDepletionValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSubstrateDepletionValueNull()
            Me(Me.tabletestCalculations.SubstrateDepletionValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSlopeFactorANull() As Boolean
            Return Me.IsNull(Me.tabletestCalculations.SlopeFactorAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSlopeFactorANull()
            Me(Me.tabletestCalculations.SlopeFactorAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSlopeFactorBNull() As Boolean
            Return Me.IsNull(Me.tabletestCalculations.SlopeFactorBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSlopeFactorBNull()
            Me(Me.tabletestCalculations.SlopeFactorBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFactorUpperLimitNull() As Boolean
            Return Me.IsNull(Me.tabletestCalculations.FactorUpperLimitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFactorUpperLimitNull()
            Me(Me.tabletestCalculations.FactorUpperLimitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFactorLowerLimitNull() As Boolean
            Return Me.IsNull(Me.tabletestCalculations.FactorLowerLimitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFactorLowerLimitNull()
            Me(Me.tabletestCalculations.FactorLowerLimitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsReagentNumberNull() As Boolean
            Return Me.IsNull(Me.tabletestCalculations.ReagentNumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetReagentNumberNull()
            Me(Me.tabletestCalculations.ReagentNumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsActiveRangeTypeNull() As Boolean
            Return Me.IsNull(Me.tabletestCalculations.ActiveRangeTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetActiveRangeTypeNull()
            Me(Me.tabletestCalculations.ActiveRangeTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCalibratorTypeNull() As Boolean
            Return Me.IsNull(Me.tabletestCalculations.CalibratorTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCalibratorTypeNull()
            Me(Me.tabletestCalculations.CalibratorTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCalibrationFactorNull() As Boolean
            Return Me.IsNull(Me.tabletestCalculations.CalibrationFactorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCalibrationFactorNull()
            Me(Me.tabletestCalculations.CalibrationFactorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSampleTypeAlternativeNull() As Boolean
            Return Me.IsNull(Me.tabletestCalculations.SampleTypeAlternativeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSampleTypeAlternativeNull()
            Me(Me.tabletestCalculations.SampleTypeAlternativeColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class tparTestsRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tparTestsRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As tparTestsRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As tparTestsRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class testCalculationsRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As testCalculationsRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As testCalculationsRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As testCalculationsRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
