'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.18063
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("ResultsDS"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class ResultsDS
    Inherits Global.System.Data.DataSet
    
    Private tabletwksResults As twksResultsDataTable
    
    Private tablevwksResults As vwksResultsDataTable
    
    Private tablevwksResultsAlarms As vwksResultsAlarmsDataTable
    
    Private tableXtraSamples As XtraSamplesDataTable
    
    Private tableReportSampleMaster As ReportSampleMasterDataTable
    
    Private tableReportSampleDetails As ReportSampleDetailsDataTable
    
    Private tableReportTestMaster As ReportTestMasterDataTable
    
    Private tableReportTestDetails As ReportTestDetailsDataTable
    
    Private tableReportCalibCurve As ReportCalibCurveDataTable
    
    Private relationReportTestMaster_ReportTestDetails As Global.System.Data.DataRelation
    
    Private relationReportSampleMaster_ReportSampleDetails As Global.System.Data.DataRelation
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("twksResults")) Is Nothing) Then
                MyBase.Tables.Add(New twksResultsDataTable(ds.Tables("twksResults")))
            End If
            If (Not (ds.Tables("vwksResults")) Is Nothing) Then
                MyBase.Tables.Add(New vwksResultsDataTable(ds.Tables("vwksResults")))
            End If
            If (Not (ds.Tables("vwksResultsAlarms")) Is Nothing) Then
                MyBase.Tables.Add(New vwksResultsAlarmsDataTable(ds.Tables("vwksResultsAlarms")))
            End If
            If (Not (ds.Tables("XtraSamples")) Is Nothing) Then
                MyBase.Tables.Add(New XtraSamplesDataTable(ds.Tables("XtraSamples")))
            End If
            If (Not (ds.Tables("ReportSampleMaster")) Is Nothing) Then
                MyBase.Tables.Add(New ReportSampleMasterDataTable(ds.Tables("ReportSampleMaster")))
            End If
            If (Not (ds.Tables("ReportSampleDetails")) Is Nothing) Then
                MyBase.Tables.Add(New ReportSampleDetailsDataTable(ds.Tables("ReportSampleDetails")))
            End If
            If (Not (ds.Tables("ReportTestMaster")) Is Nothing) Then
                MyBase.Tables.Add(New ReportTestMasterDataTable(ds.Tables("ReportTestMaster")))
            End If
            If (Not (ds.Tables("ReportTestDetails")) Is Nothing) Then
                MyBase.Tables.Add(New ReportTestDetailsDataTable(ds.Tables("ReportTestDetails")))
            End If
            If (Not (ds.Tables("ReportCalibCurve")) Is Nothing) Then
                MyBase.Tables.Add(New ReportCalibCurveDataTable(ds.Tables("ReportCalibCurve")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property twksResults() As twksResultsDataTable
        Get
            Return Me.tabletwksResults
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property vwksResults() As vwksResultsDataTable
        Get
            Return Me.tablevwksResults
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property vwksResultsAlarms() As vwksResultsAlarmsDataTable
        Get
            Return Me.tablevwksResultsAlarms
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property XtraSamples() As XtraSamplesDataTable
        Get
            Return Me.tableXtraSamples
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ReportSampleMaster() As ReportSampleMasterDataTable
        Get
            Return Me.tableReportSampleMaster
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ReportSampleDetails() As ReportSampleDetailsDataTable
        Get
            Return Me.tableReportSampleDetails
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ReportTestMaster() As ReportTestMasterDataTable
        Get
            Return Me.tableReportTestMaster
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ReportTestDetails() As ReportTestDetailsDataTable
        Get
            Return Me.tableReportTestDetails
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ReportCalibCurve() As ReportCalibCurveDataTable
        Get
            Return Me.tableReportCalibCurve
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As ResultsDS = CType(MyBase.Clone,ResultsDS)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("twksResults")) Is Nothing) Then
                MyBase.Tables.Add(New twksResultsDataTable(ds.Tables("twksResults")))
            End If
            If (Not (ds.Tables("vwksResults")) Is Nothing) Then
                MyBase.Tables.Add(New vwksResultsDataTable(ds.Tables("vwksResults")))
            End If
            If (Not (ds.Tables("vwksResultsAlarms")) Is Nothing) Then
                MyBase.Tables.Add(New vwksResultsAlarmsDataTable(ds.Tables("vwksResultsAlarms")))
            End If
            If (Not (ds.Tables("XtraSamples")) Is Nothing) Then
                MyBase.Tables.Add(New XtraSamplesDataTable(ds.Tables("XtraSamples")))
            End If
            If (Not (ds.Tables("ReportSampleMaster")) Is Nothing) Then
                MyBase.Tables.Add(New ReportSampleMasterDataTable(ds.Tables("ReportSampleMaster")))
            End If
            If (Not (ds.Tables("ReportSampleDetails")) Is Nothing) Then
                MyBase.Tables.Add(New ReportSampleDetailsDataTable(ds.Tables("ReportSampleDetails")))
            End If
            If (Not (ds.Tables("ReportTestMaster")) Is Nothing) Then
                MyBase.Tables.Add(New ReportTestMasterDataTable(ds.Tables("ReportTestMaster")))
            End If
            If (Not (ds.Tables("ReportTestDetails")) Is Nothing) Then
                MyBase.Tables.Add(New ReportTestDetailsDataTable(ds.Tables("ReportTestDetails")))
            End If
            If (Not (ds.Tables("ReportCalibCurve")) Is Nothing) Then
                MyBase.Tables.Add(New ReportCalibCurveDataTable(ds.Tables("ReportCalibCurve")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tabletwksResults = CType(MyBase.Tables("twksResults"),twksResultsDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletwksResults) Is Nothing) Then
                Me.tabletwksResults.InitVars
            End If
        End If
        Me.tablevwksResults = CType(MyBase.Tables("vwksResults"),vwksResultsDataTable)
        If (initTable = true) Then
            If (Not (Me.tablevwksResults) Is Nothing) Then
                Me.tablevwksResults.InitVars
            End If
        End If
        Me.tablevwksResultsAlarms = CType(MyBase.Tables("vwksResultsAlarms"),vwksResultsAlarmsDataTable)
        If (initTable = true) Then
            If (Not (Me.tablevwksResultsAlarms) Is Nothing) Then
                Me.tablevwksResultsAlarms.InitVars
            End If
        End If
        Me.tableXtraSamples = CType(MyBase.Tables("XtraSamples"),XtraSamplesDataTable)
        If (initTable = true) Then
            If (Not (Me.tableXtraSamples) Is Nothing) Then
                Me.tableXtraSamples.InitVars
            End If
        End If
        Me.tableReportSampleMaster = CType(MyBase.Tables("ReportSampleMaster"),ReportSampleMasterDataTable)
        If (initTable = true) Then
            If (Not (Me.tableReportSampleMaster) Is Nothing) Then
                Me.tableReportSampleMaster.InitVars
            End If
        End If
        Me.tableReportSampleDetails = CType(MyBase.Tables("ReportSampleDetails"),ReportSampleDetailsDataTable)
        If (initTable = true) Then
            If (Not (Me.tableReportSampleDetails) Is Nothing) Then
                Me.tableReportSampleDetails.InitVars
            End If
        End If
        Me.tableReportTestMaster = CType(MyBase.Tables("ReportTestMaster"),ReportTestMasterDataTable)
        If (initTable = true) Then
            If (Not (Me.tableReportTestMaster) Is Nothing) Then
                Me.tableReportTestMaster.InitVars
            End If
        End If
        Me.tableReportTestDetails = CType(MyBase.Tables("ReportTestDetails"),ReportTestDetailsDataTable)
        If (initTable = true) Then
            If (Not (Me.tableReportTestDetails) Is Nothing) Then
                Me.tableReportTestDetails.InitVars
            End If
        End If
        Me.tableReportCalibCurve = CType(MyBase.Tables("ReportCalibCurve"),ReportCalibCurveDataTable)
        If (initTable = true) Then
            If (Not (Me.tableReportCalibCurve) Is Nothing) Then
                Me.tableReportCalibCurve.InitVars
            End If
        End If
        Me.relationReportTestMaster_ReportTestDetails = Me.Relations("ReportTestMaster_ReportTestDetails")
        Me.relationReportSampleMaster_ReportSampleDetails = Me.Relations("ReportSampleMaster_ReportSampleDetails")
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "ResultsDS"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/ResultsDS.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tabletwksResults = New twksResultsDataTable()
        MyBase.Tables.Add(Me.tabletwksResults)
        Me.tablevwksResults = New vwksResultsDataTable()
        MyBase.Tables.Add(Me.tablevwksResults)
        Me.tablevwksResultsAlarms = New vwksResultsAlarmsDataTable()
        MyBase.Tables.Add(Me.tablevwksResultsAlarms)
        Me.tableXtraSamples = New XtraSamplesDataTable()
        MyBase.Tables.Add(Me.tableXtraSamples)
        Me.tableReportSampleMaster = New ReportSampleMasterDataTable()
        MyBase.Tables.Add(Me.tableReportSampleMaster)
        Me.tableReportSampleDetails = New ReportSampleDetailsDataTable()
        MyBase.Tables.Add(Me.tableReportSampleDetails)
        Me.tableReportTestMaster = New ReportTestMasterDataTable()
        MyBase.Tables.Add(Me.tableReportTestMaster)
        Me.tableReportTestDetails = New ReportTestDetailsDataTable()
        MyBase.Tables.Add(Me.tableReportTestDetails)
        Me.tableReportCalibCurve = New ReportCalibCurveDataTable()
        MyBase.Tables.Add(Me.tableReportCalibCurve)
        Me.relationReportTestMaster_ReportTestDetails = New Global.System.Data.DataRelation("ReportTestMaster_ReportTestDetails", New Global.System.Data.DataColumn() {Me.tableReportTestMaster.TestTypeTestIDColumn}, New Global.System.Data.DataColumn() {Me.tableReportTestDetails.TestTypeTestIDColumn}, false)
        Me.Relations.Add(Me.relationReportTestMaster_ReportTestDetails)
        Me.relationReportSampleMaster_ReportSampleDetails = New Global.System.Data.DataRelation("ReportSampleMaster_ReportSampleDetails", New Global.System.Data.DataColumn() {Me.tableReportSampleMaster.PatientIDColumn}, New Global.System.Data.DataColumn() {Me.tableReportSampleDetails.PatientIDColumn}, false)
        Me.Relations.Add(Me.relationReportSampleMaster_ReportSampleDetails)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializetwksResults() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializevwksResults() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializevwksResultsAlarms() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeXtraSamples() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeReportSampleMaster() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeReportSampleDetails() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeReportTestMaster() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeReportTestDetails() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeReportCalibCurve() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As ResultsDS = New ResultsDS()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub twksResultsRowChangeEventHandler(ByVal sender As Object, ByVal e As twksResultsRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub vwksResultsRowChangeEventHandler(ByVal sender As Object, ByVal e As vwksResultsRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub vwksResultsAlarmsRowChangeEventHandler(ByVal sender As Object, ByVal e As vwksResultsAlarmsRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub XtraSamplesRowChangeEventHandler(ByVal sender As Object, ByVal e As XtraSamplesRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub ReportSampleMasterRowChangeEventHandler(ByVal sender As Object, ByVal e As ReportSampleMasterRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub ReportSampleDetailsRowChangeEventHandler(ByVal sender As Object, ByVal e As ReportSampleDetailsRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub ReportTestMasterRowChangeEventHandler(ByVal sender As Object, ByVal e As ReportTestMasterRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub ReportTestDetailsRowChangeEventHandler(ByVal sender As Object, ByVal e As ReportTestDetailsRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub ReportCalibCurveRowChangeEventHandler(ByVal sender As Object, ByVal e As ReportCalibCurveRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class twksResultsDataTable
        Inherits Global.System.Data.TypedTableBase(Of twksResultsRow)
        
        Private columnOrderTestID As Global.System.Data.DataColumn
        
        Private columnRerunNumber As Global.System.Data.DataColumn
        
        Private columnMultiPointNumber As Global.System.Data.DataColumn
        
        Private columnValidationStatus As Global.System.Data.DataColumn
        
        Private columnAcceptedResultFlag As Global.System.Data.DataColumn
        
        Private columnTestVersion As Global.System.Data.DataColumn
        
        Private columnManualResultFlag As Global.System.Data.DataColumn
        
        Private columnUserComment As Global.System.Data.DataColumn
        
        Private columnExportStatus As Global.System.Data.DataColumn
        
        Private columnExportDateTime As Global.System.Data.DataColumn
        
        Private columnPrinted As Global.System.Data.DataColumn
        
        Private columnABSValue As Global.System.Data.DataColumn
        
        Private columnABS_Error As Global.System.Data.DataColumn
        
        Private columnSubstrateDepletion As Global.System.Data.DataColumn
        
        Private columnABS_Initial As Global.System.Data.DataColumn
        
        Private columnABS_MainFilter As Global.System.Data.DataColumn
        
        Private columnCalibratorFactor As Global.System.Data.DataColumn
        
        Private columnCalibrationError As Global.System.Data.DataColumn
        
        Private columnCalibratorBlankAbsUsed As Global.System.Data.DataColumn
        
        Private columnCurveResultsID As Global.System.Data.DataColumn
        
        Private columnCurveGrowthType As Global.System.Data.DataColumn
        
        Private columnCurveType As Global.System.Data.DataColumn
        
        Private columnCurveAxisXType As Global.System.Data.DataColumn
        
        Private columnCurveAxisYType As Global.System.Data.DataColumn
        
        Private columnRelativeErrorCurve As Global.System.Data.DataColumn
        
        Private columnCONC_Value As Global.System.Data.DataColumn
        
        Private columnCONC_Error As Global.System.Data.DataColumn
        
        Private columnResultDateTime As Global.System.Data.DataColumn
        
        Private columnTS_User As Global.System.Data.DataColumn
        
        Private columnTS_DateTime As Global.System.Data.DataColumn
        
        Private columnAbs_WorkReagent As Global.System.Data.DataColumn
        
        Private columnCollapsed As Global.System.Data.DataColumn
        
        Private columnManualResult As Global.System.Data.DataColumn
        
        Private columnManualResultText As Global.System.Data.DataColumn
        
        Private columnCurveSlope As Global.System.Data.DataColumn
        
        Private columnCurveOffset As Global.System.Data.DataColumn
        
        Private columnCurveCorrelation As Global.System.Data.DataColumn
        
        Private columnTestID As Global.System.Data.DataColumn
        
        Private columnSampleType As Global.System.Data.DataColumn
        
        Private columnSampleClass As Global.System.Data.DataColumn
        
        Private columnCalibratorID As Global.System.Data.DataColumn
        
        Private columnNumberOfCalibrators As Global.System.Data.DataColumn
        
        Private columnTestType As Global.System.Data.DataColumn
        
        Private columnTestName As Global.System.Data.DataColumn
        
        Private columnMeasureUnit As Global.System.Data.DataColumn
        
        Private columnStatFlag As Global.System.Data.DataColumn
        
        Private columnTubeType As Global.System.Data.DataColumn
        
        Private columnPatientID As Global.System.Data.DataColumn
        
        Private columnSampleID As Global.System.Data.DataColumn
        
        Private columnWorkSessionID As Global.System.Data.DataColumn
        
        Private columnAnalyzerID As Global.System.Data.DataColumn
        
        Private columnCtrlsSendingGroup As Global.System.Data.DataColumn
        
        Private columnLISMessageID As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "twksResults"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OrderTestIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOrderTestID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RerunNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRerunNumber
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MultiPointNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMultiPointNumber
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ValidationStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnValidationStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AcceptedResultFlagColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAcceptedResultFlag
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TestVersionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTestVersion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ManualResultFlagColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnManualResultFlag
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UserCommentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUserComment
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ExportStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExportStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ExportDateTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExportDateTime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PrintedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrinted
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ABSValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnABSValue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ABS_ErrorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnABS_Error
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SubstrateDepletionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubstrateDepletion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ABS_InitialColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnABS_Initial
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ABS_MainFilterColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnABS_MainFilter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CalibratorFactorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCalibratorFactor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CalibrationErrorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCalibrationError
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CalibratorBlankAbsUsedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCalibratorBlankAbsUsed
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CurveResultsIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCurveResultsID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CurveGrowthTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCurveGrowthType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CurveTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCurveType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CurveAxisXTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCurveAxisXType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CurveAxisYTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCurveAxisYType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RelativeErrorCurveColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRelativeErrorCurve
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CONC_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONC_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CONC_ErrorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONC_Error
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ResultDateTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnResultDateTime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TS_UserColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTS_User
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TS_DateTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTS_DateTime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Abs_WorkReagentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAbs_WorkReagent
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CollapsedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCollapsed
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ManualResultColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnManualResult
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ManualResultTextColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnManualResultText
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CurveSlopeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCurveSlope
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CurveOffsetColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCurveOffset
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CurveCorrelationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCurveCorrelation
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TestIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTestID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SampleTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSampleType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SampleClassColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSampleClass
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CalibratorIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCalibratorID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NumberOfCalibratorsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumberOfCalibrators
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TestTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTestType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TestNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTestName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MeasureUnitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMeasureUnit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property StatFlagColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStatFlag
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TubeTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTubeType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PatientIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPatientID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SampleIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSampleID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WorkSessionIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWorkSessionID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AnalyzerIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAnalyzerID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CtrlsSendingGroupColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCtrlsSendingGroup
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LISMessageIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLISMessageID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As twksResultsRow
            Get
                Return CType(Me.Rows(index),twksResultsRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event twksResultsRowChanging As twksResultsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event twksResultsRowChanged As twksResultsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event twksResultsRowDeleting As twksResultsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event twksResultsRowDeleted As twksResultsRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddtwksResultsRow(ByVal row As twksResultsRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddtwksResultsRow( _
                    ByVal OrderTestID As Integer,  _
                    ByVal RerunNumber As Integer,  _
                    ByVal MultiPointNumber As Integer,  _
                    ByVal ValidationStatus As String,  _
                    ByVal AcceptedResultFlag As Boolean,  _
                    ByVal TestVersion As Integer,  _
                    ByVal ManualResultFlag As Boolean,  _
                    ByVal UserComment As String,  _
                    ByVal ExportStatus As String,  _
                    ByVal ExportDateTime As Date,  _
                    ByVal Printed As Boolean,  _
                    ByVal ABSValue As Single,  _
                    ByVal ABS_Error As String,  _
                    ByVal SubstrateDepletion As Integer,  _
                    ByVal ABS_Initial As Single,  _
                    ByVal ABS_MainFilter As Single,  _
                    ByVal CalibratorFactor As Single,  _
                    ByVal CalibrationError As String,  _
                    ByVal CalibratorBlankAbsUsed As Single,  _
                    ByVal CurveResultsID As Integer,  _
                    ByVal CurveGrowthType As String,  _
                    ByVal CurveType As String,  _
                    ByVal CurveAxisXType As String,  _
                    ByVal CurveAxisYType As String,  _
                    ByVal RelativeErrorCurve As Single,  _
                    ByVal CONC_Value As Single,  _
                    ByVal CONC_Error As String,  _
                    ByVal ResultDateTime As Date,  _
                    ByVal TS_User As String,  _
                    ByVal TS_DateTime As Date,  _
                    ByVal Abs_WorkReagent As Single,  _
                    ByVal Collapsed As Boolean,  _
                    ByVal ManualResult As Single,  _
                    ByVal ManualResultText As String,  _
                    ByVal CurveSlope As Single,  _
                    ByVal CurveOffset As Single,  _
                    ByVal CurveCorrelation As Single,  _
                    ByVal TestID As Integer,  _
                    ByVal SampleType As String,  _
                    ByVal SampleClass As String,  _
                    ByVal CalibratorID As Integer,  _
                    ByVal NumberOfCalibrators As Integer,  _
                    ByVal TestType As String,  _
                    ByVal TestName As String,  _
                    ByVal MeasureUnit As String,  _
                    ByVal StatFlag As Boolean,  _
                    ByVal TubeType As String,  _
                    ByVal PatientID As String,  _
                    ByVal SampleID As String,  _
                    ByVal WorkSessionID As String,  _
                    ByVal AnalyzerID As String,  _
                    ByVal CtrlsSendingGroup As Integer,  _
                    ByVal LISMessageID As String) As twksResultsRow
            Dim rowtwksResultsRow As twksResultsRow = CType(Me.NewRow,twksResultsRow)
            Dim columnValuesArray() As Object = New Object() {OrderTestID, RerunNumber, MultiPointNumber, ValidationStatus, AcceptedResultFlag, TestVersion, ManualResultFlag, UserComment, ExportStatus, ExportDateTime, Printed, ABSValue, ABS_Error, SubstrateDepletion, ABS_Initial, ABS_MainFilter, CalibratorFactor, CalibrationError, CalibratorBlankAbsUsed, CurveResultsID, CurveGrowthType, CurveType, CurveAxisXType, CurveAxisYType, RelativeErrorCurve, CONC_Value, CONC_Error, ResultDateTime, TS_User, TS_DateTime, Abs_WorkReagent, Collapsed, ManualResult, ManualResultText, CurveSlope, CurveOffset, CurveCorrelation, TestID, SampleType, SampleClass, CalibratorID, NumberOfCalibrators, TestType, TestName, MeasureUnit, StatFlag, TubeType, PatientID, SampleID, WorkSessionID, AnalyzerID, CtrlsSendingGroup, LISMessageID}
            rowtwksResultsRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtwksResultsRow)
            Return rowtwksResultsRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As twksResultsDataTable = CType(MyBase.Clone,twksResultsDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New twksResultsDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnOrderTestID = MyBase.Columns("OrderTestID")
            Me.columnRerunNumber = MyBase.Columns("RerunNumber")
            Me.columnMultiPointNumber = MyBase.Columns("MultiPointNumber")
            Me.columnValidationStatus = MyBase.Columns("ValidationStatus")
            Me.columnAcceptedResultFlag = MyBase.Columns("AcceptedResultFlag")
            Me.columnTestVersion = MyBase.Columns("TestVersion")
            Me.columnManualResultFlag = MyBase.Columns("ManualResultFlag")
            Me.columnUserComment = MyBase.Columns("UserComment")
            Me.columnExportStatus = MyBase.Columns("ExportStatus")
            Me.columnExportDateTime = MyBase.Columns("ExportDateTime")
            Me.columnPrinted = MyBase.Columns("Printed")
            Me.columnABSValue = MyBase.Columns("ABSValue")
            Me.columnABS_Error = MyBase.Columns("ABS_Error")
            Me.columnSubstrateDepletion = MyBase.Columns("SubstrateDepletion")
            Me.columnABS_Initial = MyBase.Columns("ABS_Initial")
            Me.columnABS_MainFilter = MyBase.Columns("ABS_MainFilter")
            Me.columnCalibratorFactor = MyBase.Columns("CalibratorFactor")
            Me.columnCalibrationError = MyBase.Columns("CalibrationError")
            Me.columnCalibratorBlankAbsUsed = MyBase.Columns("CalibratorBlankAbsUsed")
            Me.columnCurveResultsID = MyBase.Columns("CurveResultsID")
            Me.columnCurveGrowthType = MyBase.Columns("CurveGrowthType")
            Me.columnCurveType = MyBase.Columns("CurveType")
            Me.columnCurveAxisXType = MyBase.Columns("CurveAxisXType")
            Me.columnCurveAxisYType = MyBase.Columns("CurveAxisYType")
            Me.columnRelativeErrorCurve = MyBase.Columns("RelativeErrorCurve")
            Me.columnCONC_Value = MyBase.Columns("CONC_Value")
            Me.columnCONC_Error = MyBase.Columns("CONC_Error")
            Me.columnResultDateTime = MyBase.Columns("ResultDateTime")
            Me.columnTS_User = MyBase.Columns("TS_User")
            Me.columnTS_DateTime = MyBase.Columns("TS_DateTime")
            Me.columnAbs_WorkReagent = MyBase.Columns("Abs_WorkReagent")
            Me.columnCollapsed = MyBase.Columns("Collapsed")
            Me.columnManualResult = MyBase.Columns("ManualResult")
            Me.columnManualResultText = MyBase.Columns("ManualResultText")
            Me.columnCurveSlope = MyBase.Columns("CurveSlope")
            Me.columnCurveOffset = MyBase.Columns("CurveOffset")
            Me.columnCurveCorrelation = MyBase.Columns("CurveCorrelation")
            Me.columnTestID = MyBase.Columns("TestID")
            Me.columnSampleType = MyBase.Columns("SampleType")
            Me.columnSampleClass = MyBase.Columns("SampleClass")
            Me.columnCalibratorID = MyBase.Columns("CalibratorID")
            Me.columnNumberOfCalibrators = MyBase.Columns("NumberOfCalibrators")
            Me.columnTestType = MyBase.Columns("TestType")
            Me.columnTestName = MyBase.Columns("TestName")
            Me.columnMeasureUnit = MyBase.Columns("MeasureUnit")
            Me.columnStatFlag = MyBase.Columns("StatFlag")
            Me.columnTubeType = MyBase.Columns("TubeType")
            Me.columnPatientID = MyBase.Columns("PatientID")
            Me.columnSampleID = MyBase.Columns("SampleID")
            Me.columnWorkSessionID = MyBase.Columns("WorkSessionID")
            Me.columnAnalyzerID = MyBase.Columns("AnalyzerID")
            Me.columnCtrlsSendingGroup = MyBase.Columns("CtrlsSendingGroup")
            Me.columnLISMessageID = MyBase.Columns("LISMessageID")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnOrderTestID = New Global.System.Data.DataColumn("OrderTestID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOrderTestID)
            Me.columnRerunNumber = New Global.System.Data.DataColumn("RerunNumber", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRerunNumber)
            Me.columnMultiPointNumber = New Global.System.Data.DataColumn("MultiPointNumber", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMultiPointNumber)
            Me.columnValidationStatus = New Global.System.Data.DataColumn("ValidationStatus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnValidationStatus)
            Me.columnAcceptedResultFlag = New Global.System.Data.DataColumn("AcceptedResultFlag", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAcceptedResultFlag)
            Me.columnTestVersion = New Global.System.Data.DataColumn("TestVersion", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTestVersion)
            Me.columnManualResultFlag = New Global.System.Data.DataColumn("ManualResultFlag", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnManualResultFlag)
            Me.columnUserComment = New Global.System.Data.DataColumn("UserComment", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUserComment)
            Me.columnExportStatus = New Global.System.Data.DataColumn("ExportStatus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExportStatus)
            Me.columnExportDateTime = New Global.System.Data.DataColumn("ExportDateTime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExportDateTime)
            Me.columnPrinted = New Global.System.Data.DataColumn("Printed", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrinted)
            Me.columnABSValue = New Global.System.Data.DataColumn("ABSValue", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnABSValue)
            Me.columnABS_Error = New Global.System.Data.DataColumn("ABS_Error", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnABS_Error)
            Me.columnSubstrateDepletion = New Global.System.Data.DataColumn("SubstrateDepletion", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubstrateDepletion)
            Me.columnABS_Initial = New Global.System.Data.DataColumn("ABS_Initial", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnABS_Initial)
            Me.columnABS_MainFilter = New Global.System.Data.DataColumn("ABS_MainFilter", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnABS_MainFilter)
            Me.columnCalibratorFactor = New Global.System.Data.DataColumn("CalibratorFactor", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCalibratorFactor)
            Me.columnCalibrationError = New Global.System.Data.DataColumn("CalibrationError", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCalibrationError)
            Me.columnCalibratorBlankAbsUsed = New Global.System.Data.DataColumn("CalibratorBlankAbsUsed", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCalibratorBlankAbsUsed)
            Me.columnCurveResultsID = New Global.System.Data.DataColumn("CurveResultsID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCurveResultsID)
            Me.columnCurveGrowthType = New Global.System.Data.DataColumn("CurveGrowthType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCurveGrowthType)
            Me.columnCurveType = New Global.System.Data.DataColumn("CurveType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCurveType)
            Me.columnCurveAxisXType = New Global.System.Data.DataColumn("CurveAxisXType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCurveAxisXType)
            Me.columnCurveAxisYType = New Global.System.Data.DataColumn("CurveAxisYType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCurveAxisYType)
            Me.columnRelativeErrorCurve = New Global.System.Data.DataColumn("RelativeErrorCurve", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRelativeErrorCurve)
            Me.columnCONC_Value = New Global.System.Data.DataColumn("CONC_Value", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONC_Value)
            Me.columnCONC_Error = New Global.System.Data.DataColumn("CONC_Error", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONC_Error)
            Me.columnResultDateTime = New Global.System.Data.DataColumn("ResultDateTime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnResultDateTime)
            Me.columnTS_User = New Global.System.Data.DataColumn("TS_User", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTS_User)
            Me.columnTS_DateTime = New Global.System.Data.DataColumn("TS_DateTime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTS_DateTime)
            Me.columnAbs_WorkReagent = New Global.System.Data.DataColumn("Abs_WorkReagent", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAbs_WorkReagent)
            Me.columnCollapsed = New Global.System.Data.DataColumn("Collapsed", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCollapsed)
            Me.columnManualResult = New Global.System.Data.DataColumn("ManualResult", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnManualResult)
            Me.columnManualResultText = New Global.System.Data.DataColumn("ManualResultText", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnManualResultText)
            Me.columnCurveSlope = New Global.System.Data.DataColumn("CurveSlope", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCurveSlope)
            Me.columnCurveOffset = New Global.System.Data.DataColumn("CurveOffset", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCurveOffset)
            Me.columnCurveCorrelation = New Global.System.Data.DataColumn("CurveCorrelation", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCurveCorrelation)
            Me.columnTestID = New Global.System.Data.DataColumn("TestID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTestID)
            Me.columnSampleType = New Global.System.Data.DataColumn("SampleType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSampleType)
            Me.columnSampleClass = New Global.System.Data.DataColumn("SampleClass", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSampleClass)
            Me.columnCalibratorID = New Global.System.Data.DataColumn("CalibratorID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCalibratorID)
            Me.columnNumberOfCalibrators = New Global.System.Data.DataColumn("NumberOfCalibrators", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumberOfCalibrators)
            Me.columnTestType = New Global.System.Data.DataColumn("TestType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTestType)
            Me.columnTestName = New Global.System.Data.DataColumn("TestName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTestName)
            Me.columnMeasureUnit = New Global.System.Data.DataColumn("MeasureUnit", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMeasureUnit)
            Me.columnStatFlag = New Global.System.Data.DataColumn("StatFlag", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStatFlag)
            Me.columnTubeType = New Global.System.Data.DataColumn("TubeType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTubeType)
            Me.columnPatientID = New Global.System.Data.DataColumn("PatientID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPatientID)
            Me.columnSampleID = New Global.System.Data.DataColumn("SampleID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSampleID)
            Me.columnWorkSessionID = New Global.System.Data.DataColumn("WorkSessionID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWorkSessionID)
            Me.columnAnalyzerID = New Global.System.Data.DataColumn("AnalyzerID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAnalyzerID)
            Me.columnCtrlsSendingGroup = New Global.System.Data.DataColumn("CtrlsSendingGroup", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCtrlsSendingGroup)
            Me.columnLISMessageID = New Global.System.Data.DataColumn("LISMessageID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLISMessageID)
            Me.columnCollapsed.DefaultValue = CType(true,Boolean)
            Me.columnSampleType.DefaultValue = CType("",String)
            Me.columnSampleClass.DefaultValue = CType("",String)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewtwksResultsRow() As twksResultsRow
            Return CType(Me.NewRow,twksResultsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New twksResultsRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(twksResultsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.twksResultsRowChangedEvent) Is Nothing) Then
                RaiseEvent twksResultsRowChanged(Me, New twksResultsRowChangeEvent(CType(e.Row,twksResultsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.twksResultsRowChangingEvent) Is Nothing) Then
                RaiseEvent twksResultsRowChanging(Me, New twksResultsRowChangeEvent(CType(e.Row,twksResultsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.twksResultsRowDeletedEvent) Is Nothing) Then
                RaiseEvent twksResultsRowDeleted(Me, New twksResultsRowChangeEvent(CType(e.Row,twksResultsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.twksResultsRowDeletingEvent) Is Nothing) Then
                RaiseEvent twksResultsRowDeleting(Me, New twksResultsRowChangeEvent(CType(e.Row,twksResultsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovetwksResultsRow(ByVal row As twksResultsRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ResultsDS = New ResultsDS()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "twksResultsDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class vwksResultsDataTable
        Inherits Global.System.Data.TypedTableBase(Of vwksResultsRow)
        
        Private columnOrderTestID As Global.System.Data.DataColumn
        
        Private columnRerunNumber As Global.System.Data.DataColumn
        
        Private columnMultiPointNumber As Global.System.Data.DataColumn
        
        Private columnValidationStatus As Global.System.Data.DataColumn
        
        Private columnAcceptedResultFlag As Global.System.Data.DataColumn
        
        Private columnTestVersion As Global.System.Data.DataColumn
        
        Private columnManualResultFlag As Global.System.Data.DataColumn
        
        Private columnUserComment As Global.System.Data.DataColumn
        
        Private columnExportStatus As Global.System.Data.DataColumn
        
        Private columnExportDateTime As Global.System.Data.DataColumn
        
        Private columnPrinted As Global.System.Data.DataColumn
        
        Private columnABSValue As Global.System.Data.DataColumn
        
        Private columnABS_Error As Global.System.Data.DataColumn
        
        Private columnSubstrateDepletion As Global.System.Data.DataColumn
        
        Private columnABS_Initial As Global.System.Data.DataColumn
        
        Private columnABS_MainFilter As Global.System.Data.DataColumn
        
        Private columnCalibratorFactor As Global.System.Data.DataColumn
        
        Private columnCalibrationError As Global.System.Data.DataColumn
        
        Private columnCalibratorBlankAbsUsed As Global.System.Data.DataColumn
        
        Private columnCurveResultsID As Global.System.Data.DataColumn
        
        Private columnCurveGrowthType As Global.System.Data.DataColumn
        
        Private columnCurveType As Global.System.Data.DataColumn
        
        Private columnCurveAxisXType As Global.System.Data.DataColumn
        
        Private columnCurveAxisYType As Global.System.Data.DataColumn
        
        Private columnRelativeErrorCurve As Global.System.Data.DataColumn
        
        Private columnCONC_Value As Global.System.Data.DataColumn
        
        Private columnCONC_Error As Global.System.Data.DataColumn
        
        Private columnResultDateTime As Global.System.Data.DataColumn
        
        Private columnTS_User As Global.System.Data.DataColumn
        
        Private columnTS_DateTime As Global.System.Data.DataColumn
        
        Private columnAbs_WorkReagent As Global.System.Data.DataColumn
        
        Private columnBlankAbsorbanceLimit As Global.System.Data.DataColumn
        
        Private columnKineticBlankLimit As Global.System.Data.DataColumn
        
        Private columnCalibratorLotNumber As Global.System.Data.DataColumn
        
        Private columnSampleType As Global.System.Data.DataColumn
        
        Private columnTheoricalConcentration As Global.System.Data.DataColumn
        
        Private columnMeasureUnit As Global.System.Data.DataColumn
        
        Private columnFactorLowerLimit As Global.System.Data.DataColumn
        
        Private columnFactorUpperLimit As Global.System.Data.DataColumn
        
        Private columnDecimalsAllowed As Global.System.Data.DataColumn
        
        Private columnControlName As Global.System.Data.DataColumn
        
        Private columnControlLotNumber As Global.System.Data.DataColumn
        
        Private columnMinConcentration As Global.System.Data.DataColumn
        
        Private columnMaxConcentration As Global.System.Data.DataColumn
        
        Private columnTestName As Global.System.Data.DataColumn
        
        Private columnTestType As Global.System.Data.DataColumn
        
        Private columnOrderTestStatus As Global.System.Data.DataColumn
        
        Private columnPostDilutionType As Global.System.Data.DataColumn
        
        Private columnTestID As Global.System.Data.DataColumn
        
        Private columnActiveRangeType As Global.System.Data.DataColumn
        
        Private columnNormalLowerLimit As Global.System.Data.DataColumn
        
        Private columnNormalUpperLimit As Global.System.Data.DataColumn
        
        Private columnOrderID As Global.System.Data.DataColumn
        
        Private columnCollapsed As Global.System.Data.DataColumn
        
        Private columnPatientName As Global.System.Data.DataColumn
        
        Private columnManualResult As Global.System.Data.DataColumn
        
        Private columnManualResultText As Global.System.Data.DataColumn
        
        Private columnStatFlag As Global.System.Data.DataColumn
        
        Private columnPatientID As Global.System.Data.DataColumn
        
        Private columnCalibratorName As Global.System.Data.DataColumn
        
        Private columnAnalysisMode As Global.System.Data.DataColumn
        
        Private columnCurveSlope As Global.System.Data.DataColumn
        
        Private columnCurveOffset As Global.System.Data.DataColumn
        
        Private columnCurveCorrelation As Global.System.Data.DataColumn
        
        Private columnSTDOrderTestID As Global.System.Data.DataColumn
        
        Private columnSampleClass As Global.System.Data.DataColumn
        
        Private columnCalibratorID As Global.System.Data.DataColumn
        
        Private columnNumberOfCalibrators As Global.System.Data.DataColumn
        
        Private columnPanicLowerLimit As Global.System.Data.DataColumn
        
        Private columnPanicUpperLimit As Global.System.Data.DataColumn
        
        Private columnOrderDateTime As Global.System.Data.DataColumn
        
        Private columnSampleID As Global.System.Data.DataColumn
        
        Private columnWorkSessionID As Global.System.Data.DataColumn
        
        Private columnAnalyzerID As Global.System.Data.DataColumn
        
        Private columnReplicatesNumber As Global.System.Data.DataColumn
        
        Private columnHistWorkSessionID As Global.System.Data.DataColumn
        
        Private columnHistOrderTestID As Global.System.Data.DataColumn
        
        Private columnTubeType As Global.System.Data.DataColumn
        
        Private columnLotNumber As Global.System.Data.DataColumn
        
        Private columnAlarmList As Global.System.Data.DataColumn
        
        Private columnLISMessageID As Global.System.Data.DataColumn
        
        Private columnLISRequest As Global.System.Data.DataColumn
        
        Private columnExternalQC As Global.System.Data.DataColumn
        
        Private columnSpecimenIDList As Global.System.Data.DataColumn
        
        Private columnTestLongName As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "vwksResults"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OrderTestIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOrderTestID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RerunNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRerunNumber
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MultiPointNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMultiPointNumber
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ValidationStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnValidationStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AcceptedResultFlagColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAcceptedResultFlag
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TestVersionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTestVersion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ManualResultFlagColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnManualResultFlag
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UserCommentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUserComment
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ExportStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExportStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ExportDateTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExportDateTime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PrintedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrinted
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ABSValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnABSValue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ABS_ErrorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnABS_Error
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SubstrateDepletionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubstrateDepletion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ABS_InitialColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnABS_Initial
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ABS_MainFilterColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnABS_MainFilter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CalibratorFactorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCalibratorFactor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CalibrationErrorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCalibrationError
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CalibratorBlankAbsUsedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCalibratorBlankAbsUsed
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CurveResultsIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCurveResultsID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CurveGrowthTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCurveGrowthType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CurveTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCurveType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CurveAxisXTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCurveAxisXType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CurveAxisYTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCurveAxisYType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RelativeErrorCurveColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRelativeErrorCurve
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CONC_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONC_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CONC_ErrorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONC_Error
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ResultDateTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnResultDateTime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TS_UserColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTS_User
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TS_DateTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTS_DateTime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Abs_WorkReagentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAbs_WorkReagent
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BlankAbsorbanceLimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBlankAbsorbanceLimit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KineticBlankLimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKineticBlankLimit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CalibratorLotNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCalibratorLotNumber
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SampleTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSampleType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TheoricalConcentrationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTheoricalConcentration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MeasureUnitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMeasureUnit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FactorLowerLimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFactorLowerLimit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FactorUpperLimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFactorUpperLimit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DecimalsAllowedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDecimalsAllowed
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ControlNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnControlName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ControlLotNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnControlLotNumber
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MinConcentrationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMinConcentration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MaxConcentrationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMaxConcentration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TestNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTestName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TestTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTestType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OrderTestStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOrderTestStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PostDilutionTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPostDilutionType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TestIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTestID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ActiveRangeTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnActiveRangeType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NormalLowerLimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNormalLowerLimit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NormalUpperLimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNormalUpperLimit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OrderIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOrderID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CollapsedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCollapsed
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PatientNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPatientName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ManualResultColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnManualResult
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ManualResultTextColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnManualResultText
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property StatFlagColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStatFlag
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PatientIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPatientID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CalibratorNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCalibratorName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AnalysisModeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAnalysisMode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CurveSlopeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCurveSlope
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CurveOffsetColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCurveOffset
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CurveCorrelationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCurveCorrelation
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STDOrderTestIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTDOrderTestID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SampleClassColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSampleClass
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CalibratorIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCalibratorID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NumberOfCalibratorsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumberOfCalibrators
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PanicLowerLimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPanicLowerLimit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PanicUpperLimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPanicUpperLimit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OrderDateTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOrderDateTime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SampleIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSampleID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WorkSessionIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWorkSessionID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AnalyzerIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAnalyzerID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ReplicatesNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReplicatesNumber
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HistWorkSessionIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHistWorkSessionID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HistOrderTestIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHistOrderTestID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TubeTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTubeType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LotNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLotNumber
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AlarmListColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAlarmList
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LISMessageIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLISMessageID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LISRequestColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLISRequest
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ExternalQCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExternalQC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SpecimenIDListColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecimenIDList
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TestLongNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTestLongName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As vwksResultsRow
            Get
                Return CType(Me.Rows(index),vwksResultsRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event vwksResultsRowChanging As vwksResultsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event vwksResultsRowChanged As vwksResultsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event vwksResultsRowDeleting As vwksResultsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event vwksResultsRowDeleted As vwksResultsRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddvwksResultsRow(ByVal row As vwksResultsRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddvwksResultsRow( _
                    ByVal OrderTestID As Integer,  _
                    ByVal RerunNumber As Integer,  _
                    ByVal MultiPointNumber As Integer,  _
                    ByVal ValidationStatus As String,  _
                    ByVal AcceptedResultFlag As Boolean,  _
                    ByVal TestVersion As Integer,  _
                    ByVal ManualResultFlag As Boolean,  _
                    ByVal UserComment As String,  _
                    ByVal ExportStatus As String,  _
                    ByVal ExportDateTime As Date,  _
                    ByVal Printed As Boolean,  _
                    ByVal ABSValue As Single,  _
                    ByVal ABS_Error As String,  _
                    ByVal SubstrateDepletion As Integer,  _
                    ByVal ABS_Initial As Single,  _
                    ByVal ABS_MainFilter As Single,  _
                    ByVal CalibratorFactor As Single,  _
                    ByVal CalibrationError As String,  _
                    ByVal CalibratorBlankAbsUsed As Single,  _
                    ByVal CurveResultsID As Integer,  _
                    ByVal CurveGrowthType As String,  _
                    ByVal CurveType As String,  _
                    ByVal CurveAxisXType As String,  _
                    ByVal CurveAxisYType As String,  _
                    ByVal RelativeErrorCurve As Single,  _
                    ByVal CONC_Value As Single,  _
                    ByVal CONC_Error As String,  _
                    ByVal ResultDateTime As Date,  _
                    ByVal TS_User As String,  _
                    ByVal TS_DateTime As Date,  _
                    ByVal Abs_WorkReagent As Single,  _
                    ByVal BlankAbsorbanceLimit As Single,  _
                    ByVal KineticBlankLimit As Single,  _
                    ByVal CalibratorLotNumber As String,  _
                    ByVal SampleType As String,  _
                    ByVal TheoricalConcentration As Single,  _
                    ByVal MeasureUnit As String,  _
                    ByVal FactorLowerLimit As Single,  _
                    ByVal FactorUpperLimit As Single,  _
                    ByVal DecimalsAllowed As Integer,  _
                    ByVal ControlName As String,  _
                    ByVal ControlLotNumber As String,  _
                    ByVal MinConcentration As String,  _
                    ByVal MaxConcentration As String,  _
                    ByVal TestName As String,  _
                    ByVal TestType As String,  _
                    ByVal OrderTestStatus As String,  _
                    ByVal PostDilutionType As String,  _
                    ByVal TestID As Integer,  _
                    ByVal ActiveRangeType As String,  _
                    ByVal NormalLowerLimit As String,  _
                    ByVal NormalUpperLimit As String,  _
                    ByVal OrderID As String,  _
                    ByVal Collapsed As Boolean,  _
                    ByVal PatientName As String,  _
                    ByVal ManualResult As Single,  _
                    ByVal ManualResultText As String,  _
                    ByVal StatFlag As Boolean,  _
                    ByVal PatientID As String,  _
                    ByVal CalibratorName As String,  _
                    ByVal AnalysisMode As String,  _
                    ByVal CurveSlope As Single,  _
                    ByVal CurveOffset As Single,  _
                    ByVal CurveCorrelation As Single,  _
                    ByVal STDOrderTestID As String,  _
                    ByVal SampleClass As String,  _
                    ByVal CalibratorID As Integer,  _
                    ByVal NumberOfCalibrators As Integer,  _
                    ByVal PanicLowerLimit As String,  _
                    ByVal PanicUpperLimit As String,  _
                    ByVal OrderDateTime As Date,  _
                    ByVal SampleID As String,  _
                    ByVal WorkSessionID As String,  _
                    ByVal AnalyzerID As String,  _
                    ByVal ReplicatesNumber As Integer,  _
                    ByVal HistWorkSessionID As String,  _
                    ByVal HistOrderTestID As Integer,  _
                    ByVal TubeType As String,  _
                    ByVal LotNumber As String,  _
                    ByVal AlarmList As String,  _
                    ByVal LISMessageID As String,  _
                    ByVal LISRequest As Boolean,  _
                    ByVal ExternalQC As Boolean,  _
                    ByVal SpecimenIDList As String,  _
                    ByVal TestLongName As String) As vwksResultsRow
            Dim rowvwksResultsRow As vwksResultsRow = CType(Me.NewRow,vwksResultsRow)
            Dim columnValuesArray() As Object = New Object() {OrderTestID, RerunNumber, MultiPointNumber, ValidationStatus, AcceptedResultFlag, TestVersion, ManualResultFlag, UserComment, ExportStatus, ExportDateTime, Printed, ABSValue, ABS_Error, SubstrateDepletion, ABS_Initial, ABS_MainFilter, CalibratorFactor, CalibrationError, CalibratorBlankAbsUsed, CurveResultsID, CurveGrowthType, CurveType, CurveAxisXType, CurveAxisYType, RelativeErrorCurve, CONC_Value, CONC_Error, ResultDateTime, TS_User, TS_DateTime, Abs_WorkReagent, BlankAbsorbanceLimit, KineticBlankLimit, CalibratorLotNumber, SampleType, TheoricalConcentration, MeasureUnit, FactorLowerLimit, FactorUpperLimit, DecimalsAllowed, ControlName, ControlLotNumber, MinConcentration, MaxConcentration, TestName, TestType, OrderTestStatus, PostDilutionType, TestID, ActiveRangeType, NormalLowerLimit, NormalUpperLimit, OrderID, Collapsed, PatientName, ManualResult, ManualResultText, StatFlag, PatientID, CalibratorName, AnalysisMode, CurveSlope, CurveOffset, CurveCorrelation, STDOrderTestID, SampleClass, CalibratorID, NumberOfCalibrators, PanicLowerLimit, PanicUpperLimit, OrderDateTime, SampleID, WorkSessionID, AnalyzerID, ReplicatesNumber, HistWorkSessionID, HistOrderTestID, TubeType, LotNumber, AlarmList, LISMessageID, LISRequest, ExternalQC, SpecimenIDList, TestLongName}
            rowvwksResultsRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowvwksResultsRow)
            Return rowvwksResultsRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As vwksResultsDataTable = CType(MyBase.Clone,vwksResultsDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New vwksResultsDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnOrderTestID = MyBase.Columns("OrderTestID")
            Me.columnRerunNumber = MyBase.Columns("RerunNumber")
            Me.columnMultiPointNumber = MyBase.Columns("MultiPointNumber")
            Me.columnValidationStatus = MyBase.Columns("ValidationStatus")
            Me.columnAcceptedResultFlag = MyBase.Columns("AcceptedResultFlag")
            Me.columnTestVersion = MyBase.Columns("TestVersion")
            Me.columnManualResultFlag = MyBase.Columns("ManualResultFlag")
            Me.columnUserComment = MyBase.Columns("UserComment")
            Me.columnExportStatus = MyBase.Columns("ExportStatus")
            Me.columnExportDateTime = MyBase.Columns("ExportDateTime")
            Me.columnPrinted = MyBase.Columns("Printed")
            Me.columnABSValue = MyBase.Columns("ABSValue")
            Me.columnABS_Error = MyBase.Columns("ABS_Error")
            Me.columnSubstrateDepletion = MyBase.Columns("SubstrateDepletion")
            Me.columnABS_Initial = MyBase.Columns("ABS_Initial")
            Me.columnABS_MainFilter = MyBase.Columns("ABS_MainFilter")
            Me.columnCalibratorFactor = MyBase.Columns("CalibratorFactor")
            Me.columnCalibrationError = MyBase.Columns("CalibrationError")
            Me.columnCalibratorBlankAbsUsed = MyBase.Columns("CalibratorBlankAbsUsed")
            Me.columnCurveResultsID = MyBase.Columns("CurveResultsID")
            Me.columnCurveGrowthType = MyBase.Columns("CurveGrowthType")
            Me.columnCurveType = MyBase.Columns("CurveType")
            Me.columnCurveAxisXType = MyBase.Columns("CurveAxisXType")
            Me.columnCurveAxisYType = MyBase.Columns("CurveAxisYType")
            Me.columnRelativeErrorCurve = MyBase.Columns("RelativeErrorCurve")
            Me.columnCONC_Value = MyBase.Columns("CONC_Value")
            Me.columnCONC_Error = MyBase.Columns("CONC_Error")
            Me.columnResultDateTime = MyBase.Columns("ResultDateTime")
            Me.columnTS_User = MyBase.Columns("TS_User")
            Me.columnTS_DateTime = MyBase.Columns("TS_DateTime")
            Me.columnAbs_WorkReagent = MyBase.Columns("Abs_WorkReagent")
            Me.columnBlankAbsorbanceLimit = MyBase.Columns("BlankAbsorbanceLimit")
            Me.columnKineticBlankLimit = MyBase.Columns("KineticBlankLimit")
            Me.columnCalibratorLotNumber = MyBase.Columns("CalibratorLotNumber")
            Me.columnSampleType = MyBase.Columns("SampleType")
            Me.columnTheoricalConcentration = MyBase.Columns("TheoricalConcentration")
            Me.columnMeasureUnit = MyBase.Columns("MeasureUnit")
            Me.columnFactorLowerLimit = MyBase.Columns("FactorLowerLimit")
            Me.columnFactorUpperLimit = MyBase.Columns("FactorUpperLimit")
            Me.columnDecimalsAllowed = MyBase.Columns("DecimalsAllowed")
            Me.columnControlName = MyBase.Columns("ControlName")
            Me.columnControlLotNumber = MyBase.Columns("ControlLotNumber")
            Me.columnMinConcentration = MyBase.Columns("MinConcentration")
            Me.columnMaxConcentration = MyBase.Columns("MaxConcentration")
            Me.columnTestName = MyBase.Columns("TestName")
            Me.columnTestType = MyBase.Columns("TestType")
            Me.columnOrderTestStatus = MyBase.Columns("OrderTestStatus")
            Me.columnPostDilutionType = MyBase.Columns("PostDilutionType")
            Me.columnTestID = MyBase.Columns("TestID")
            Me.columnActiveRangeType = MyBase.Columns("ActiveRangeType")
            Me.columnNormalLowerLimit = MyBase.Columns("NormalLowerLimit")
            Me.columnNormalUpperLimit = MyBase.Columns("NormalUpperLimit")
            Me.columnOrderID = MyBase.Columns("OrderID")
            Me.columnCollapsed = MyBase.Columns("Collapsed")
            Me.columnPatientName = MyBase.Columns("PatientName")
            Me.columnManualResult = MyBase.Columns("ManualResult")
            Me.columnManualResultText = MyBase.Columns("ManualResultText")
            Me.columnStatFlag = MyBase.Columns("StatFlag")
            Me.columnPatientID = MyBase.Columns("PatientID")
            Me.columnCalibratorName = MyBase.Columns("CalibratorName")
            Me.columnAnalysisMode = MyBase.Columns("AnalysisMode")
            Me.columnCurveSlope = MyBase.Columns("CurveSlope")
            Me.columnCurveOffset = MyBase.Columns("CurveOffset")
            Me.columnCurveCorrelation = MyBase.Columns("CurveCorrelation")
            Me.columnSTDOrderTestID = MyBase.Columns("STDOrderTestID")
            Me.columnSampleClass = MyBase.Columns("SampleClass")
            Me.columnCalibratorID = MyBase.Columns("CalibratorID")
            Me.columnNumberOfCalibrators = MyBase.Columns("NumberOfCalibrators")
            Me.columnPanicLowerLimit = MyBase.Columns("PanicLowerLimit")
            Me.columnPanicUpperLimit = MyBase.Columns("PanicUpperLimit")
            Me.columnOrderDateTime = MyBase.Columns("OrderDateTime")
            Me.columnSampleID = MyBase.Columns("SampleID")
            Me.columnWorkSessionID = MyBase.Columns("WorkSessionID")
            Me.columnAnalyzerID = MyBase.Columns("AnalyzerID")
            Me.columnReplicatesNumber = MyBase.Columns("ReplicatesNumber")
            Me.columnHistWorkSessionID = MyBase.Columns("HistWorkSessionID")
            Me.columnHistOrderTestID = MyBase.Columns("HistOrderTestID")
            Me.columnTubeType = MyBase.Columns("TubeType")
            Me.columnLotNumber = MyBase.Columns("LotNumber")
            Me.columnAlarmList = MyBase.Columns("AlarmList")
            Me.columnLISMessageID = MyBase.Columns("LISMessageID")
            Me.columnLISRequest = MyBase.Columns("LISRequest")
            Me.columnExternalQC = MyBase.Columns("ExternalQC")
            Me.columnSpecimenIDList = MyBase.Columns("SpecimenIDList")
            Me.columnTestLongName = MyBase.Columns("TestLongName")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnOrderTestID = New Global.System.Data.DataColumn("OrderTestID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOrderTestID)
            Me.columnRerunNumber = New Global.System.Data.DataColumn("RerunNumber", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRerunNumber)
            Me.columnMultiPointNumber = New Global.System.Data.DataColumn("MultiPointNumber", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMultiPointNumber)
            Me.columnValidationStatus = New Global.System.Data.DataColumn("ValidationStatus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnValidationStatus)
            Me.columnAcceptedResultFlag = New Global.System.Data.DataColumn("AcceptedResultFlag", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAcceptedResultFlag)
            Me.columnTestVersion = New Global.System.Data.DataColumn("TestVersion", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTestVersion)
            Me.columnManualResultFlag = New Global.System.Data.DataColumn("ManualResultFlag", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnManualResultFlag)
            Me.columnUserComment = New Global.System.Data.DataColumn("UserComment", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUserComment)
            Me.columnExportStatus = New Global.System.Data.DataColumn("ExportStatus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExportStatus)
            Me.columnExportDateTime = New Global.System.Data.DataColumn("ExportDateTime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExportDateTime)
            Me.columnPrinted = New Global.System.Data.DataColumn("Printed", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrinted)
            Me.columnABSValue = New Global.System.Data.DataColumn("ABSValue", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnABSValue)
            Me.columnABS_Error = New Global.System.Data.DataColumn("ABS_Error", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnABS_Error)
            Me.columnSubstrateDepletion = New Global.System.Data.DataColumn("SubstrateDepletion", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubstrateDepletion)
            Me.columnABS_Initial = New Global.System.Data.DataColumn("ABS_Initial", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnABS_Initial)
            Me.columnABS_MainFilter = New Global.System.Data.DataColumn("ABS_MainFilter", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnABS_MainFilter)
            Me.columnCalibratorFactor = New Global.System.Data.DataColumn("CalibratorFactor", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCalibratorFactor)
            Me.columnCalibrationError = New Global.System.Data.DataColumn("CalibrationError", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCalibrationError)
            Me.columnCalibratorBlankAbsUsed = New Global.System.Data.DataColumn("CalibratorBlankAbsUsed", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCalibratorBlankAbsUsed)
            Me.columnCurveResultsID = New Global.System.Data.DataColumn("CurveResultsID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCurveResultsID)
            Me.columnCurveGrowthType = New Global.System.Data.DataColumn("CurveGrowthType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCurveGrowthType)
            Me.columnCurveType = New Global.System.Data.DataColumn("CurveType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCurveType)
            Me.columnCurveAxisXType = New Global.System.Data.DataColumn("CurveAxisXType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCurveAxisXType)
            Me.columnCurveAxisYType = New Global.System.Data.DataColumn("CurveAxisYType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCurveAxisYType)
            Me.columnRelativeErrorCurve = New Global.System.Data.DataColumn("RelativeErrorCurve", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRelativeErrorCurve)
            Me.columnCONC_Value = New Global.System.Data.DataColumn("CONC_Value", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONC_Value)
            Me.columnCONC_Error = New Global.System.Data.DataColumn("CONC_Error", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONC_Error)
            Me.columnResultDateTime = New Global.System.Data.DataColumn("ResultDateTime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnResultDateTime)
            Me.columnTS_User = New Global.System.Data.DataColumn("TS_User", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTS_User)
            Me.columnTS_DateTime = New Global.System.Data.DataColumn("TS_DateTime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTS_DateTime)
            Me.columnAbs_WorkReagent = New Global.System.Data.DataColumn("Abs_WorkReagent", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAbs_WorkReagent)
            Me.columnBlankAbsorbanceLimit = New Global.System.Data.DataColumn("BlankAbsorbanceLimit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBlankAbsorbanceLimit)
            Me.columnKineticBlankLimit = New Global.System.Data.DataColumn("KineticBlankLimit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKineticBlankLimit)
            Me.columnCalibratorLotNumber = New Global.System.Data.DataColumn("CalibratorLotNumber", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCalibratorLotNumber)
            Me.columnSampleType = New Global.System.Data.DataColumn("SampleType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSampleType)
            Me.columnTheoricalConcentration = New Global.System.Data.DataColumn("TheoricalConcentration", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTheoricalConcentration)
            Me.columnMeasureUnit = New Global.System.Data.DataColumn("MeasureUnit", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMeasureUnit)
            Me.columnFactorLowerLimit = New Global.System.Data.DataColumn("FactorLowerLimit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFactorLowerLimit)
            Me.columnFactorUpperLimit = New Global.System.Data.DataColumn("FactorUpperLimit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFactorUpperLimit)
            Me.columnDecimalsAllowed = New Global.System.Data.DataColumn("DecimalsAllowed", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDecimalsAllowed)
            Me.columnControlName = New Global.System.Data.DataColumn("ControlName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnControlName)
            Me.columnControlLotNumber = New Global.System.Data.DataColumn("ControlLotNumber", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnControlLotNumber)
            Me.columnMinConcentration = New Global.System.Data.DataColumn("MinConcentration", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMinConcentration)
            Me.columnMaxConcentration = New Global.System.Data.DataColumn("MaxConcentration", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMaxConcentration)
            Me.columnTestName = New Global.System.Data.DataColumn("TestName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTestName)
            Me.columnTestType = New Global.System.Data.DataColumn("TestType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTestType)
            Me.columnOrderTestStatus = New Global.System.Data.DataColumn("OrderTestStatus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOrderTestStatus)
            Me.columnPostDilutionType = New Global.System.Data.DataColumn("PostDilutionType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPostDilutionType)
            Me.columnTestID = New Global.System.Data.DataColumn("TestID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTestID)
            Me.columnActiveRangeType = New Global.System.Data.DataColumn("ActiveRangeType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnActiveRangeType)
            Me.columnNormalLowerLimit = New Global.System.Data.DataColumn("NormalLowerLimit", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNormalLowerLimit)
            Me.columnNormalUpperLimit = New Global.System.Data.DataColumn("NormalUpperLimit", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNormalUpperLimit)
            Me.columnOrderID = New Global.System.Data.DataColumn("OrderID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOrderID)
            Me.columnCollapsed = New Global.System.Data.DataColumn("Collapsed", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCollapsed)
            Me.columnPatientName = New Global.System.Data.DataColumn("PatientName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPatientName)
            Me.columnManualResult = New Global.System.Data.DataColumn("ManualResult", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnManualResult)
            Me.columnManualResultText = New Global.System.Data.DataColumn("ManualResultText", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnManualResultText)
            Me.columnStatFlag = New Global.System.Data.DataColumn("StatFlag", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStatFlag)
            Me.columnPatientID = New Global.System.Data.DataColumn("PatientID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPatientID)
            Me.columnCalibratorName = New Global.System.Data.DataColumn("CalibratorName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCalibratorName)
            Me.columnAnalysisMode = New Global.System.Data.DataColumn("AnalysisMode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAnalysisMode)
            Me.columnCurveSlope = New Global.System.Data.DataColumn("CurveSlope", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCurveSlope)
            Me.columnCurveOffset = New Global.System.Data.DataColumn("CurveOffset", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCurveOffset)
            Me.columnCurveCorrelation = New Global.System.Data.DataColumn("CurveCorrelation", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCurveCorrelation)
            Me.columnSTDOrderTestID = New Global.System.Data.DataColumn("STDOrderTestID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTDOrderTestID)
            Me.columnSampleClass = New Global.System.Data.DataColumn("SampleClass", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSampleClass)
            Me.columnCalibratorID = New Global.System.Data.DataColumn("CalibratorID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCalibratorID)
            Me.columnNumberOfCalibrators = New Global.System.Data.DataColumn("NumberOfCalibrators", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumberOfCalibrators)
            Me.columnPanicLowerLimit = New Global.System.Data.DataColumn("PanicLowerLimit", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPanicLowerLimit)
            Me.columnPanicUpperLimit = New Global.System.Data.DataColumn("PanicUpperLimit", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPanicUpperLimit)
            Me.columnOrderDateTime = New Global.System.Data.DataColumn("OrderDateTime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOrderDateTime)
            Me.columnSampleID = New Global.System.Data.DataColumn("SampleID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSampleID)
            Me.columnWorkSessionID = New Global.System.Data.DataColumn("WorkSessionID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWorkSessionID)
            Me.columnAnalyzerID = New Global.System.Data.DataColumn("AnalyzerID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAnalyzerID)
            Me.columnReplicatesNumber = New Global.System.Data.DataColumn("ReplicatesNumber", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReplicatesNumber)
            Me.columnHistWorkSessionID = New Global.System.Data.DataColumn("HistWorkSessionID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHistWorkSessionID)
            Me.columnHistOrderTestID = New Global.System.Data.DataColumn("HistOrderTestID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHistOrderTestID)
            Me.columnTubeType = New Global.System.Data.DataColumn("TubeType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTubeType)
            Me.columnLotNumber = New Global.System.Data.DataColumn("LotNumber", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLotNumber)
            Me.columnAlarmList = New Global.System.Data.DataColumn("AlarmList", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAlarmList)
            Me.columnLISMessageID = New Global.System.Data.DataColumn("LISMessageID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLISMessageID)
            Me.columnLISRequest = New Global.System.Data.DataColumn("LISRequest", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLISRequest)
            Me.columnExternalQC = New Global.System.Data.DataColumn("ExternalQC", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExternalQC)
            Me.columnSpecimenIDList = New Global.System.Data.DataColumn("SpecimenIDList", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecimenIDList)
            Me.columnTestLongName = New Global.System.Data.DataColumn("TestLongName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTestLongName)
            Me.columnCalibratorLotNumber.MaxLength = 16
            Me.columnControlLotNumber.MaxLength = 16
            Me.columnMinConcentration.DefaultValue = CType("",String)
            Me.columnMaxConcentration.DefaultValue = CType("",String)
            Me.columnCollapsed.DefaultValue = CType(true,Boolean)
            Me.columnLotNumber.DefaultValue = CType("",String)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewvwksResultsRow() As vwksResultsRow
            Return CType(Me.NewRow,vwksResultsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New vwksResultsRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(vwksResultsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.vwksResultsRowChangedEvent) Is Nothing) Then
                RaiseEvent vwksResultsRowChanged(Me, New vwksResultsRowChangeEvent(CType(e.Row,vwksResultsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.vwksResultsRowChangingEvent) Is Nothing) Then
                RaiseEvent vwksResultsRowChanging(Me, New vwksResultsRowChangeEvent(CType(e.Row,vwksResultsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.vwksResultsRowDeletedEvent) Is Nothing) Then
                RaiseEvent vwksResultsRowDeleted(Me, New vwksResultsRowChangeEvent(CType(e.Row,vwksResultsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.vwksResultsRowDeletingEvent) Is Nothing) Then
                RaiseEvent vwksResultsRowDeleting(Me, New vwksResultsRowChangeEvent(CType(e.Row,vwksResultsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovevwksResultsRow(ByVal row As vwksResultsRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ResultsDS = New ResultsDS()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "vwksResultsDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class vwksResultsAlarmsDataTable
        Inherits Global.System.Data.TypedTableBase(Of vwksResultsAlarmsRow)
        
        Private columnOrderTestID As Global.System.Data.DataColumn
        
        Private columnRerunNumber As Global.System.Data.DataColumn
        
        Private columnMultiPointNumber As Global.System.Data.DataColumn
        
        Private columnDescription As Global.System.Data.DataColumn
        
        Private columnAcceptedResultFlag As Global.System.Data.DataColumn
        
        Private columnAlarmID As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "vwksResultsAlarms"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OrderTestIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOrderTestID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RerunNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRerunNumber
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MultiPointNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMultiPointNumber
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDescription
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AcceptedResultFlagColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAcceptedResultFlag
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AlarmIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAlarmID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As vwksResultsAlarmsRow
            Get
                Return CType(Me.Rows(index),vwksResultsAlarmsRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event vwksResultsAlarmsRowChanging As vwksResultsAlarmsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event vwksResultsAlarmsRowChanged As vwksResultsAlarmsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event vwksResultsAlarmsRowDeleting As vwksResultsAlarmsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event vwksResultsAlarmsRowDeleted As vwksResultsAlarmsRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddvwksResultsAlarmsRow(ByVal row As vwksResultsAlarmsRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddvwksResultsAlarmsRow(ByVal OrderTestID As Integer, ByVal RerunNumber As Integer, ByVal MultiPointNumber As Integer, ByVal Description As String, ByVal AcceptedResultFlag As Boolean, ByVal AlarmID As String) As vwksResultsAlarmsRow
            Dim rowvwksResultsAlarmsRow As vwksResultsAlarmsRow = CType(Me.NewRow,vwksResultsAlarmsRow)
            Dim columnValuesArray() As Object = New Object() {OrderTestID, RerunNumber, MultiPointNumber, Description, AcceptedResultFlag, AlarmID}
            rowvwksResultsAlarmsRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowvwksResultsAlarmsRow)
            Return rowvwksResultsAlarmsRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As vwksResultsAlarmsDataTable = CType(MyBase.Clone,vwksResultsAlarmsDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New vwksResultsAlarmsDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnOrderTestID = MyBase.Columns("OrderTestID")
            Me.columnRerunNumber = MyBase.Columns("RerunNumber")
            Me.columnMultiPointNumber = MyBase.Columns("MultiPointNumber")
            Me.columnDescription = MyBase.Columns("Description")
            Me.columnAcceptedResultFlag = MyBase.Columns("AcceptedResultFlag")
            Me.columnAlarmID = MyBase.Columns("AlarmID")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnOrderTestID = New Global.System.Data.DataColumn("OrderTestID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOrderTestID)
            Me.columnRerunNumber = New Global.System.Data.DataColumn("RerunNumber", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRerunNumber)
            Me.columnMultiPointNumber = New Global.System.Data.DataColumn("MultiPointNumber", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMultiPointNumber)
            Me.columnDescription = New Global.System.Data.DataColumn("Description", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescription)
            Me.columnAcceptedResultFlag = New Global.System.Data.DataColumn("AcceptedResultFlag", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAcceptedResultFlag)
            Me.columnAlarmID = New Global.System.Data.DataColumn("AlarmID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAlarmID)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewvwksResultsAlarmsRow() As vwksResultsAlarmsRow
            Return CType(Me.NewRow,vwksResultsAlarmsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New vwksResultsAlarmsRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(vwksResultsAlarmsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.vwksResultsAlarmsRowChangedEvent) Is Nothing) Then
                RaiseEvent vwksResultsAlarmsRowChanged(Me, New vwksResultsAlarmsRowChangeEvent(CType(e.Row,vwksResultsAlarmsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.vwksResultsAlarmsRowChangingEvent) Is Nothing) Then
                RaiseEvent vwksResultsAlarmsRowChanging(Me, New vwksResultsAlarmsRowChangeEvent(CType(e.Row,vwksResultsAlarmsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.vwksResultsAlarmsRowDeletedEvent) Is Nothing) Then
                RaiseEvent vwksResultsAlarmsRowDeleted(Me, New vwksResultsAlarmsRowChangeEvent(CType(e.Row,vwksResultsAlarmsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.vwksResultsAlarmsRowDeletingEvent) Is Nothing) Then
                RaiseEvent vwksResultsAlarmsRowDeleting(Me, New vwksResultsAlarmsRowChangeEvent(CType(e.Row,vwksResultsAlarmsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovevwksResultsAlarmsRow(ByVal row As vwksResultsAlarmsRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ResultsDS = New ResultsDS()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "vwksResultsAlarmsDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class XtraSamplesDataTable
        Inherits Global.System.Data.TypedTableBase(Of XtraSamplesRow)
        
        Private columnGroup As Global.System.Data.DataColumn
        
        Private columnOk As Global.System.Data.DataColumn
        
        Private columnExportStatus As Global.System.Data.DataColumn
        
        Private columnNewRep As Global.System.Data.DataColumn
        
        Private columnStatFlag As Global.System.Data.DataColumn
        
        Private columnPatientName As Global.System.Data.DataColumn
        
        Private columnPatientID As Global.System.Data.DataColumn
        
        Private columnSampleType As Global.System.Data.DataColumn
        
        Private columnRerunNumber As Global.System.Data.DataColumn
        
        Private columnGraph As Global.System.Data.DataColumn
        
        Private columnReplicateNumber As Global.System.Data.DataColumn
        
        Private columnABSValue As Global.System.Data.DataColumn
        
        Private columnConcentration As Global.System.Data.DataColumn
        
        Private columnUnit As Global.System.Data.DataColumn
        
        Private columnReferenceRanges As Global.System.Data.DataColumn
        
        Private columnRemarks As Global.System.Data.DataColumn
        
        Private columnResultDate As Global.System.Data.DataColumn
        
        Private columnRep As Global.System.Data.DataColumn
        
        Private columnCollapsed As Global.System.Data.DataColumn
        
        Private columnIsSubHeader As Global.System.Data.DataColumn
        
        Private columnTagRowIndex As Global.System.Data.DataColumn
        
        Private columnInUse As Global.System.Data.DataColumn
        
        Private columnTestType As Global.System.Data.DataColumn
        
        Private column_SortingCol As Global.System.Data.DataColumn
        
        Private columnSpecimenIDList As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "XtraSamples"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GroupColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGroup
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OkColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOk
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ExportStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExportStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NewRepColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNewRep
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property StatFlagColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStatFlag
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PatientNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPatientName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PatientIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPatientID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SampleTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSampleType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RerunNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRerunNumber
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GraphColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGraph
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ReplicateNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReplicateNumber
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ABSValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnABSValue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ConcentrationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnConcentration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UnitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUnit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ReferenceRangesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReferenceRanges
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RemarksColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRemarks
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ResultDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnResultDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RepColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRep
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CollapsedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCollapsed
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IsSubHeaderColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIsSubHeader
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TagRowIndexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTagRowIndex
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property InUseColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInUse
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TestTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTestType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property _SortingColColumn() As Global.System.Data.DataColumn
            Get
                Return Me.column_SortingCol
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SpecimenIDListColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecimenIDList
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As XtraSamplesRow
            Get
                Return CType(Me.Rows(index),XtraSamplesRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event XtraSamplesRowChanging As XtraSamplesRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event XtraSamplesRowChanged As XtraSamplesRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event XtraSamplesRowDeleting As XtraSamplesRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event XtraSamplesRowDeleted As XtraSamplesRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddXtraSamplesRow(ByVal row As XtraSamplesRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddXtraSamplesRow( _
                    ByVal Group As String,  _
                    ByVal Ok() As Byte,  _
                    ByVal ExportStatus() As Byte,  _
                    ByVal NewRep() As Byte,  _
                    ByVal StatFlag() As Byte,  _
                    ByVal PatientName As String,  _
                    ByVal PatientID As String,  _
                    ByVal SampleType As String,  _
                    ByVal RerunNumber As Integer,  _
                    ByVal Graph() As Byte,  _
                    ByVal ReplicateNumber As String,  _
                    ByVal ABSValue As String,  _
                    ByVal Concentration As String,  _
                    ByVal Unit As String,  _
                    ByVal ReferenceRanges As String,  _
                    ByVal Remarks As String,  _
                    ByVal ResultDate As String,  _
                    ByVal Rep As String,  _
                    ByVal Collapsed As Boolean,  _
                    ByVal IsSubHeader As Boolean,  _
                    ByVal TagRowIndex As Integer,  _
                    ByVal InUse As Boolean,  _
                    ByVal TestType As String,  _
                    ByVal _SortingCol As Object,  _
                    ByVal SpecimenIDList As String) As XtraSamplesRow
            Dim rowXtraSamplesRow As XtraSamplesRow = CType(Me.NewRow,XtraSamplesRow)
            Dim columnValuesArray() As Object = New Object() {Group, Ok, ExportStatus, NewRep, StatFlag, PatientName, PatientID, SampleType, RerunNumber, Graph, ReplicateNumber, ABSValue, Concentration, Unit, ReferenceRanges, Remarks, ResultDate, Rep, Collapsed, IsSubHeader, TagRowIndex, InUse, TestType, _SortingCol, SpecimenIDList}
            rowXtraSamplesRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowXtraSamplesRow)
            Return rowXtraSamplesRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As XtraSamplesDataTable = CType(MyBase.Clone,XtraSamplesDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New XtraSamplesDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnGroup = MyBase.Columns("Group")
            Me.columnOk = MyBase.Columns("Ok")
            Me.columnExportStatus = MyBase.Columns("ExportStatus")
            Me.columnNewRep = MyBase.Columns("NewRep")
            Me.columnStatFlag = MyBase.Columns("StatFlag")
            Me.columnPatientName = MyBase.Columns("PatientName")
            Me.columnPatientID = MyBase.Columns("PatientID")
            Me.columnSampleType = MyBase.Columns("SampleType")
            Me.columnRerunNumber = MyBase.Columns("RerunNumber")
            Me.columnGraph = MyBase.Columns("Graph")
            Me.columnReplicateNumber = MyBase.Columns("ReplicateNumber")
            Me.columnABSValue = MyBase.Columns("ABSValue")
            Me.columnConcentration = MyBase.Columns("Concentration")
            Me.columnUnit = MyBase.Columns("Unit")
            Me.columnReferenceRanges = MyBase.Columns("ReferenceRanges")
            Me.columnRemarks = MyBase.Columns("Remarks")
            Me.columnResultDate = MyBase.Columns("ResultDate")
            Me.columnRep = MyBase.Columns("Rep")
            Me.columnCollapsed = MyBase.Columns("Collapsed")
            Me.columnIsSubHeader = MyBase.Columns("IsSubHeader")
            Me.columnTagRowIndex = MyBase.Columns("TagRowIndex")
            Me.columnInUse = MyBase.Columns("InUse")
            Me.columnTestType = MyBase.Columns("TestType")
            Me.column_SortingCol = MyBase.Columns("_SortingCol")
            Me.columnSpecimenIDList = MyBase.Columns("SpecimenIDList")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnGroup = New Global.System.Data.DataColumn("Group", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGroup)
            Me.columnOk = New Global.System.Data.DataColumn("Ok", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOk)
            Me.columnExportStatus = New Global.System.Data.DataColumn("ExportStatus", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExportStatus)
            Me.columnNewRep = New Global.System.Data.DataColumn("NewRep", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNewRep)
            Me.columnStatFlag = New Global.System.Data.DataColumn("StatFlag", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStatFlag)
            Me.columnPatientName = New Global.System.Data.DataColumn("PatientName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPatientName)
            Me.columnPatientID = New Global.System.Data.DataColumn("PatientID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPatientID)
            Me.columnSampleType = New Global.System.Data.DataColumn("SampleType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSampleType)
            Me.columnRerunNumber = New Global.System.Data.DataColumn("RerunNumber", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRerunNumber)
            Me.columnGraph = New Global.System.Data.DataColumn("Graph", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGraph)
            Me.columnReplicateNumber = New Global.System.Data.DataColumn("ReplicateNumber", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReplicateNumber)
            Me.columnABSValue = New Global.System.Data.DataColumn("ABSValue", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnABSValue)
            Me.columnConcentration = New Global.System.Data.DataColumn("Concentration", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnConcentration)
            Me.columnUnit = New Global.System.Data.DataColumn("Unit", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUnit)
            Me.columnReferenceRanges = New Global.System.Data.DataColumn("ReferenceRanges", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReferenceRanges)
            Me.columnRemarks = New Global.System.Data.DataColumn("Remarks", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRemarks)
            Me.columnResultDate = New Global.System.Data.DataColumn("ResultDate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnResultDate)
            Me.columnRep = New Global.System.Data.DataColumn("Rep", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRep)
            Me.columnCollapsed = New Global.System.Data.DataColumn("Collapsed", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCollapsed)
            Me.columnIsSubHeader = New Global.System.Data.DataColumn("IsSubHeader", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIsSubHeader)
            Me.columnTagRowIndex = New Global.System.Data.DataColumn("TagRowIndex", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTagRowIndex)
            Me.columnInUse = New Global.System.Data.DataColumn("InUse", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInUse)
            Me.columnTestType = New Global.System.Data.DataColumn("TestType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTestType)
            Me.column_SortingCol = New Global.System.Data.DataColumn("_SortingCol", GetType(Object), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.column_SortingCol)
            Me.columnSpecimenIDList = New Global.System.Data.DataColumn("SpecimenIDList", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecimenIDList)
            Me.columnCollapsed.DefaultValue = CType(true,Boolean)
            Me.columnInUse.DefaultValue = CType(true,Boolean)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewXtraSamplesRow() As XtraSamplesRow
            Return CType(Me.NewRow,XtraSamplesRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New XtraSamplesRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(XtraSamplesRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.XtraSamplesRowChangedEvent) Is Nothing) Then
                RaiseEvent XtraSamplesRowChanged(Me, New XtraSamplesRowChangeEvent(CType(e.Row,XtraSamplesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.XtraSamplesRowChangingEvent) Is Nothing) Then
                RaiseEvent XtraSamplesRowChanging(Me, New XtraSamplesRowChangeEvent(CType(e.Row,XtraSamplesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.XtraSamplesRowDeletedEvent) Is Nothing) Then
                RaiseEvent XtraSamplesRowDeleted(Me, New XtraSamplesRowChangeEvent(CType(e.Row,XtraSamplesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.XtraSamplesRowDeletingEvent) Is Nothing) Then
                RaiseEvent XtraSamplesRowDeleting(Me, New XtraSamplesRowChangeEvent(CType(e.Row,XtraSamplesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveXtraSamplesRow(ByVal row As XtraSamplesRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ResultsDS = New ResultsDS()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "XtraSamplesDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ReportSampleMasterDataTable
        Inherits Global.System.Data.TypedTableBase(Of ReportSampleMasterRow)
        
        Private columnPatientID As Global.System.Data.DataColumn
        
        Private columnFullID As Global.System.Data.DataColumn
        
        Private columnFullName As Global.System.Data.DataColumn
        
        Private columnGender As Global.System.Data.DataColumn
        
        Private columnFormatedDateOfBirth As Global.System.Data.DataColumn
        
        Private columnAgeWithUnit As Global.System.Data.DataColumn
        
        Private columnPerformedBy As Global.System.Data.DataColumn
        
        Private columnComments As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ReportSampleMaster"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PatientIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPatientID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FullIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFullID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FullNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFullName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GenderColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGender
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FormatedDateOfBirthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFormatedDateOfBirth
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AgeWithUnitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAgeWithUnit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PerformedByColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPerformedBy
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CommentsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnComments
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ReportSampleMasterRow
            Get
                Return CType(Me.Rows(index),ReportSampleMasterRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ReportSampleMasterRowChanging As ReportSampleMasterRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ReportSampleMasterRowChanged As ReportSampleMasterRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ReportSampleMasterRowDeleting As ReportSampleMasterRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ReportSampleMasterRowDeleted As ReportSampleMasterRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddReportSampleMasterRow(ByVal row As ReportSampleMasterRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddReportSampleMasterRow(ByVal PatientID As String, ByVal FullID As String, ByVal FullName As String, ByVal Gender As String, ByVal FormatedDateOfBirth As String, ByVal AgeWithUnit As String, ByVal PerformedBy As String, ByVal Comments As String) As ReportSampleMasterRow
            Dim rowReportSampleMasterRow As ReportSampleMasterRow = CType(Me.NewRow,ReportSampleMasterRow)
            Dim columnValuesArray() As Object = New Object() {PatientID, FullID, FullName, Gender, FormatedDateOfBirth, AgeWithUnit, PerformedBy, Comments}
            rowReportSampleMasterRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowReportSampleMasterRow)
            Return rowReportSampleMasterRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ReportSampleMasterDataTable = CType(MyBase.Clone,ReportSampleMasterDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ReportSampleMasterDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnPatientID = MyBase.Columns("PatientID")
            Me.columnFullID = MyBase.Columns("FullID")
            Me.columnFullName = MyBase.Columns("FullName")
            Me.columnGender = MyBase.Columns("Gender")
            Me.columnFormatedDateOfBirth = MyBase.Columns("FormatedDateOfBirth")
            Me.columnAgeWithUnit = MyBase.Columns("AgeWithUnit")
            Me.columnPerformedBy = MyBase.Columns("PerformedBy")
            Me.columnComments = MyBase.Columns("Comments")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnPatientID = New Global.System.Data.DataColumn("PatientID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPatientID)
            Me.columnFullID = New Global.System.Data.DataColumn("FullID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFullID)
            Me.columnFullName = New Global.System.Data.DataColumn("FullName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFullName)
            Me.columnGender = New Global.System.Data.DataColumn("Gender", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGender)
            Me.columnFormatedDateOfBirth = New Global.System.Data.DataColumn("FormatedDateOfBirth", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFormatedDateOfBirth)
            Me.columnAgeWithUnit = New Global.System.Data.DataColumn("AgeWithUnit", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAgeWithUnit)
            Me.columnPerformedBy = New Global.System.Data.DataColumn("PerformedBy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPerformedBy)
            Me.columnComments = New Global.System.Data.DataColumn("Comments", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnComments)
            Me.columnFullName.Caption = "FirstName"
            Me.columnAgeWithUnit.DefaultValue = CType("",String)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewReportSampleMasterRow() As ReportSampleMasterRow
            Return CType(Me.NewRow,ReportSampleMasterRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ReportSampleMasterRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ReportSampleMasterRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ReportSampleMasterRowChangedEvent) Is Nothing) Then
                RaiseEvent ReportSampleMasterRowChanged(Me, New ReportSampleMasterRowChangeEvent(CType(e.Row,ReportSampleMasterRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ReportSampleMasterRowChangingEvent) Is Nothing) Then
                RaiseEvent ReportSampleMasterRowChanging(Me, New ReportSampleMasterRowChangeEvent(CType(e.Row,ReportSampleMasterRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ReportSampleMasterRowDeletedEvent) Is Nothing) Then
                RaiseEvent ReportSampleMasterRowDeleted(Me, New ReportSampleMasterRowChangeEvent(CType(e.Row,ReportSampleMasterRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ReportSampleMasterRowDeletingEvent) Is Nothing) Then
                RaiseEvent ReportSampleMasterRowDeleting(Me, New ReportSampleMasterRowChangeEvent(CType(e.Row,ReportSampleMasterRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveReportSampleMasterRow(ByVal row As ReportSampleMasterRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ResultsDS = New ResultsDS()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ReportSampleMasterDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ReportSampleDetailsDataTable
        Inherits Global.System.Data.TypedTableBase(Of ReportSampleDetailsRow)
        
        Private columnPatientID As Global.System.Data.DataColumn
        
        Private columnTestName As Global.System.Data.DataColumn
        
        Private columnSampleType As Global.System.Data.DataColumn
        
        Private columnReplicateNumber As Global.System.Data.DataColumn
        
        Private columnABSValue As Global.System.Data.DataColumn
        
        Private columnCONC_Value As Global.System.Data.DataColumn
        
        Private columnReferenceRanges As Global.System.Data.DataColumn
        
        Private columnUnit As Global.System.Data.DataColumn
        
        Private columnResultDate As Global.System.Data.DataColumn
        
        Private columnRemarks As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ReportSampleDetails"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PatientIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPatientID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TestNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTestName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SampleTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSampleType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ReplicateNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReplicateNumber
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ABSValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnABSValue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CONC_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONC_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ReferenceRangesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReferenceRanges
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UnitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUnit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ResultDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnResultDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RemarksColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRemarks
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ReportSampleDetailsRow
            Get
                Return CType(Me.Rows(index),ReportSampleDetailsRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ReportSampleDetailsRowChanging As ReportSampleDetailsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ReportSampleDetailsRowChanged As ReportSampleDetailsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ReportSampleDetailsRowDeleting As ReportSampleDetailsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ReportSampleDetailsRowDeleted As ReportSampleDetailsRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddReportSampleDetailsRow(ByVal row As ReportSampleDetailsRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddReportSampleDetailsRow(ByVal parentReportSampleMasterRowByReportSampleMaster_ReportSampleDetails As ReportSampleMasterRow, ByVal TestName As String, ByVal SampleType As String, ByVal ReplicateNumber As String, ByVal ABSValue As String, ByVal CONC_Value As String, ByVal ReferenceRanges As String, ByVal Unit As String, ByVal ResultDate As String, ByVal Remarks As String) As ReportSampleDetailsRow
            Dim rowReportSampleDetailsRow As ReportSampleDetailsRow = CType(Me.NewRow,ReportSampleDetailsRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, TestName, SampleType, ReplicateNumber, ABSValue, CONC_Value, ReferenceRanges, Unit, ResultDate, Remarks}
            If (Not (parentReportSampleMasterRowByReportSampleMaster_ReportSampleDetails) Is Nothing) Then
                columnValuesArray(0) = parentReportSampleMasterRowByReportSampleMaster_ReportSampleDetails(0)
            End If
            rowReportSampleDetailsRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowReportSampleDetailsRow)
            Return rowReportSampleDetailsRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ReportSampleDetailsDataTable = CType(MyBase.Clone,ReportSampleDetailsDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ReportSampleDetailsDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnPatientID = MyBase.Columns("PatientID")
            Me.columnTestName = MyBase.Columns("TestName")
            Me.columnSampleType = MyBase.Columns("SampleType")
            Me.columnReplicateNumber = MyBase.Columns("ReplicateNumber")
            Me.columnABSValue = MyBase.Columns("ABSValue")
            Me.columnCONC_Value = MyBase.Columns("CONC_Value")
            Me.columnReferenceRanges = MyBase.Columns("ReferenceRanges")
            Me.columnUnit = MyBase.Columns("Unit")
            Me.columnResultDate = MyBase.Columns("ResultDate")
            Me.columnRemarks = MyBase.Columns("Remarks")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnPatientID = New Global.System.Data.DataColumn("PatientID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPatientID)
            Me.columnTestName = New Global.System.Data.DataColumn("TestName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTestName)
            Me.columnSampleType = New Global.System.Data.DataColumn("SampleType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSampleType)
            Me.columnReplicateNumber = New Global.System.Data.DataColumn("ReplicateNumber", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReplicateNumber)
            Me.columnABSValue = New Global.System.Data.DataColumn("ABSValue", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnABSValue)
            Me.columnCONC_Value = New Global.System.Data.DataColumn("CONC_Value", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONC_Value)
            Me.columnReferenceRanges = New Global.System.Data.DataColumn("ReferenceRanges", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReferenceRanges)
            Me.columnUnit = New Global.System.Data.DataColumn("Unit", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUnit)
            Me.columnResultDate = New Global.System.Data.DataColumn("ResultDate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnResultDate)
            Me.columnRemarks = New Global.System.Data.DataColumn("Remarks", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRemarks)
            Me.columnRemarks.Caption = "Comments"
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewReportSampleDetailsRow() As ReportSampleDetailsRow
            Return CType(Me.NewRow,ReportSampleDetailsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ReportSampleDetailsRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ReportSampleDetailsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ReportSampleDetailsRowChangedEvent) Is Nothing) Then
                RaiseEvent ReportSampleDetailsRowChanged(Me, New ReportSampleDetailsRowChangeEvent(CType(e.Row,ReportSampleDetailsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ReportSampleDetailsRowChangingEvent) Is Nothing) Then
                RaiseEvent ReportSampleDetailsRowChanging(Me, New ReportSampleDetailsRowChangeEvent(CType(e.Row,ReportSampleDetailsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ReportSampleDetailsRowDeletedEvent) Is Nothing) Then
                RaiseEvent ReportSampleDetailsRowDeleted(Me, New ReportSampleDetailsRowChangeEvent(CType(e.Row,ReportSampleDetailsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ReportSampleDetailsRowDeletingEvent) Is Nothing) Then
                RaiseEvent ReportSampleDetailsRowDeleting(Me, New ReportSampleDetailsRowChangeEvent(CType(e.Row,ReportSampleDetailsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveReportSampleDetailsRow(ByVal row As ReportSampleDetailsRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ResultsDS = New ResultsDS()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ReportSampleDetailsDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ReportTestMasterDataTable
        Inherits Global.System.Data.TypedTableBase(Of ReportTestMasterRow)
        
        Private columnTestTypeTestID As Global.System.Data.DataColumn
        
        Private columnTestName As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ReportTestMaster"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TestTypeTestIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTestTypeTestID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TestNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTestName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ReportTestMasterRow
            Get
                Return CType(Me.Rows(index),ReportTestMasterRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ReportTestMasterRowChanging As ReportTestMasterRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ReportTestMasterRowChanged As ReportTestMasterRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ReportTestMasterRowDeleting As ReportTestMasterRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ReportTestMasterRowDeleted As ReportTestMasterRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddReportTestMasterRow(ByVal row As ReportTestMasterRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddReportTestMasterRow(ByVal TestTypeTestID As String, ByVal TestName As String) As ReportTestMasterRow
            Dim rowReportTestMasterRow As ReportTestMasterRow = CType(Me.NewRow,ReportTestMasterRow)
            Dim columnValuesArray() As Object = New Object() {TestTypeTestID, TestName}
            rowReportTestMasterRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowReportTestMasterRow)
            Return rowReportTestMasterRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ReportTestMasterDataTable = CType(MyBase.Clone,ReportTestMasterDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ReportTestMasterDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnTestTypeTestID = MyBase.Columns("TestTypeTestID")
            Me.columnTestName = MyBase.Columns("TestName")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnTestTypeTestID = New Global.System.Data.DataColumn("TestTypeTestID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTestTypeTestID)
            Me.columnTestName = New Global.System.Data.DataColumn("TestName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTestName)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewReportTestMasterRow() As ReportTestMasterRow
            Return CType(Me.NewRow,ReportTestMasterRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ReportTestMasterRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ReportTestMasterRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ReportTestMasterRowChangedEvent) Is Nothing) Then
                RaiseEvent ReportTestMasterRowChanged(Me, New ReportTestMasterRowChangeEvent(CType(e.Row,ReportTestMasterRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ReportTestMasterRowChangingEvent) Is Nothing) Then
                RaiseEvent ReportTestMasterRowChanging(Me, New ReportTestMasterRowChangeEvent(CType(e.Row,ReportTestMasterRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ReportTestMasterRowDeletedEvent) Is Nothing) Then
                RaiseEvent ReportTestMasterRowDeleted(Me, New ReportTestMasterRowChangeEvent(CType(e.Row,ReportTestMasterRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ReportTestMasterRowDeletingEvent) Is Nothing) Then
                RaiseEvent ReportTestMasterRowDeleting(Me, New ReportTestMasterRowChangeEvent(CType(e.Row,ReportTestMasterRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveReportTestMasterRow(ByVal row As ReportTestMasterRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ResultsDS = New ResultsDS()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ReportTestMasterDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ReportTestDetailsDataTable
        Inherits Global.System.Data.TypedTableBase(Of ReportTestDetailsRow)
        
        Private columnTestTypeTestID As Global.System.Data.DataColumn
        
        Private columnSampleClass As Global.System.Data.DataColumn
        
        Private columnName As Global.System.Data.DataColumn
        
        Private columnSampleType As Global.System.Data.DataColumn
        
        Private columnReplicateNumber As Global.System.Data.DataColumn
        
        Private columnABSValue As Global.System.Data.DataColumn
        
        Private columnCONC_Value As Global.System.Data.DataColumn
        
        Private columnMeasureUnit As Global.System.Data.DataColumn
        
        Private columnCalibratorFactor As Global.System.Data.DataColumn
        
        Private columnResultDate As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ReportTestDetails"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TestTypeTestIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTestTypeTestID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SampleClassColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSampleClass
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SampleTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSampleType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ReplicateNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReplicateNumber
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ABSValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnABSValue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CONC_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONC_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MeasureUnitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMeasureUnit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CalibratorFactorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCalibratorFactor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ResultDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnResultDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ReportTestDetailsRow
            Get
                Return CType(Me.Rows(index),ReportTestDetailsRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ReportTestDetailsRowChanging As ReportTestDetailsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ReportTestDetailsRowChanged As ReportTestDetailsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ReportTestDetailsRowDeleting As ReportTestDetailsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ReportTestDetailsRowDeleted As ReportTestDetailsRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddReportTestDetailsRow(ByVal row As ReportTestDetailsRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddReportTestDetailsRow(ByVal parentReportTestMasterRowByReportTestMaster_ReportTestDetails As ReportTestMasterRow, ByVal SampleClass As String, ByVal Name As String, ByVal SampleType As String, ByVal ReplicateNumber As String, ByVal ABSValue As String, ByVal CONC_Value As String, ByVal MeasureUnit As String, ByVal CalibratorFactor As String, ByVal ResultDate As String) As ReportTestDetailsRow
            Dim rowReportTestDetailsRow As ReportTestDetailsRow = CType(Me.NewRow,ReportTestDetailsRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, SampleClass, Name, SampleType, ReplicateNumber, ABSValue, CONC_Value, MeasureUnit, CalibratorFactor, ResultDate}
            If (Not (parentReportTestMasterRowByReportTestMaster_ReportTestDetails) Is Nothing) Then
                columnValuesArray(0) = parentReportTestMasterRowByReportTestMaster_ReportTestDetails(0)
            End If
            rowReportTestDetailsRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowReportTestDetailsRow)
            Return rowReportTestDetailsRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ReportTestDetailsDataTable = CType(MyBase.Clone,ReportTestDetailsDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ReportTestDetailsDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnTestTypeTestID = MyBase.Columns("TestTypeTestID")
            Me.columnSampleClass = MyBase.Columns("SampleClass")
            Me.columnName = MyBase.Columns("Name")
            Me.columnSampleType = MyBase.Columns("SampleType")
            Me.columnReplicateNumber = MyBase.Columns("ReplicateNumber")
            Me.columnABSValue = MyBase.Columns("ABSValue")
            Me.columnCONC_Value = MyBase.Columns("CONC_Value")
            Me.columnMeasureUnit = MyBase.Columns("MeasureUnit")
            Me.columnCalibratorFactor = MyBase.Columns("CalibratorFactor")
            Me.columnResultDate = MyBase.Columns("ResultDate")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnTestTypeTestID = New Global.System.Data.DataColumn("TestTypeTestID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTestTypeTestID)
            Me.columnSampleClass = New Global.System.Data.DataColumn("SampleClass", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSampleClass)
            Me.columnName = New Global.System.Data.DataColumn("Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnName)
            Me.columnSampleType = New Global.System.Data.DataColumn("SampleType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSampleType)
            Me.columnReplicateNumber = New Global.System.Data.DataColumn("ReplicateNumber", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReplicateNumber)
            Me.columnABSValue = New Global.System.Data.DataColumn("ABSValue", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnABSValue)
            Me.columnCONC_Value = New Global.System.Data.DataColumn("CONC_Value", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONC_Value)
            Me.columnMeasureUnit = New Global.System.Data.DataColumn("MeasureUnit", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMeasureUnit)
            Me.columnCalibratorFactor = New Global.System.Data.DataColumn("CalibratorFactor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCalibratorFactor)
            Me.columnResultDate = New Global.System.Data.DataColumn("ResultDate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnResultDate)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewReportTestDetailsRow() As ReportTestDetailsRow
            Return CType(Me.NewRow,ReportTestDetailsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ReportTestDetailsRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ReportTestDetailsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ReportTestDetailsRowChangedEvent) Is Nothing) Then
                RaiseEvent ReportTestDetailsRowChanged(Me, New ReportTestDetailsRowChangeEvent(CType(e.Row,ReportTestDetailsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ReportTestDetailsRowChangingEvent) Is Nothing) Then
                RaiseEvent ReportTestDetailsRowChanging(Me, New ReportTestDetailsRowChangeEvent(CType(e.Row,ReportTestDetailsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ReportTestDetailsRowDeletedEvent) Is Nothing) Then
                RaiseEvent ReportTestDetailsRowDeleted(Me, New ReportTestDetailsRowChangeEvent(CType(e.Row,ReportTestDetailsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ReportTestDetailsRowDeletingEvent) Is Nothing) Then
                RaiseEvent ReportTestDetailsRowDeleting(Me, New ReportTestDetailsRowChangeEvent(CType(e.Row,ReportTestDetailsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveReportTestDetailsRow(ByVal row As ReportTestDetailsRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ResultsDS = New ResultsDS()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ReportTestDetailsDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ReportCalibCurveDataTable
        Inherits Global.System.Data.TypedTableBase(Of ReportCalibCurveRow)
        
        Private columnCurveResultsID As Global.System.Data.DataColumn
        
        Private columnSampleType As Global.System.Data.DataColumn
        
        Private columnCurveGrowthType As Global.System.Data.DataColumn
        
        Private columnCurveType As Global.System.Data.DataColumn
        
        Private columnCurveAxisXType As Global.System.Data.DataColumn
        
        Private columnCurveAxisYType As Global.System.Data.DataColumn
        
        Private columnCalibrationError As Global.System.Data.DataColumn
        
        Private columnMeasureUnit As Global.System.Data.DataColumn
        
        Private columnMultiPointNumber As Global.System.Data.DataColumn
        
        Private columnABSValue As Global.System.Data.DataColumn
        
        Private columnCONC_Value As Global.System.Data.DataColumn
        
        Private columnTheoricalConcentration As Global.System.Data.DataColumn
        
        Private columnRelativeErrorCurve As Global.System.Data.DataColumn
        
        Private columnCurveSlope As Global.System.Data.DataColumn
        
        Private columnCurveOffset As Global.System.Data.DataColumn
        
        Private columnCurveCorrelation As Global.System.Data.DataColumn
        
        Private columnCalibratorBlankAbsUsed As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ReportCalibCurve"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CurveResultsIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCurveResultsID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SampleTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSampleType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CurveGrowthTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCurveGrowthType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CurveTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCurveType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CurveAxisXTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCurveAxisXType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CurveAxisYTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCurveAxisYType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CalibrationErrorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCalibrationError
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MeasureUnitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMeasureUnit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MultiPointNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMultiPointNumber
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ABSValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnABSValue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CONC_ValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONC_Value
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TheoricalConcentrationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTheoricalConcentration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RelativeErrorCurveColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRelativeErrorCurve
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CurveSlopeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCurveSlope
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CurveOffsetColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCurveOffset
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CurveCorrelationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCurveCorrelation
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CalibratorBlankAbsUsedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCalibratorBlankAbsUsed
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ReportCalibCurveRow
            Get
                Return CType(Me.Rows(index),ReportCalibCurveRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ReportCalibCurveRowChanging As ReportCalibCurveRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ReportCalibCurveRowChanged As ReportCalibCurveRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ReportCalibCurveRowDeleting As ReportCalibCurveRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ReportCalibCurveRowDeleted As ReportCalibCurveRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddReportCalibCurveRow(ByVal row As ReportCalibCurveRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddReportCalibCurveRow( _
                    ByVal CurveResultsID As Integer,  _
                    ByVal SampleType As String,  _
                    ByVal CurveGrowthType As String,  _
                    ByVal CurveType As String,  _
                    ByVal CurveAxisXType As String,  _
                    ByVal CurveAxisYType As String,  _
                    ByVal CalibrationError As String,  _
                    ByVal MeasureUnit As String,  _
                    ByVal MultiPointNumber As String,  _
                    ByVal ABSValue As String,  _
                    ByVal CONC_Value As String,  _
                    ByVal TheoricalConcentration As String,  _
                    ByVal RelativeErrorCurve As String,  _
                    ByVal CurveSlope As Single,  _
                    ByVal CurveOffset As Single,  _
                    ByVal CurveCorrelation As Single,  _
                    ByVal CalibratorBlankAbsUsed As Single) As ReportCalibCurveRow
            Dim rowReportCalibCurveRow As ReportCalibCurveRow = CType(Me.NewRow,ReportCalibCurveRow)
            Dim columnValuesArray() As Object = New Object() {CurveResultsID, SampleType, CurveGrowthType, CurveType, CurveAxisXType, CurveAxisYType, CalibrationError, MeasureUnit, MultiPointNumber, ABSValue, CONC_Value, TheoricalConcentration, RelativeErrorCurve, CurveSlope, CurveOffset, CurveCorrelation, CalibratorBlankAbsUsed}
            rowReportCalibCurveRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowReportCalibCurveRow)
            Return rowReportCalibCurveRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ReportCalibCurveDataTable = CType(MyBase.Clone,ReportCalibCurveDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ReportCalibCurveDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCurveResultsID = MyBase.Columns("CurveResultsID")
            Me.columnSampleType = MyBase.Columns("SampleType")
            Me.columnCurveGrowthType = MyBase.Columns("CurveGrowthType")
            Me.columnCurveType = MyBase.Columns("CurveType")
            Me.columnCurveAxisXType = MyBase.Columns("CurveAxisXType")
            Me.columnCurveAxisYType = MyBase.Columns("CurveAxisYType")
            Me.columnCalibrationError = MyBase.Columns("CalibrationError")
            Me.columnMeasureUnit = MyBase.Columns("MeasureUnit")
            Me.columnMultiPointNumber = MyBase.Columns("MultiPointNumber")
            Me.columnABSValue = MyBase.Columns("ABSValue")
            Me.columnCONC_Value = MyBase.Columns("CONC_Value")
            Me.columnTheoricalConcentration = MyBase.Columns("TheoricalConcentration")
            Me.columnRelativeErrorCurve = MyBase.Columns("RelativeErrorCurve")
            Me.columnCurveSlope = MyBase.Columns("CurveSlope")
            Me.columnCurveOffset = MyBase.Columns("CurveOffset")
            Me.columnCurveCorrelation = MyBase.Columns("CurveCorrelation")
            Me.columnCalibratorBlankAbsUsed = MyBase.Columns("CalibratorBlankAbsUsed")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCurveResultsID = New Global.System.Data.DataColumn("CurveResultsID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCurveResultsID)
            Me.columnSampleType = New Global.System.Data.DataColumn("SampleType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSampleType)
            Me.columnCurveGrowthType = New Global.System.Data.DataColumn("CurveGrowthType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCurveGrowthType)
            Me.columnCurveType = New Global.System.Data.DataColumn("CurveType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCurveType)
            Me.columnCurveAxisXType = New Global.System.Data.DataColumn("CurveAxisXType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCurveAxisXType)
            Me.columnCurveAxisYType = New Global.System.Data.DataColumn("CurveAxisYType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCurveAxisYType)
            Me.columnCalibrationError = New Global.System.Data.DataColumn("CalibrationError", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCalibrationError)
            Me.columnMeasureUnit = New Global.System.Data.DataColumn("MeasureUnit", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMeasureUnit)
            Me.columnMultiPointNumber = New Global.System.Data.DataColumn("MultiPointNumber", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMultiPointNumber)
            Me.columnABSValue = New Global.System.Data.DataColumn("ABSValue", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnABSValue)
            Me.columnCONC_Value = New Global.System.Data.DataColumn("CONC_Value", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONC_Value)
            Me.columnTheoricalConcentration = New Global.System.Data.DataColumn("TheoricalConcentration", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTheoricalConcentration)
            Me.columnRelativeErrorCurve = New Global.System.Data.DataColumn("RelativeErrorCurve", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRelativeErrorCurve)
            Me.columnCurveSlope = New Global.System.Data.DataColumn("CurveSlope", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCurveSlope)
            Me.columnCurveOffset = New Global.System.Data.DataColumn("CurveOffset", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCurveOffset)
            Me.columnCurveCorrelation = New Global.System.Data.DataColumn("CurveCorrelation", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCurveCorrelation)
            Me.columnCalibratorBlankAbsUsed = New Global.System.Data.DataColumn("CalibratorBlankAbsUsed", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCalibratorBlankAbsUsed)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewReportCalibCurveRow() As ReportCalibCurveRow
            Return CType(Me.NewRow,ReportCalibCurveRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ReportCalibCurveRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ReportCalibCurveRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ReportCalibCurveRowChangedEvent) Is Nothing) Then
                RaiseEvent ReportCalibCurveRowChanged(Me, New ReportCalibCurveRowChangeEvent(CType(e.Row,ReportCalibCurveRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ReportCalibCurveRowChangingEvent) Is Nothing) Then
                RaiseEvent ReportCalibCurveRowChanging(Me, New ReportCalibCurveRowChangeEvent(CType(e.Row,ReportCalibCurveRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ReportCalibCurveRowDeletedEvent) Is Nothing) Then
                RaiseEvent ReportCalibCurveRowDeleted(Me, New ReportCalibCurveRowChangeEvent(CType(e.Row,ReportCalibCurveRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ReportCalibCurveRowDeletingEvent) Is Nothing) Then
                RaiseEvent ReportCalibCurveRowDeleting(Me, New ReportCalibCurveRowChangeEvent(CType(e.Row,ReportCalibCurveRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveReportCalibCurveRow(ByVal row As ReportCalibCurveRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As ResultsDS = New ResultsDS()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ReportCalibCurveDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class twksResultsRow
        Inherits Global.System.Data.DataRow
        
        Private tabletwksResults As twksResultsDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletwksResults = CType(Me.Table,twksResultsDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OrderTestID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletwksResults.OrderTestIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OrderTestID' in table 'twksResults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletwksResults.OrderTestIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RerunNumber() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletwksResults.RerunNumberColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RerunNumber' in table 'twksResults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletwksResults.RerunNumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MultiPointNumber() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletwksResults.MultiPointNumberColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MultiPointNumber' in table 'twksResults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletwksResults.MultiPointNumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ValidationStatus() As String
            Get
                If Me.IsValidationStatusNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tabletwksResults.ValidationStatusColumn),String)
                End If
            End Get
            Set
                Me(Me.tabletwksResults.ValidationStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AcceptedResultFlag() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletwksResults.AcceptedResultFlagColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AcceptedResultFlag' in table 'twksResults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletwksResults.AcceptedResultFlagColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TestVersion() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletwksResults.TestVersionColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TestVersion' in table 'twksResults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletwksResults.TestVersionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ManualResultFlag() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletwksResults.ManualResultFlagColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ManualResultFlag' in table 'twksResults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletwksResults.ManualResultFlagColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UserComment() As String
            Get
                If Me.IsUserCommentNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tabletwksResults.UserCommentColumn),String)
                End If
            End Get
            Set
                Me(Me.tabletwksResults.UserCommentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ExportStatus() As String
            Get
                If Me.IsExportStatusNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tabletwksResults.ExportStatusColumn),String)
                End If
            End Get
            Set
                Me(Me.tabletwksResults.ExportStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ExportDateTime() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletwksResults.ExportDateTimeColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ExportDateTime' in table 'twksResults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletwksResults.ExportDateTimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Printed() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletwksResults.PrintedColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Printed' in table 'twksResults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletwksResults.PrintedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ABSValue() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletwksResults.ABSValueColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ABSValue' in table 'twksResults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletwksResults.ABSValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ABS_Error() As String
            Get
                If Me.IsABS_ErrorNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tabletwksResults.ABS_ErrorColumn),String)
                End If
            End Get
            Set
                Me(Me.tabletwksResults.ABS_ErrorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SubstrateDepletion() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletwksResults.SubstrateDepletionColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SubstrateDepletion' in table 'twksResults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletwksResults.SubstrateDepletionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ABS_Initial() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletwksResults.ABS_InitialColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ABS_Initial' in table 'twksResults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletwksResults.ABS_InitialColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ABS_MainFilter() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletwksResults.ABS_MainFilterColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ABS_MainFilter' in table 'twksResults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletwksResults.ABS_MainFilterColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CalibratorFactor() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletwksResults.CalibratorFactorColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CalibratorFactor' in table 'twksResults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletwksResults.CalibratorFactorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CalibrationError() As String
            Get
                If Me.IsCalibrationErrorNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tabletwksResults.CalibrationErrorColumn),String)
                End If
            End Get
            Set
                Me(Me.tabletwksResults.CalibrationErrorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CalibratorBlankAbsUsed() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletwksResults.CalibratorBlankAbsUsedColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CalibratorBlankAbsUsed' in table 'twksResults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletwksResults.CalibratorBlankAbsUsedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CurveResultsID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletwksResults.CurveResultsIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CurveResultsID' in table 'twksResults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletwksResults.CurveResultsIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CurveGrowthType() As String
            Get
                If Me.IsCurveGrowthTypeNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tabletwksResults.CurveGrowthTypeColumn),String)
                End If
            End Get
            Set
                Me(Me.tabletwksResults.CurveGrowthTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CurveType() As String
            Get
                If Me.IsCurveTypeNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tabletwksResults.CurveTypeColumn),String)
                End If
            End Get
            Set
                Me(Me.tabletwksResults.CurveTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CurveAxisXType() As String
            Get
                If Me.IsCurveAxisXTypeNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tabletwksResults.CurveAxisXTypeColumn),String)
                End If
            End Get
            Set
                Me(Me.tabletwksResults.CurveAxisXTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CurveAxisYType() As String
            Get
                If Me.IsCurveAxisYTypeNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tabletwksResults.CurveAxisYTypeColumn),String)
                End If
            End Get
            Set
                Me(Me.tabletwksResults.CurveAxisYTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RelativeErrorCurve() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletwksResults.RelativeErrorCurveColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RelativeErrorCurve' in table 'twksResults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletwksResults.RelativeErrorCurveColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CONC_Value() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletwksResults.CONC_ValueColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CONC_Value' in table 'twksResults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletwksResults.CONC_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CONC_Error() As String
            Get
                If Me.IsCONC_ErrorNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tabletwksResults.CONC_ErrorColumn),String)
                End If
            End Get
            Set
                Me(Me.tabletwksResults.CONC_ErrorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ResultDateTime() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletwksResults.ResultDateTimeColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ResultDateTime' in table 'twksResults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletwksResults.ResultDateTimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TS_User() As String
            Get
                If Me.IsTS_UserNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tabletwksResults.TS_UserColumn),String)
                End If
            End Get
            Set
                Me(Me.tabletwksResults.TS_UserColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TS_DateTime() As Date
            Get
                Try 
                    Return CType(Me(Me.tabletwksResults.TS_DateTimeColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TS_DateTime' in table 'twksResults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletwksResults.TS_DateTimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Abs_WorkReagent() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletwksResults.Abs_WorkReagentColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Abs_WorkReagent' in table 'twksResults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletwksResults.Abs_WorkReagentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Collapsed() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletwksResults.CollapsedColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Collapsed' in table 'twksResults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletwksResults.CollapsedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ManualResult() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletwksResults.ManualResultColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ManualResult' in table 'twksResults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletwksResults.ManualResultColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ManualResultText() As String
            Get
                If Me.IsManualResultTextNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tabletwksResults.ManualResultTextColumn),String)
                End If
            End Get
            Set
                Me(Me.tabletwksResults.ManualResultTextColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CurveSlope() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletwksResults.CurveSlopeColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CurveSlope' in table 'twksResults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletwksResults.CurveSlopeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CurveOffset() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletwksResults.CurveOffsetColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CurveOffset' in table 'twksResults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletwksResults.CurveOffsetColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CurveCorrelation() As Single
            Get
                Try 
                    Return CType(Me(Me.tabletwksResults.CurveCorrelationColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CurveCorrelation' in table 'twksResults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletwksResults.CurveCorrelationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TestID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletwksResults.TestIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TestID' in table 'twksResults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletwksResults.TestIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SampleType() As String
            Get
                Try 
                    Return CType(Me(Me.tabletwksResults.SampleTypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SampleType' in table 'twksResults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletwksResults.SampleTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SampleClass() As String
            Get
                If Me.IsSampleClassNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tabletwksResults.SampleClassColumn),String)
                End If
            End Get
            Set
                Me(Me.tabletwksResults.SampleClassColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CalibratorID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletwksResults.CalibratorIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CalibratorID' in table 'twksResults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletwksResults.CalibratorIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NumberOfCalibrators() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletwksResults.NumberOfCalibratorsColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NumberOfCalibrators' in table 'twksResults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletwksResults.NumberOfCalibratorsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TestType() As String
            Get
                Try 
                    Return CType(Me(Me.tabletwksResults.TestTypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TestType' in table 'twksResults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletwksResults.TestTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TestName() As String
            Get
                Try 
                    Return CType(Me(Me.tabletwksResults.TestNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TestName' in table 'twksResults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletwksResults.TestNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MeasureUnit() As String
            Get
                Try 
                    Return CType(Me(Me.tabletwksResults.MeasureUnitColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MeasureUnit' in table 'twksResults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletwksResults.MeasureUnitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property StatFlag() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tabletwksResults.StatFlagColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'StatFlag' in table 'twksResults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletwksResults.StatFlagColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TubeType() As String
            Get
                Try 
                    Return CType(Me(Me.tabletwksResults.TubeTypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TubeType' in table 'twksResults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletwksResults.TubeTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PatientID() As String
            Get
                Try 
                    Return CType(Me(Me.tabletwksResults.PatientIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PatientID' in table 'twksResults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletwksResults.PatientIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SampleID() As String
            Get
                Try 
                    Return CType(Me(Me.tabletwksResults.SampleIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SampleID' in table 'twksResults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletwksResults.SampleIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WorkSessionID() As String
            Get
                If Me.IsWorkSessionIDNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tabletwksResults.WorkSessionIDColumn),String)
                End If
            End Get
            Set
                Me(Me.tabletwksResults.WorkSessionIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AnalyzerID() As String
            Get
                If Me.IsAnalyzerIDNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tabletwksResults.AnalyzerIDColumn),String)
                End If
            End Get
            Set
                Me(Me.tabletwksResults.AnalyzerIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CtrlsSendingGroup() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabletwksResults.CtrlsSendingGroupColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CtrlsSendingGroup' in table 'twksResults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabletwksResults.CtrlsSendingGroupColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LISMessageID() As String
            Get
                If Me.IsLISMessageIDNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tabletwksResults.LISMessageIDColumn),String)
                End If
            End Get
            Set
                Me(Me.tabletwksResults.LISMessageIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOrderTestIDNull() As Boolean
            Return Me.IsNull(Me.tabletwksResults.OrderTestIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOrderTestIDNull()
            Me(Me.tabletwksResults.OrderTestIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRerunNumberNull() As Boolean
            Return Me.IsNull(Me.tabletwksResults.RerunNumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRerunNumberNull()
            Me(Me.tabletwksResults.RerunNumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMultiPointNumberNull() As Boolean
            Return Me.IsNull(Me.tabletwksResults.MultiPointNumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMultiPointNumberNull()
            Me(Me.tabletwksResults.MultiPointNumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsValidationStatusNull() As Boolean
            Return Me.IsNull(Me.tabletwksResults.ValidationStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetValidationStatusNull()
            Me(Me.tabletwksResults.ValidationStatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAcceptedResultFlagNull() As Boolean
            Return Me.IsNull(Me.tabletwksResults.AcceptedResultFlagColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAcceptedResultFlagNull()
            Me(Me.tabletwksResults.AcceptedResultFlagColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTestVersionNull() As Boolean
            Return Me.IsNull(Me.tabletwksResults.TestVersionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTestVersionNull()
            Me(Me.tabletwksResults.TestVersionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsManualResultFlagNull() As Boolean
            Return Me.IsNull(Me.tabletwksResults.ManualResultFlagColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetManualResultFlagNull()
            Me(Me.tabletwksResults.ManualResultFlagColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUserCommentNull() As Boolean
            Return Me.IsNull(Me.tabletwksResults.UserCommentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUserCommentNull()
            Me(Me.tabletwksResults.UserCommentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsExportStatusNull() As Boolean
            Return Me.IsNull(Me.tabletwksResults.ExportStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetExportStatusNull()
            Me(Me.tabletwksResults.ExportStatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsExportDateTimeNull() As Boolean
            Return Me.IsNull(Me.tabletwksResults.ExportDateTimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetExportDateTimeNull()
            Me(Me.tabletwksResults.ExportDateTimeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPrintedNull() As Boolean
            Return Me.IsNull(Me.tabletwksResults.PrintedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPrintedNull()
            Me(Me.tabletwksResults.PrintedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsABSValueNull() As Boolean
            Return Me.IsNull(Me.tabletwksResults.ABSValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetABSValueNull()
            Me(Me.tabletwksResults.ABSValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsABS_ErrorNull() As Boolean
            Return Me.IsNull(Me.tabletwksResults.ABS_ErrorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetABS_ErrorNull()
            Me(Me.tabletwksResults.ABS_ErrorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSubstrateDepletionNull() As Boolean
            Return Me.IsNull(Me.tabletwksResults.SubstrateDepletionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSubstrateDepletionNull()
            Me(Me.tabletwksResults.SubstrateDepletionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsABS_InitialNull() As Boolean
            Return Me.IsNull(Me.tabletwksResults.ABS_InitialColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetABS_InitialNull()
            Me(Me.tabletwksResults.ABS_InitialColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsABS_MainFilterNull() As Boolean
            Return Me.IsNull(Me.tabletwksResults.ABS_MainFilterColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetABS_MainFilterNull()
            Me(Me.tabletwksResults.ABS_MainFilterColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCalibratorFactorNull() As Boolean
            Return Me.IsNull(Me.tabletwksResults.CalibratorFactorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCalibratorFactorNull()
            Me(Me.tabletwksResults.CalibratorFactorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCalibrationErrorNull() As Boolean
            Return Me.IsNull(Me.tabletwksResults.CalibrationErrorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCalibrationErrorNull()
            Me(Me.tabletwksResults.CalibrationErrorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCalibratorBlankAbsUsedNull() As Boolean
            Return Me.IsNull(Me.tabletwksResults.CalibratorBlankAbsUsedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCalibratorBlankAbsUsedNull()
            Me(Me.tabletwksResults.CalibratorBlankAbsUsedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCurveResultsIDNull() As Boolean
            Return Me.IsNull(Me.tabletwksResults.CurveResultsIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCurveResultsIDNull()
            Me(Me.tabletwksResults.CurveResultsIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCurveGrowthTypeNull() As Boolean
            Return Me.IsNull(Me.tabletwksResults.CurveGrowthTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCurveGrowthTypeNull()
            Me(Me.tabletwksResults.CurveGrowthTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCurveTypeNull() As Boolean
            Return Me.IsNull(Me.tabletwksResults.CurveTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCurveTypeNull()
            Me(Me.tabletwksResults.CurveTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCurveAxisXTypeNull() As Boolean
            Return Me.IsNull(Me.tabletwksResults.CurveAxisXTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCurveAxisXTypeNull()
            Me(Me.tabletwksResults.CurveAxisXTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCurveAxisYTypeNull() As Boolean
            Return Me.IsNull(Me.tabletwksResults.CurveAxisYTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCurveAxisYTypeNull()
            Me(Me.tabletwksResults.CurveAxisYTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRelativeErrorCurveNull() As Boolean
            Return Me.IsNull(Me.tabletwksResults.RelativeErrorCurveColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRelativeErrorCurveNull()
            Me(Me.tabletwksResults.RelativeErrorCurveColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCONC_ValueNull() As Boolean
            Return Me.IsNull(Me.tabletwksResults.CONC_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCONC_ValueNull()
            Me(Me.tabletwksResults.CONC_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCONC_ErrorNull() As Boolean
            Return Me.IsNull(Me.tabletwksResults.CONC_ErrorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCONC_ErrorNull()
            Me(Me.tabletwksResults.CONC_ErrorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsResultDateTimeNull() As Boolean
            Return Me.IsNull(Me.tabletwksResults.ResultDateTimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetResultDateTimeNull()
            Me(Me.tabletwksResults.ResultDateTimeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTS_UserNull() As Boolean
            Return Me.IsNull(Me.tabletwksResults.TS_UserColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTS_UserNull()
            Me(Me.tabletwksResults.TS_UserColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTS_DateTimeNull() As Boolean
            Return Me.IsNull(Me.tabletwksResults.TS_DateTimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTS_DateTimeNull()
            Me(Me.tabletwksResults.TS_DateTimeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAbs_WorkReagentNull() As Boolean
            Return Me.IsNull(Me.tabletwksResults.Abs_WorkReagentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAbs_WorkReagentNull()
            Me(Me.tabletwksResults.Abs_WorkReagentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCollapsedNull() As Boolean
            Return Me.IsNull(Me.tabletwksResults.CollapsedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCollapsedNull()
            Me(Me.tabletwksResults.CollapsedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsManualResultNull() As Boolean
            Return Me.IsNull(Me.tabletwksResults.ManualResultColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetManualResultNull()
            Me(Me.tabletwksResults.ManualResultColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsManualResultTextNull() As Boolean
            Return Me.IsNull(Me.tabletwksResults.ManualResultTextColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetManualResultTextNull()
            Me(Me.tabletwksResults.ManualResultTextColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCurveSlopeNull() As Boolean
            Return Me.IsNull(Me.tabletwksResults.CurveSlopeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCurveSlopeNull()
            Me(Me.tabletwksResults.CurveSlopeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCurveOffsetNull() As Boolean
            Return Me.IsNull(Me.tabletwksResults.CurveOffsetColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCurveOffsetNull()
            Me(Me.tabletwksResults.CurveOffsetColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCurveCorrelationNull() As Boolean
            Return Me.IsNull(Me.tabletwksResults.CurveCorrelationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCurveCorrelationNull()
            Me(Me.tabletwksResults.CurveCorrelationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTestIDNull() As Boolean
            Return Me.IsNull(Me.tabletwksResults.TestIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTestIDNull()
            Me(Me.tabletwksResults.TestIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSampleTypeNull() As Boolean
            Return Me.IsNull(Me.tabletwksResults.SampleTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSampleTypeNull()
            Me(Me.tabletwksResults.SampleTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSampleClassNull() As Boolean
            Return Me.IsNull(Me.tabletwksResults.SampleClassColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSampleClassNull()
            Me(Me.tabletwksResults.SampleClassColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCalibratorIDNull() As Boolean
            Return Me.IsNull(Me.tabletwksResults.CalibratorIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCalibratorIDNull()
            Me(Me.tabletwksResults.CalibratorIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNumberOfCalibratorsNull() As Boolean
            Return Me.IsNull(Me.tabletwksResults.NumberOfCalibratorsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNumberOfCalibratorsNull()
            Me(Me.tabletwksResults.NumberOfCalibratorsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTestTypeNull() As Boolean
            Return Me.IsNull(Me.tabletwksResults.TestTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTestTypeNull()
            Me(Me.tabletwksResults.TestTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTestNameNull() As Boolean
            Return Me.IsNull(Me.tabletwksResults.TestNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTestNameNull()
            Me(Me.tabletwksResults.TestNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMeasureUnitNull() As Boolean
            Return Me.IsNull(Me.tabletwksResults.MeasureUnitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMeasureUnitNull()
            Me(Me.tabletwksResults.MeasureUnitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsStatFlagNull() As Boolean
            Return Me.IsNull(Me.tabletwksResults.StatFlagColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetStatFlagNull()
            Me(Me.tabletwksResults.StatFlagColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTubeTypeNull() As Boolean
            Return Me.IsNull(Me.tabletwksResults.TubeTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTubeTypeNull()
            Me(Me.tabletwksResults.TubeTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPatientIDNull() As Boolean
            Return Me.IsNull(Me.tabletwksResults.PatientIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPatientIDNull()
            Me(Me.tabletwksResults.PatientIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSampleIDNull() As Boolean
            Return Me.IsNull(Me.tabletwksResults.SampleIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSampleIDNull()
            Me(Me.tabletwksResults.SampleIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWorkSessionIDNull() As Boolean
            Return Me.IsNull(Me.tabletwksResults.WorkSessionIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWorkSessionIDNull()
            Me(Me.tabletwksResults.WorkSessionIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAnalyzerIDNull() As Boolean
            Return Me.IsNull(Me.tabletwksResults.AnalyzerIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAnalyzerIDNull()
            Me(Me.tabletwksResults.AnalyzerIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCtrlsSendingGroupNull() As Boolean
            Return Me.IsNull(Me.tabletwksResults.CtrlsSendingGroupColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCtrlsSendingGroupNull()
            Me(Me.tabletwksResults.CtrlsSendingGroupColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLISMessageIDNull() As Boolean
            Return Me.IsNull(Me.tabletwksResults.LISMessageIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLISMessageIDNull()
            Me(Me.tabletwksResults.LISMessageIDColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class vwksResultsRow
        Inherits Global.System.Data.DataRow
        
        Private tablevwksResults As vwksResultsDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablevwksResults = CType(Me.Table,vwksResultsDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OrderTestID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablevwksResults.OrderTestIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OrderTestID' in table 'vwksResults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwksResults.OrderTestIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RerunNumber() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablevwksResults.RerunNumberColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RerunNumber' in table 'vwksResults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwksResults.RerunNumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MultiPointNumber() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablevwksResults.MultiPointNumberColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MultiPointNumber' in table 'vwksResults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwksResults.MultiPointNumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ValidationStatus() As String
            Get
                If Me.IsValidationStatusNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablevwksResults.ValidationStatusColumn),String)
                End If
            End Get
            Set
                Me(Me.tablevwksResults.ValidationStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AcceptedResultFlag() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablevwksResults.AcceptedResultFlagColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AcceptedResultFlag' in table 'vwksResults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwksResults.AcceptedResultFlagColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TestVersion() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablevwksResults.TestVersionColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TestVersion' in table 'vwksResults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwksResults.TestVersionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ManualResultFlag() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablevwksResults.ManualResultFlagColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ManualResultFlag' in table 'vwksResults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwksResults.ManualResultFlagColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UserComment() As String
            Get
                If Me.IsUserCommentNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablevwksResults.UserCommentColumn),String)
                End If
            End Get
            Set
                Me(Me.tablevwksResults.UserCommentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ExportStatus() As String
            Get
                If Me.IsExportStatusNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablevwksResults.ExportStatusColumn),String)
                End If
            End Get
            Set
                Me(Me.tablevwksResults.ExportStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ExportDateTime() As Date
            Get
                Try 
                    Return CType(Me(Me.tablevwksResults.ExportDateTimeColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ExportDateTime' in table 'vwksResults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwksResults.ExportDateTimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Printed() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablevwksResults.PrintedColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Printed' in table 'vwksResults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwksResults.PrintedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ABSValue() As Single
            Get
                Try 
                    Return CType(Me(Me.tablevwksResults.ABSValueColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ABSValue' in table 'vwksResults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwksResults.ABSValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ABS_Error() As String
            Get
                If Me.IsABS_ErrorNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablevwksResults.ABS_ErrorColumn),String)
                End If
            End Get
            Set
                Me(Me.tablevwksResults.ABS_ErrorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SubstrateDepletion() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablevwksResults.SubstrateDepletionColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SubstrateDepletion' in table 'vwksResults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwksResults.SubstrateDepletionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ABS_Initial() As Single
            Get
                Try 
                    Return CType(Me(Me.tablevwksResults.ABS_InitialColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ABS_Initial' in table 'vwksResults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwksResults.ABS_InitialColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ABS_MainFilter() As Single
            Get
                Try 
                    Return CType(Me(Me.tablevwksResults.ABS_MainFilterColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ABS_MainFilter' in table 'vwksResults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwksResults.ABS_MainFilterColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CalibratorFactor() As Single
            Get
                Try 
                    Return CType(Me(Me.tablevwksResults.CalibratorFactorColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CalibratorFactor' in table 'vwksResults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwksResults.CalibratorFactorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CalibrationError() As String
            Get
                If Me.IsCalibrationErrorNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablevwksResults.CalibrationErrorColumn),String)
                End If
            End Get
            Set
                Me(Me.tablevwksResults.CalibrationErrorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CalibratorBlankAbsUsed() As Single
            Get
                Try 
                    Return CType(Me(Me.tablevwksResults.CalibratorBlankAbsUsedColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CalibratorBlankAbsUsed' in table 'vwksResults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwksResults.CalibratorBlankAbsUsedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CurveResultsID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablevwksResults.CurveResultsIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CurveResultsID' in table 'vwksResults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwksResults.CurveResultsIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CurveGrowthType() As String
            Get
                If Me.IsCurveGrowthTypeNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablevwksResults.CurveGrowthTypeColumn),String)
                End If
            End Get
            Set
                Me(Me.tablevwksResults.CurveGrowthTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CurveType() As String
            Get
                If Me.IsCurveTypeNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablevwksResults.CurveTypeColumn),String)
                End If
            End Get
            Set
                Me(Me.tablevwksResults.CurveTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CurveAxisXType() As String
            Get
                If Me.IsCurveAxisXTypeNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablevwksResults.CurveAxisXTypeColumn),String)
                End If
            End Get
            Set
                Me(Me.tablevwksResults.CurveAxisXTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CurveAxisYType() As String
            Get
                If Me.IsCurveAxisYTypeNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablevwksResults.CurveAxisYTypeColumn),String)
                End If
            End Get
            Set
                Me(Me.tablevwksResults.CurveAxisYTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RelativeErrorCurve() As Single
            Get
                Try 
                    Return CType(Me(Me.tablevwksResults.RelativeErrorCurveColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RelativeErrorCurve' in table 'vwksResults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwksResults.RelativeErrorCurveColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CONC_Value() As Single
            Get
                Try 
                    Return CType(Me(Me.tablevwksResults.CONC_ValueColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CONC_Value' in table 'vwksResults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwksResults.CONC_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CONC_Error() As String
            Get
                If Me.IsCONC_ErrorNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablevwksResults.CONC_ErrorColumn),String)
                End If
            End Get
            Set
                Me(Me.tablevwksResults.CONC_ErrorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ResultDateTime() As Date
            Get
                Try 
                    Return CType(Me(Me.tablevwksResults.ResultDateTimeColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ResultDateTime' in table 'vwksResults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwksResults.ResultDateTimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TS_User() As String
            Get
                If Me.IsTS_UserNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablevwksResults.TS_UserColumn),String)
                End If
            End Get
            Set
                Me(Me.tablevwksResults.TS_UserColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TS_DateTime() As Date
            Get
                Try 
                    Return CType(Me(Me.tablevwksResults.TS_DateTimeColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TS_DateTime' in table 'vwksResults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwksResults.TS_DateTimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Abs_WorkReagent() As Single
            Get
                Try 
                    Return CType(Me(Me.tablevwksResults.Abs_WorkReagentColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Abs_WorkReagent' in table 'vwksResults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwksResults.Abs_WorkReagentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BlankAbsorbanceLimit() As Single
            Get
                Try 
                    Return CType(Me(Me.tablevwksResults.BlankAbsorbanceLimitColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BlankAbsorbanceLimit' in table 'vwksResults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwksResults.BlankAbsorbanceLimitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property KineticBlankLimit() As Single
            Get
                Try 
                    Return CType(Me(Me.tablevwksResults.KineticBlankLimitColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KineticBlankLimit' in table 'vwksResults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwksResults.KineticBlankLimitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CalibratorLotNumber() As String
            Get
                If Me.IsCalibratorLotNumberNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablevwksResults.CalibratorLotNumberColumn),String)
                End If
            End Get
            Set
                Me(Me.tablevwksResults.CalibratorLotNumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SampleType() As String
            Get
                If Me.IsSampleTypeNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablevwksResults.SampleTypeColumn),String)
                End If
            End Get
            Set
                Me(Me.tablevwksResults.SampleTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TheoricalConcentration() As Single
            Get
                Try 
                    Return CType(Me(Me.tablevwksResults.TheoricalConcentrationColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TheoricalConcentration' in table 'vwksResults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwksResults.TheoricalConcentrationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MeasureUnit() As String
            Get
                If Me.IsMeasureUnitNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablevwksResults.MeasureUnitColumn),String)
                End If
            End Get
            Set
                Me(Me.tablevwksResults.MeasureUnitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FactorLowerLimit() As Single
            Get
                Try 
                    Return CType(Me(Me.tablevwksResults.FactorLowerLimitColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FactorLowerLimit' in table 'vwksResults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwksResults.FactorLowerLimitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FactorUpperLimit() As Single
            Get
                Try 
                    Return CType(Me(Me.tablevwksResults.FactorUpperLimitColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FactorUpperLimit' in table 'vwksResults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwksResults.FactorUpperLimitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DecimalsAllowed() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablevwksResults.DecimalsAllowedColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DecimalsAllowed' in table 'vwksResults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwksResults.DecimalsAllowedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ControlName() As String
            Get
                If Me.IsControlNameNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablevwksResults.ControlNameColumn),String)
                End If
            End Get
            Set
                Me(Me.tablevwksResults.ControlNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ControlLotNumber() As String
            Get
                If Me.IsControlLotNumberNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablevwksResults.ControlLotNumberColumn),String)
                End If
            End Get
            Set
                Me(Me.tablevwksResults.ControlLotNumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MinConcentration() As String
            Get
                If Me.IsMinConcentrationNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablevwksResults.MinConcentrationColumn),String)
                End If
            End Get
            Set
                Me(Me.tablevwksResults.MinConcentrationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MaxConcentration() As String
            Get
                If Me.IsMaxConcentrationNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablevwksResults.MaxConcentrationColumn),String)
                End If
            End Get
            Set
                Me(Me.tablevwksResults.MaxConcentrationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TestName() As String
            Get
                If Me.IsTestNameNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablevwksResults.TestNameColumn),String)
                End If
            End Get
            Set
                Me(Me.tablevwksResults.TestNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TestType() As String
            Get
                If Me.IsTestTypeNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablevwksResults.TestTypeColumn),String)
                End If
            End Get
            Set
                Me(Me.tablevwksResults.TestTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OrderTestStatus() As String
            Get
                If Me.IsOrderTestStatusNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablevwksResults.OrderTestStatusColumn),String)
                End If
            End Get
            Set
                Me(Me.tablevwksResults.OrderTestStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PostDilutionType() As String
            Get
                If Me.IsPostDilutionTypeNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablevwksResults.PostDilutionTypeColumn),String)
                End If
            End Get
            Set
                Me(Me.tablevwksResults.PostDilutionTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TestID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablevwksResults.TestIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TestID' in table 'vwksResults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwksResults.TestIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ActiveRangeType() As String
            Get
                Try 
                    Return CType(Me(Me.tablevwksResults.ActiveRangeTypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ActiveRangeType' in table 'vwksResults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwksResults.ActiveRangeTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NormalLowerLimit() As String
            Get
                If Me.IsNormalLowerLimitNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablevwksResults.NormalLowerLimitColumn),String)
                End If
            End Get
            Set
                Me(Me.tablevwksResults.NormalLowerLimitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NormalUpperLimit() As String
            Get
                If Me.IsNormalUpperLimitNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablevwksResults.NormalUpperLimitColumn),String)
                End If
            End Get
            Set
                Me(Me.tablevwksResults.NormalUpperLimitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OrderID() As String
            Get
                If Me.IsOrderIDNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablevwksResults.OrderIDColumn),String)
                End If
            End Get
            Set
                Me(Me.tablevwksResults.OrderIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Collapsed() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablevwksResults.CollapsedColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Collapsed' in table 'vwksResults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwksResults.CollapsedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PatientName() As String
            Get
                If Me.IsPatientNameNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablevwksResults.PatientNameColumn),String)
                End If
            End Get
            Set
                Me(Me.tablevwksResults.PatientNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ManualResult() As Single
            Get
                Try 
                    Return CType(Me(Me.tablevwksResults.ManualResultColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ManualResult' in table 'vwksResults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwksResults.ManualResultColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ManualResultText() As String
            Get
                If Me.IsManualResultTextNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablevwksResults.ManualResultTextColumn),String)
                End If
            End Get
            Set
                Me(Me.tablevwksResults.ManualResultTextColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property StatFlag() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablevwksResults.StatFlagColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'StatFlag' in table 'vwksResults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwksResults.StatFlagColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PatientID() As String
            Get
                If Me.IsPatientIDNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablevwksResults.PatientIDColumn),String)
                End If
            End Get
            Set
                Me(Me.tablevwksResults.PatientIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CalibratorName() As String
            Get
                Try 
                    Return CType(Me(Me.tablevwksResults.CalibratorNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CalibratorName' in table 'vwksResults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwksResults.CalibratorNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AnalysisMode() As String
            Get
                Try 
                    Return CType(Me(Me.tablevwksResults.AnalysisModeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AnalysisMode' in table 'vwksResults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwksResults.AnalysisModeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CurveSlope() As Single
            Get
                Try 
                    Return CType(Me(Me.tablevwksResults.CurveSlopeColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CurveSlope' in table 'vwksResults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwksResults.CurveSlopeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CurveOffset() As Single
            Get
                Try 
                    Return CType(Me(Me.tablevwksResults.CurveOffsetColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CurveOffset' in table 'vwksResults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwksResults.CurveOffsetColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CurveCorrelation() As Single
            Get
                Try 
                    Return CType(Me(Me.tablevwksResults.CurveCorrelationColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CurveCorrelation' in table 'vwksResults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwksResults.CurveCorrelationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property STDOrderTestID() As String
            Get
                If Me.IsSTDOrderTestIDNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablevwksResults.STDOrderTestIDColumn),String)
                End If
            End Get
            Set
                Me(Me.tablevwksResults.STDOrderTestIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SampleClass() As String
            Get
                If Me.IsSampleClassNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablevwksResults.SampleClassColumn),String)
                End If
            End Get
            Set
                Me(Me.tablevwksResults.SampleClassColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CalibratorID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablevwksResults.CalibratorIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CalibratorID' in table 'vwksResults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwksResults.CalibratorIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NumberOfCalibrators() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablevwksResults.NumberOfCalibratorsColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NumberOfCalibrators' in table 'vwksResults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwksResults.NumberOfCalibratorsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PanicLowerLimit() As String
            Get
                If Me.IsPanicLowerLimitNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablevwksResults.PanicLowerLimitColumn),String)
                End If
            End Get
            Set
                Me(Me.tablevwksResults.PanicLowerLimitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PanicUpperLimit() As String
            Get
                If Me.IsPanicUpperLimitNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablevwksResults.PanicUpperLimitColumn),String)
                End If
            End Get
            Set
                Me(Me.tablevwksResults.PanicUpperLimitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OrderDateTime() As Date
            Get
                Try 
                    Return CType(Me(Me.tablevwksResults.OrderDateTimeColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OrderDateTime' in table 'vwksResults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwksResults.OrderDateTimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SampleID() As String
            Get
                Try 
                    Return CType(Me(Me.tablevwksResults.SampleIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SampleID' in table 'vwksResults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwksResults.SampleIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WorkSessionID() As String
            Get
                If Me.IsWorkSessionIDNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablevwksResults.WorkSessionIDColumn),String)
                End If
            End Get
            Set
                Me(Me.tablevwksResults.WorkSessionIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AnalyzerID() As String
            Get
                If Me.IsAnalyzerIDNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablevwksResults.AnalyzerIDColumn),String)
                End If
            End Get
            Set
                Me(Me.tablevwksResults.AnalyzerIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ReplicatesNumber() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablevwksResults.ReplicatesNumberColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ReplicatesNumber' in table 'vwksResults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwksResults.ReplicatesNumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HistWorkSessionID() As String
            Get
                If Me.IsHistWorkSessionIDNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablevwksResults.HistWorkSessionIDColumn),String)
                End If
            End Get
            Set
                Me(Me.tablevwksResults.HistWorkSessionIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HistOrderTestID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablevwksResults.HistOrderTestIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HistOrderTestID' in table 'vwksResults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwksResults.HistOrderTestIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TubeType() As String
            Get
                Try 
                    Return CType(Me(Me.tablevwksResults.TubeTypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TubeType' in table 'vwksResults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwksResults.TubeTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LotNumber() As String
            Get
                If Me.IsLotNumberNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablevwksResults.LotNumberColumn),String)
                End If
            End Get
            Set
                Me(Me.tablevwksResults.LotNumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AlarmList() As String
            Get
                If Me.IsAlarmListNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablevwksResults.AlarmListColumn),String)
                End If
            End Get
            Set
                Me(Me.tablevwksResults.AlarmListColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LISMessageID() As String
            Get
                If Me.IsLISMessageIDNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablevwksResults.LISMessageIDColumn),String)
                End If
            End Get
            Set
                Me(Me.tablevwksResults.LISMessageIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LISRequest() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablevwksResults.LISRequestColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LISRequest' in table 'vwksResults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwksResults.LISRequestColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ExternalQC() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablevwksResults.ExternalQCColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ExternalQC' in table 'vwksResults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwksResults.ExternalQCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SpecimenIDList() As String
            Get
                If Me.IsSpecimenIDListNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablevwksResults.SpecimenIDListColumn),String)
                End If
            End Get
            Set
                Me(Me.tablevwksResults.SpecimenIDListColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TestLongName() As String
            Get
                If Me.IsTestLongNameNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablevwksResults.TestLongNameColumn),String)
                End If
            End Get
            Set
                Me(Me.tablevwksResults.TestLongNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOrderTestIDNull() As Boolean
            Return Me.IsNull(Me.tablevwksResults.OrderTestIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOrderTestIDNull()
            Me(Me.tablevwksResults.OrderTestIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRerunNumberNull() As Boolean
            Return Me.IsNull(Me.tablevwksResults.RerunNumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRerunNumberNull()
            Me(Me.tablevwksResults.RerunNumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMultiPointNumberNull() As Boolean
            Return Me.IsNull(Me.tablevwksResults.MultiPointNumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMultiPointNumberNull()
            Me(Me.tablevwksResults.MultiPointNumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsValidationStatusNull() As Boolean
            Return Me.IsNull(Me.tablevwksResults.ValidationStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetValidationStatusNull()
            Me(Me.tablevwksResults.ValidationStatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAcceptedResultFlagNull() As Boolean
            Return Me.IsNull(Me.tablevwksResults.AcceptedResultFlagColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAcceptedResultFlagNull()
            Me(Me.tablevwksResults.AcceptedResultFlagColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTestVersionNull() As Boolean
            Return Me.IsNull(Me.tablevwksResults.TestVersionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTestVersionNull()
            Me(Me.tablevwksResults.TestVersionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsManualResultFlagNull() As Boolean
            Return Me.IsNull(Me.tablevwksResults.ManualResultFlagColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetManualResultFlagNull()
            Me(Me.tablevwksResults.ManualResultFlagColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUserCommentNull() As Boolean
            Return Me.IsNull(Me.tablevwksResults.UserCommentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUserCommentNull()
            Me(Me.tablevwksResults.UserCommentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsExportStatusNull() As Boolean
            Return Me.IsNull(Me.tablevwksResults.ExportStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetExportStatusNull()
            Me(Me.tablevwksResults.ExportStatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsExportDateTimeNull() As Boolean
            Return Me.IsNull(Me.tablevwksResults.ExportDateTimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetExportDateTimeNull()
            Me(Me.tablevwksResults.ExportDateTimeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPrintedNull() As Boolean
            Return Me.IsNull(Me.tablevwksResults.PrintedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPrintedNull()
            Me(Me.tablevwksResults.PrintedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsABSValueNull() As Boolean
            Return Me.IsNull(Me.tablevwksResults.ABSValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetABSValueNull()
            Me(Me.tablevwksResults.ABSValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsABS_ErrorNull() As Boolean
            Return Me.IsNull(Me.tablevwksResults.ABS_ErrorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetABS_ErrorNull()
            Me(Me.tablevwksResults.ABS_ErrorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSubstrateDepletionNull() As Boolean
            Return Me.IsNull(Me.tablevwksResults.SubstrateDepletionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSubstrateDepletionNull()
            Me(Me.tablevwksResults.SubstrateDepletionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsABS_InitialNull() As Boolean
            Return Me.IsNull(Me.tablevwksResults.ABS_InitialColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetABS_InitialNull()
            Me(Me.tablevwksResults.ABS_InitialColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsABS_MainFilterNull() As Boolean
            Return Me.IsNull(Me.tablevwksResults.ABS_MainFilterColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetABS_MainFilterNull()
            Me(Me.tablevwksResults.ABS_MainFilterColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCalibratorFactorNull() As Boolean
            Return Me.IsNull(Me.tablevwksResults.CalibratorFactorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCalibratorFactorNull()
            Me(Me.tablevwksResults.CalibratorFactorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCalibrationErrorNull() As Boolean
            Return Me.IsNull(Me.tablevwksResults.CalibrationErrorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCalibrationErrorNull()
            Me(Me.tablevwksResults.CalibrationErrorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCalibratorBlankAbsUsedNull() As Boolean
            Return Me.IsNull(Me.tablevwksResults.CalibratorBlankAbsUsedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCalibratorBlankAbsUsedNull()
            Me(Me.tablevwksResults.CalibratorBlankAbsUsedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCurveResultsIDNull() As Boolean
            Return Me.IsNull(Me.tablevwksResults.CurveResultsIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCurveResultsIDNull()
            Me(Me.tablevwksResults.CurveResultsIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCurveGrowthTypeNull() As Boolean
            Return Me.IsNull(Me.tablevwksResults.CurveGrowthTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCurveGrowthTypeNull()
            Me(Me.tablevwksResults.CurveGrowthTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCurveTypeNull() As Boolean
            Return Me.IsNull(Me.tablevwksResults.CurveTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCurveTypeNull()
            Me(Me.tablevwksResults.CurveTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCurveAxisXTypeNull() As Boolean
            Return Me.IsNull(Me.tablevwksResults.CurveAxisXTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCurveAxisXTypeNull()
            Me(Me.tablevwksResults.CurveAxisXTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCurveAxisYTypeNull() As Boolean
            Return Me.IsNull(Me.tablevwksResults.CurveAxisYTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCurveAxisYTypeNull()
            Me(Me.tablevwksResults.CurveAxisYTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRelativeErrorCurveNull() As Boolean
            Return Me.IsNull(Me.tablevwksResults.RelativeErrorCurveColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRelativeErrorCurveNull()
            Me(Me.tablevwksResults.RelativeErrorCurveColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCONC_ValueNull() As Boolean
            Return Me.IsNull(Me.tablevwksResults.CONC_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCONC_ValueNull()
            Me(Me.tablevwksResults.CONC_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCONC_ErrorNull() As Boolean
            Return Me.IsNull(Me.tablevwksResults.CONC_ErrorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCONC_ErrorNull()
            Me(Me.tablevwksResults.CONC_ErrorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsResultDateTimeNull() As Boolean
            Return Me.IsNull(Me.tablevwksResults.ResultDateTimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetResultDateTimeNull()
            Me(Me.tablevwksResults.ResultDateTimeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTS_UserNull() As Boolean
            Return Me.IsNull(Me.tablevwksResults.TS_UserColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTS_UserNull()
            Me(Me.tablevwksResults.TS_UserColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTS_DateTimeNull() As Boolean
            Return Me.IsNull(Me.tablevwksResults.TS_DateTimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTS_DateTimeNull()
            Me(Me.tablevwksResults.TS_DateTimeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAbs_WorkReagentNull() As Boolean
            Return Me.IsNull(Me.tablevwksResults.Abs_WorkReagentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAbs_WorkReagentNull()
            Me(Me.tablevwksResults.Abs_WorkReagentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBlankAbsorbanceLimitNull() As Boolean
            Return Me.IsNull(Me.tablevwksResults.BlankAbsorbanceLimitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBlankAbsorbanceLimitNull()
            Me(Me.tablevwksResults.BlankAbsorbanceLimitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKineticBlankLimitNull() As Boolean
            Return Me.IsNull(Me.tablevwksResults.KineticBlankLimitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKineticBlankLimitNull()
            Me(Me.tablevwksResults.KineticBlankLimitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCalibratorLotNumberNull() As Boolean
            Return Me.IsNull(Me.tablevwksResults.CalibratorLotNumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCalibratorLotNumberNull()
            Me(Me.tablevwksResults.CalibratorLotNumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSampleTypeNull() As Boolean
            Return Me.IsNull(Me.tablevwksResults.SampleTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSampleTypeNull()
            Me(Me.tablevwksResults.SampleTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTheoricalConcentrationNull() As Boolean
            Return Me.IsNull(Me.tablevwksResults.TheoricalConcentrationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTheoricalConcentrationNull()
            Me(Me.tablevwksResults.TheoricalConcentrationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMeasureUnitNull() As Boolean
            Return Me.IsNull(Me.tablevwksResults.MeasureUnitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMeasureUnitNull()
            Me(Me.tablevwksResults.MeasureUnitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFactorLowerLimitNull() As Boolean
            Return Me.IsNull(Me.tablevwksResults.FactorLowerLimitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFactorLowerLimitNull()
            Me(Me.tablevwksResults.FactorLowerLimitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFactorUpperLimitNull() As Boolean
            Return Me.IsNull(Me.tablevwksResults.FactorUpperLimitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFactorUpperLimitNull()
            Me(Me.tablevwksResults.FactorUpperLimitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDecimalsAllowedNull() As Boolean
            Return Me.IsNull(Me.tablevwksResults.DecimalsAllowedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDecimalsAllowedNull()
            Me(Me.tablevwksResults.DecimalsAllowedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsControlNameNull() As Boolean
            Return Me.IsNull(Me.tablevwksResults.ControlNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetControlNameNull()
            Me(Me.tablevwksResults.ControlNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsControlLotNumberNull() As Boolean
            Return Me.IsNull(Me.tablevwksResults.ControlLotNumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetControlLotNumberNull()
            Me(Me.tablevwksResults.ControlLotNumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMinConcentrationNull() As Boolean
            Return Me.IsNull(Me.tablevwksResults.MinConcentrationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMinConcentrationNull()
            Me(Me.tablevwksResults.MinConcentrationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMaxConcentrationNull() As Boolean
            Return Me.IsNull(Me.tablevwksResults.MaxConcentrationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMaxConcentrationNull()
            Me(Me.tablevwksResults.MaxConcentrationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTestNameNull() As Boolean
            Return Me.IsNull(Me.tablevwksResults.TestNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTestNameNull()
            Me(Me.tablevwksResults.TestNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTestTypeNull() As Boolean
            Return Me.IsNull(Me.tablevwksResults.TestTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTestTypeNull()
            Me(Me.tablevwksResults.TestTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOrderTestStatusNull() As Boolean
            Return Me.IsNull(Me.tablevwksResults.OrderTestStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOrderTestStatusNull()
            Me(Me.tablevwksResults.OrderTestStatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPostDilutionTypeNull() As Boolean
            Return Me.IsNull(Me.tablevwksResults.PostDilutionTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPostDilutionTypeNull()
            Me(Me.tablevwksResults.PostDilutionTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTestIDNull() As Boolean
            Return Me.IsNull(Me.tablevwksResults.TestIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTestIDNull()
            Me(Me.tablevwksResults.TestIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsActiveRangeTypeNull() As Boolean
            Return Me.IsNull(Me.tablevwksResults.ActiveRangeTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetActiveRangeTypeNull()
            Me(Me.tablevwksResults.ActiveRangeTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNormalLowerLimitNull() As Boolean
            Return Me.IsNull(Me.tablevwksResults.NormalLowerLimitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNormalLowerLimitNull()
            Me(Me.tablevwksResults.NormalLowerLimitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNormalUpperLimitNull() As Boolean
            Return Me.IsNull(Me.tablevwksResults.NormalUpperLimitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNormalUpperLimitNull()
            Me(Me.tablevwksResults.NormalUpperLimitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOrderIDNull() As Boolean
            Return Me.IsNull(Me.tablevwksResults.OrderIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOrderIDNull()
            Me(Me.tablevwksResults.OrderIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCollapsedNull() As Boolean
            Return Me.IsNull(Me.tablevwksResults.CollapsedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCollapsedNull()
            Me(Me.tablevwksResults.CollapsedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPatientNameNull() As Boolean
            Return Me.IsNull(Me.tablevwksResults.PatientNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPatientNameNull()
            Me(Me.tablevwksResults.PatientNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsManualResultNull() As Boolean
            Return Me.IsNull(Me.tablevwksResults.ManualResultColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetManualResultNull()
            Me(Me.tablevwksResults.ManualResultColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsManualResultTextNull() As Boolean
            Return Me.IsNull(Me.tablevwksResults.ManualResultTextColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetManualResultTextNull()
            Me(Me.tablevwksResults.ManualResultTextColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsStatFlagNull() As Boolean
            Return Me.IsNull(Me.tablevwksResults.StatFlagColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetStatFlagNull()
            Me(Me.tablevwksResults.StatFlagColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPatientIDNull() As Boolean
            Return Me.IsNull(Me.tablevwksResults.PatientIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPatientIDNull()
            Me(Me.tablevwksResults.PatientIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCalibratorNameNull() As Boolean
            Return Me.IsNull(Me.tablevwksResults.CalibratorNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCalibratorNameNull()
            Me(Me.tablevwksResults.CalibratorNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAnalysisModeNull() As Boolean
            Return Me.IsNull(Me.tablevwksResults.AnalysisModeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAnalysisModeNull()
            Me(Me.tablevwksResults.AnalysisModeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCurveSlopeNull() As Boolean
            Return Me.IsNull(Me.tablevwksResults.CurveSlopeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCurveSlopeNull()
            Me(Me.tablevwksResults.CurveSlopeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCurveOffsetNull() As Boolean
            Return Me.IsNull(Me.tablevwksResults.CurveOffsetColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCurveOffsetNull()
            Me(Me.tablevwksResults.CurveOffsetColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCurveCorrelationNull() As Boolean
            Return Me.IsNull(Me.tablevwksResults.CurveCorrelationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCurveCorrelationNull()
            Me(Me.tablevwksResults.CurveCorrelationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSTDOrderTestIDNull() As Boolean
            Return Me.IsNull(Me.tablevwksResults.STDOrderTestIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSTDOrderTestIDNull()
            Me(Me.tablevwksResults.STDOrderTestIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSampleClassNull() As Boolean
            Return Me.IsNull(Me.tablevwksResults.SampleClassColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSampleClassNull()
            Me(Me.tablevwksResults.SampleClassColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCalibratorIDNull() As Boolean
            Return Me.IsNull(Me.tablevwksResults.CalibratorIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCalibratorIDNull()
            Me(Me.tablevwksResults.CalibratorIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNumberOfCalibratorsNull() As Boolean
            Return Me.IsNull(Me.tablevwksResults.NumberOfCalibratorsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNumberOfCalibratorsNull()
            Me(Me.tablevwksResults.NumberOfCalibratorsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPanicLowerLimitNull() As Boolean
            Return Me.IsNull(Me.tablevwksResults.PanicLowerLimitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPanicLowerLimitNull()
            Me(Me.tablevwksResults.PanicLowerLimitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPanicUpperLimitNull() As Boolean
            Return Me.IsNull(Me.tablevwksResults.PanicUpperLimitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPanicUpperLimitNull()
            Me(Me.tablevwksResults.PanicUpperLimitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOrderDateTimeNull() As Boolean
            Return Me.IsNull(Me.tablevwksResults.OrderDateTimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOrderDateTimeNull()
            Me(Me.tablevwksResults.OrderDateTimeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSampleIDNull() As Boolean
            Return Me.IsNull(Me.tablevwksResults.SampleIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSampleIDNull()
            Me(Me.tablevwksResults.SampleIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWorkSessionIDNull() As Boolean
            Return Me.IsNull(Me.tablevwksResults.WorkSessionIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWorkSessionIDNull()
            Me(Me.tablevwksResults.WorkSessionIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAnalyzerIDNull() As Boolean
            Return Me.IsNull(Me.tablevwksResults.AnalyzerIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAnalyzerIDNull()
            Me(Me.tablevwksResults.AnalyzerIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsReplicatesNumberNull() As Boolean
            Return Me.IsNull(Me.tablevwksResults.ReplicatesNumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetReplicatesNumberNull()
            Me(Me.tablevwksResults.ReplicatesNumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHistWorkSessionIDNull() As Boolean
            Return Me.IsNull(Me.tablevwksResults.HistWorkSessionIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHistWorkSessionIDNull()
            Me(Me.tablevwksResults.HistWorkSessionIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHistOrderTestIDNull() As Boolean
            Return Me.IsNull(Me.tablevwksResults.HistOrderTestIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHistOrderTestIDNull()
            Me(Me.tablevwksResults.HistOrderTestIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTubeTypeNull() As Boolean
            Return Me.IsNull(Me.tablevwksResults.TubeTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTubeTypeNull()
            Me(Me.tablevwksResults.TubeTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLotNumberNull() As Boolean
            Return Me.IsNull(Me.tablevwksResults.LotNumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLotNumberNull()
            Me(Me.tablevwksResults.LotNumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAlarmListNull() As Boolean
            Return Me.IsNull(Me.tablevwksResults.AlarmListColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAlarmListNull()
            Me(Me.tablevwksResults.AlarmListColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLISMessageIDNull() As Boolean
            Return Me.IsNull(Me.tablevwksResults.LISMessageIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLISMessageIDNull()
            Me(Me.tablevwksResults.LISMessageIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLISRequestNull() As Boolean
            Return Me.IsNull(Me.tablevwksResults.LISRequestColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLISRequestNull()
            Me(Me.tablevwksResults.LISRequestColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsExternalQCNull() As Boolean
            Return Me.IsNull(Me.tablevwksResults.ExternalQCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetExternalQCNull()
            Me(Me.tablevwksResults.ExternalQCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSpecimenIDListNull() As Boolean
            Return Me.IsNull(Me.tablevwksResults.SpecimenIDListColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSpecimenIDListNull()
            Me(Me.tablevwksResults.SpecimenIDListColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTestLongNameNull() As Boolean
            Return Me.IsNull(Me.tablevwksResults.TestLongNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTestLongNameNull()
            Me(Me.tablevwksResults.TestLongNameColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class vwksResultsAlarmsRow
        Inherits Global.System.Data.DataRow
        
        Private tablevwksResultsAlarms As vwksResultsAlarmsDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablevwksResultsAlarms = CType(Me.Table,vwksResultsAlarmsDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OrderTestID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablevwksResultsAlarms.OrderTestIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OrderTestID' in table 'vwksResultsAlarms' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwksResultsAlarms.OrderTestIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RerunNumber() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablevwksResultsAlarms.RerunNumberColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RerunNumber' in table 'vwksResultsAlarms' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwksResultsAlarms.RerunNumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MultiPointNumber() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablevwksResultsAlarms.MultiPointNumberColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MultiPointNumber' in table 'vwksResultsAlarms' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwksResultsAlarms.MultiPointNumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Description() As String
            Get
                If Me.IsDescriptionNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tablevwksResultsAlarms.DescriptionColumn),String)
                End If
            End Get
            Set
                Me(Me.tablevwksResultsAlarms.DescriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AcceptedResultFlag() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tablevwksResultsAlarms.AcceptedResultFlagColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AcceptedResultFlag' in table 'vwksResultsAlarms' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablevwksResultsAlarms.AcceptedResultFlagColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AlarmID() As String
            Get
                Try 
                    Return CType(Me(Me.tablevwksResultsAlarms.AlarmIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AlarmID' in table 'vwksResultsAlarms' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevwksResultsAlarms.AlarmIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOrderTestIDNull() As Boolean
            Return Me.IsNull(Me.tablevwksResultsAlarms.OrderTestIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOrderTestIDNull()
            Me(Me.tablevwksResultsAlarms.OrderTestIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRerunNumberNull() As Boolean
            Return Me.IsNull(Me.tablevwksResultsAlarms.RerunNumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRerunNumberNull()
            Me(Me.tablevwksResultsAlarms.RerunNumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMultiPointNumberNull() As Boolean
            Return Me.IsNull(Me.tablevwksResultsAlarms.MultiPointNumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMultiPointNumberNull()
            Me(Me.tablevwksResultsAlarms.MultiPointNumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDescriptionNull() As Boolean
            Return Me.IsNull(Me.tablevwksResultsAlarms.DescriptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDescriptionNull()
            Me(Me.tablevwksResultsAlarms.DescriptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAcceptedResultFlagNull() As Boolean
            Return Me.IsNull(Me.tablevwksResultsAlarms.AcceptedResultFlagColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAcceptedResultFlagNull()
            Me(Me.tablevwksResultsAlarms.AcceptedResultFlagColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAlarmIDNull() As Boolean
            Return Me.IsNull(Me.tablevwksResultsAlarms.AlarmIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAlarmIDNull()
            Me(Me.tablevwksResultsAlarms.AlarmIDColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class XtraSamplesRow
        Inherits Global.System.Data.DataRow
        
        Private tableXtraSamples As XtraSamplesDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableXtraSamples = CType(Me.Table,XtraSamplesDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Group() As String
            Get
                If Me.IsGroupNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableXtraSamples.GroupColumn),String)
                End If
            End Get
            Set
                Me(Me.tableXtraSamples.GroupColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Ok() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tableXtraSamples.OkColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Ok' in table 'XtraSamples' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableXtraSamples.OkColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ExportStatus() As Byte()
            Get
                If Me.IsExportStatusNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableXtraSamples.ExportStatusColumn),Byte())
                End If
            End Get
            Set
                Me(Me.tableXtraSamples.ExportStatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NewRep() As Byte()
            Get
                If Me.IsNewRepNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableXtraSamples.NewRepColumn),Byte())
                End If
            End Get
            Set
                Me(Me.tableXtraSamples.NewRepColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property StatFlag() As Byte()
            Get
                If Me.IsStatFlagNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableXtraSamples.StatFlagColumn),Byte())
                End If
            End Get
            Set
                Me(Me.tableXtraSamples.StatFlagColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PatientName() As String
            Get
                If Me.IsPatientNameNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableXtraSamples.PatientNameColumn),String)
                End If
            End Get
            Set
                Me(Me.tableXtraSamples.PatientNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PatientID() As String
            Get
                If Me.IsPatientIDNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableXtraSamples.PatientIDColumn),String)
                End If
            End Get
            Set
                Me(Me.tableXtraSamples.PatientIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SampleType() As String
            Get
                If Me.IsSampleTypeNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableXtraSamples.SampleTypeColumn),String)
                End If
            End Get
            Set
                Me(Me.tableXtraSamples.SampleTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RerunNumber() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableXtraSamples.RerunNumberColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RerunNumber' in table 'XtraSamples' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableXtraSamples.RerunNumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Graph() As Byte()
            Get
                If Me.IsGraphNull Then
                    Return Nothing
                Else
                    Return CType(Me(Me.tableXtraSamples.GraphColumn),Byte())
                End If
            End Get
            Set
                Me(Me.tableXtraSamples.GraphColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ReplicateNumber() As String
            Get
                If Me.IsReplicateNumberNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableXtraSamples.ReplicateNumberColumn),String)
                End If
            End Get
            Set
                Me(Me.tableXtraSamples.ReplicateNumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ABSValue() As String
            Get
                If Me.IsABSValueNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableXtraSamples.ABSValueColumn),String)
                End If
            End Get
            Set
                Me(Me.tableXtraSamples.ABSValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Concentration() As String
            Get
                If Me.IsConcentrationNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableXtraSamples.ConcentrationColumn),String)
                End If
            End Get
            Set
                Me(Me.tableXtraSamples.ConcentrationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Unit() As String
            Get
                If Me.IsUnitNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableXtraSamples.UnitColumn),String)
                End If
            End Get
            Set
                Me(Me.tableXtraSamples.UnitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ReferenceRanges() As String
            Get
                If Me.IsReferenceRangesNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableXtraSamples.ReferenceRangesColumn),String)
                End If
            End Get
            Set
                Me(Me.tableXtraSamples.ReferenceRangesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Remarks() As String
            Get
                If Me.IsRemarksNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableXtraSamples.RemarksColumn),String)
                End If
            End Get
            Set
                Me(Me.tableXtraSamples.RemarksColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ResultDate() As String
            Get
                Try 
                    Return CType(Me(Me.tableXtraSamples.ResultDateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ResultDate' in table 'XtraSamples' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableXtraSamples.ResultDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Rep() As String
            Get
                If Me.IsRepNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableXtraSamples.RepColumn),String)
                End If
            End Get
            Set
                Me(Me.tableXtraSamples.RepColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Collapsed() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableXtraSamples.CollapsedColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Collapsed' in table 'XtraSamples' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableXtraSamples.CollapsedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IsSubHeader() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableXtraSamples.IsSubHeaderColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IsSubHeader' in table 'XtraSamples' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableXtraSamples.IsSubHeaderColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TagRowIndex() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableXtraSamples.TagRowIndexColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TagRowIndex' in table 'XtraSamples' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableXtraSamples.TagRowIndexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property InUse() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableXtraSamples.InUseColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'InUse' in table 'XtraSamples' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableXtraSamples.InUseColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TestType() As String
            Get
                If Me.IsTestTypeNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableXtraSamples.TestTypeColumn),String)
                End If
            End Get
            Set
                Me(Me.tableXtraSamples.TestTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SpecimenIDList() As String
            Get
                If Me.IsSpecimenIDListNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableXtraSamples.SpecimenIDListColumn),String)
                End If
            End Get
            Set
                Me(Me.tableXtraSamples.SpecimenIDListColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGroupNull() As Boolean
            Return Me.IsNull(Me.tableXtraSamples.GroupColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGroupNull()
            Me(Me.tableXtraSamples.GroupColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOkNull() As Boolean
            Return Me.IsNull(Me.tableXtraSamples.OkColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOkNull()
            Me(Me.tableXtraSamples.OkColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsExportStatusNull() As Boolean
            Return Me.IsNull(Me.tableXtraSamples.ExportStatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetExportStatusNull()
            Me(Me.tableXtraSamples.ExportStatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNewRepNull() As Boolean
            Return Me.IsNull(Me.tableXtraSamples.NewRepColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNewRepNull()
            Me(Me.tableXtraSamples.NewRepColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsStatFlagNull() As Boolean
            Return Me.IsNull(Me.tableXtraSamples.StatFlagColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetStatFlagNull()
            Me(Me.tableXtraSamples.StatFlagColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPatientNameNull() As Boolean
            Return Me.IsNull(Me.tableXtraSamples.PatientNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPatientNameNull()
            Me(Me.tableXtraSamples.PatientNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPatientIDNull() As Boolean
            Return Me.IsNull(Me.tableXtraSamples.PatientIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPatientIDNull()
            Me(Me.tableXtraSamples.PatientIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSampleTypeNull() As Boolean
            Return Me.IsNull(Me.tableXtraSamples.SampleTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSampleTypeNull()
            Me(Me.tableXtraSamples.SampleTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRerunNumberNull() As Boolean
            Return Me.IsNull(Me.tableXtraSamples.RerunNumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRerunNumberNull()
            Me(Me.tableXtraSamples.RerunNumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGraphNull() As Boolean
            Return Me.IsNull(Me.tableXtraSamples.GraphColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGraphNull()
            Me(Me.tableXtraSamples.GraphColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsReplicateNumberNull() As Boolean
            Return Me.IsNull(Me.tableXtraSamples.ReplicateNumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetReplicateNumberNull()
            Me(Me.tableXtraSamples.ReplicateNumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsABSValueNull() As Boolean
            Return Me.IsNull(Me.tableXtraSamples.ABSValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetABSValueNull()
            Me(Me.tableXtraSamples.ABSValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsConcentrationNull() As Boolean
            Return Me.IsNull(Me.tableXtraSamples.ConcentrationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetConcentrationNull()
            Me(Me.tableXtraSamples.ConcentrationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUnitNull() As Boolean
            Return Me.IsNull(Me.tableXtraSamples.UnitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUnitNull()
            Me(Me.tableXtraSamples.UnitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsReferenceRangesNull() As Boolean
            Return Me.IsNull(Me.tableXtraSamples.ReferenceRangesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetReferenceRangesNull()
            Me(Me.tableXtraSamples.ReferenceRangesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRemarksNull() As Boolean
            Return Me.IsNull(Me.tableXtraSamples.RemarksColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRemarksNull()
            Me(Me.tableXtraSamples.RemarksColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsResultDateNull() As Boolean
            Return Me.IsNull(Me.tableXtraSamples.ResultDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetResultDateNull()
            Me(Me.tableXtraSamples.ResultDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRepNull() As Boolean
            Return Me.IsNull(Me.tableXtraSamples.RepColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRepNull()
            Me(Me.tableXtraSamples.RepColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCollapsedNull() As Boolean
            Return Me.IsNull(Me.tableXtraSamples.CollapsedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCollapsedNull()
            Me(Me.tableXtraSamples.CollapsedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIsSubHeaderNull() As Boolean
            Return Me.IsNull(Me.tableXtraSamples.IsSubHeaderColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIsSubHeaderNull()
            Me(Me.tableXtraSamples.IsSubHeaderColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTagRowIndexNull() As Boolean
            Return Me.IsNull(Me.tableXtraSamples.TagRowIndexColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTagRowIndexNull()
            Me(Me.tableXtraSamples.TagRowIndexColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsInUseNull() As Boolean
            Return Me.IsNull(Me.tableXtraSamples.InUseColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetInUseNull()
            Me(Me.tableXtraSamples.InUseColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTestTypeNull() As Boolean
            Return Me.IsNull(Me.tableXtraSamples.TestTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTestTypeNull()
            Me(Me.tableXtraSamples.TestTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSpecimenIDListNull() As Boolean
            Return Me.IsNull(Me.tableXtraSamples.SpecimenIDListColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSpecimenIDListNull()
            Me(Me.tableXtraSamples.SpecimenIDListColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ReportSampleMasterRow
        Inherits Global.System.Data.DataRow
        
        Private tableReportSampleMaster As ReportSampleMasterDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableReportSampleMaster = CType(Me.Table,ReportSampleMasterDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PatientID() As String
            Get
                If Me.IsPatientIDNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableReportSampleMaster.PatientIDColumn),String)
                End If
            End Get
            Set
                Me(Me.tableReportSampleMaster.PatientIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FullID() As String
            Get
                If Me.IsFullIDNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableReportSampleMaster.FullIDColumn),String)
                End If
            End Get
            Set
                Me(Me.tableReportSampleMaster.FullIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FullName() As String
            Get
                If Me.IsFullNameNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableReportSampleMaster.FullNameColumn),String)
                End If
            End Get
            Set
                Me(Me.tableReportSampleMaster.FullNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Gender() As String
            Get
                If Me.IsGenderNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableReportSampleMaster.GenderColumn),String)
                End If
            End Get
            Set
                Me(Me.tableReportSampleMaster.GenderColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FormatedDateOfBirth() As String
            Get
                If Me.IsFormatedDateOfBirthNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableReportSampleMaster.FormatedDateOfBirthColumn),String)
                End If
            End Get
            Set
                Me(Me.tableReportSampleMaster.FormatedDateOfBirthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AgeWithUnit() As String
            Get
                If Me.IsAgeWithUnitNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableReportSampleMaster.AgeWithUnitColumn),String)
                End If
            End Get
            Set
                Me(Me.tableReportSampleMaster.AgeWithUnitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PerformedBy() As String
            Get
                If Me.IsPerformedByNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableReportSampleMaster.PerformedByColumn),String)
                End If
            End Get
            Set
                Me(Me.tableReportSampleMaster.PerformedByColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Comments() As String
            Get
                If Me.IsCommentsNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableReportSampleMaster.CommentsColumn),String)
                End If
            End Get
            Set
                Me(Me.tableReportSampleMaster.CommentsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPatientIDNull() As Boolean
            Return Me.IsNull(Me.tableReportSampleMaster.PatientIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPatientIDNull()
            Me(Me.tableReportSampleMaster.PatientIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFullIDNull() As Boolean
            Return Me.IsNull(Me.tableReportSampleMaster.FullIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFullIDNull()
            Me(Me.tableReportSampleMaster.FullIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFullNameNull() As Boolean
            Return Me.IsNull(Me.tableReportSampleMaster.FullNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFullNameNull()
            Me(Me.tableReportSampleMaster.FullNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGenderNull() As Boolean
            Return Me.IsNull(Me.tableReportSampleMaster.GenderColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGenderNull()
            Me(Me.tableReportSampleMaster.GenderColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFormatedDateOfBirthNull() As Boolean
            Return Me.IsNull(Me.tableReportSampleMaster.FormatedDateOfBirthColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFormatedDateOfBirthNull()
            Me(Me.tableReportSampleMaster.FormatedDateOfBirthColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAgeWithUnitNull() As Boolean
            Return Me.IsNull(Me.tableReportSampleMaster.AgeWithUnitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAgeWithUnitNull()
            Me(Me.tableReportSampleMaster.AgeWithUnitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPerformedByNull() As Boolean
            Return Me.IsNull(Me.tableReportSampleMaster.PerformedByColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPerformedByNull()
            Me(Me.tableReportSampleMaster.PerformedByColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCommentsNull() As Boolean
            Return Me.IsNull(Me.tableReportSampleMaster.CommentsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCommentsNull()
            Me(Me.tableReportSampleMaster.CommentsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetReportSampleDetailsRows() As ReportSampleDetailsRow()
            If (Me.Table.ChildRelations("ReportSampleMaster_ReportSampleDetails") Is Nothing) Then
                Return New ReportSampleDetailsRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("ReportSampleMaster_ReportSampleDetails")),ReportSampleDetailsRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ReportSampleDetailsRow
        Inherits Global.System.Data.DataRow
        
        Private tableReportSampleDetails As ReportSampleDetailsDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableReportSampleDetails = CType(Me.Table,ReportSampleDetailsDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PatientID() As String
            Get
                If Me.IsPatientIDNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableReportSampleDetails.PatientIDColumn),String)
                End If
            End Get
            Set
                Me(Me.tableReportSampleDetails.PatientIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TestName() As String
            Get
                If Me.IsTestNameNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableReportSampleDetails.TestNameColumn),String)
                End If
            End Get
            Set
                Me(Me.tableReportSampleDetails.TestNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SampleType() As String
            Get
                If Me.IsSampleTypeNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableReportSampleDetails.SampleTypeColumn),String)
                End If
            End Get
            Set
                Me(Me.tableReportSampleDetails.SampleTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ReplicateNumber() As String
            Get
                If Me.IsReplicateNumberNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableReportSampleDetails.ReplicateNumberColumn),String)
                End If
            End Get
            Set
                Me(Me.tableReportSampleDetails.ReplicateNumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ABSValue() As String
            Get
                If Me.IsABSValueNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableReportSampleDetails.ABSValueColumn),String)
                End If
            End Get
            Set
                Me(Me.tableReportSampleDetails.ABSValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CONC_Value() As String
            Get
                If Me.IsCONC_ValueNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableReportSampleDetails.CONC_ValueColumn),String)
                End If
            End Get
            Set
                Me(Me.tableReportSampleDetails.CONC_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ReferenceRanges() As String
            Get
                If Me.IsReferenceRangesNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableReportSampleDetails.ReferenceRangesColumn),String)
                End If
            End Get
            Set
                Me(Me.tableReportSampleDetails.ReferenceRangesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Unit() As String
            Get
                If Me.IsUnitNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableReportSampleDetails.UnitColumn),String)
                End If
            End Get
            Set
                Me(Me.tableReportSampleDetails.UnitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ResultDate() As String
            Get
                If Me.IsResultDateNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableReportSampleDetails.ResultDateColumn),String)
                End If
            End Get
            Set
                Me(Me.tableReportSampleDetails.ResultDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Remarks() As String
            Get
                If Me.IsRemarksNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableReportSampleDetails.RemarksColumn),String)
                End If
            End Get
            Set
                Me(Me.tableReportSampleDetails.RemarksColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ReportSampleMasterRow() As ReportSampleMasterRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("ReportSampleMaster_ReportSampleDetails")),ReportSampleMasterRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("ReportSampleMaster_ReportSampleDetails"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPatientIDNull() As Boolean
            Return Me.IsNull(Me.tableReportSampleDetails.PatientIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPatientIDNull()
            Me(Me.tableReportSampleDetails.PatientIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTestNameNull() As Boolean
            Return Me.IsNull(Me.tableReportSampleDetails.TestNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTestNameNull()
            Me(Me.tableReportSampleDetails.TestNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSampleTypeNull() As Boolean
            Return Me.IsNull(Me.tableReportSampleDetails.SampleTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSampleTypeNull()
            Me(Me.tableReportSampleDetails.SampleTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsReplicateNumberNull() As Boolean
            Return Me.IsNull(Me.tableReportSampleDetails.ReplicateNumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetReplicateNumberNull()
            Me(Me.tableReportSampleDetails.ReplicateNumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsABSValueNull() As Boolean
            Return Me.IsNull(Me.tableReportSampleDetails.ABSValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetABSValueNull()
            Me(Me.tableReportSampleDetails.ABSValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCONC_ValueNull() As Boolean
            Return Me.IsNull(Me.tableReportSampleDetails.CONC_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCONC_ValueNull()
            Me(Me.tableReportSampleDetails.CONC_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsReferenceRangesNull() As Boolean
            Return Me.IsNull(Me.tableReportSampleDetails.ReferenceRangesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetReferenceRangesNull()
            Me(Me.tableReportSampleDetails.ReferenceRangesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUnitNull() As Boolean
            Return Me.IsNull(Me.tableReportSampleDetails.UnitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUnitNull()
            Me(Me.tableReportSampleDetails.UnitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsResultDateNull() As Boolean
            Return Me.IsNull(Me.tableReportSampleDetails.ResultDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetResultDateNull()
            Me(Me.tableReportSampleDetails.ResultDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRemarksNull() As Boolean
            Return Me.IsNull(Me.tableReportSampleDetails.RemarksColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRemarksNull()
            Me(Me.tableReportSampleDetails.RemarksColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ReportTestMasterRow
        Inherits Global.System.Data.DataRow
        
        Private tableReportTestMaster As ReportTestMasterDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableReportTestMaster = CType(Me.Table,ReportTestMasterDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TestTypeTestID() As String
            Get
                Try 
                    Return CType(Me(Me.tableReportTestMaster.TestTypeTestIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TestTypeTestID' in table 'ReportTestMaster' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableReportTestMaster.TestTypeTestIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TestName() As String
            Get
                If Me.IsTestNameNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableReportTestMaster.TestNameColumn),String)
                End If
            End Get
            Set
                Me(Me.tableReportTestMaster.TestNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTestTypeTestIDNull() As Boolean
            Return Me.IsNull(Me.tableReportTestMaster.TestTypeTestIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTestTypeTestIDNull()
            Me(Me.tableReportTestMaster.TestTypeTestIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTestNameNull() As Boolean
            Return Me.IsNull(Me.tableReportTestMaster.TestNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTestNameNull()
            Me(Me.tableReportTestMaster.TestNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetReportTestDetailsRows() As ReportTestDetailsRow()
            If (Me.Table.ChildRelations("ReportTestMaster_ReportTestDetails") Is Nothing) Then
                Return New ReportTestDetailsRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("ReportTestMaster_ReportTestDetails")),ReportTestDetailsRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ReportTestDetailsRow
        Inherits Global.System.Data.DataRow
        
        Private tableReportTestDetails As ReportTestDetailsDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableReportTestDetails = CType(Me.Table,ReportTestDetailsDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TestTypeTestID() As String
            Get
                Try 
                    Return CType(Me(Me.tableReportTestDetails.TestTypeTestIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TestTypeTestID' in table 'ReportTestDetails' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableReportTestDetails.TestTypeTestIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SampleClass() As String
            Get
                If Me.IsSampleClassNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableReportTestDetails.SampleClassColumn),String)
                End If
            End Get
            Set
                Me(Me.tableReportTestDetails.SampleClassColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Name() As String
            Get
                If Me.IsNameNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableReportTestDetails.NameColumn),String)
                End If
            End Get
            Set
                Me(Me.tableReportTestDetails.NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SampleType() As String
            Get
                If Me.IsSampleTypeNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableReportTestDetails.SampleTypeColumn),String)
                End If
            End Get
            Set
                Me(Me.tableReportTestDetails.SampleTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ReplicateNumber() As String
            Get
                If Me.IsReplicateNumberNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableReportTestDetails.ReplicateNumberColumn),String)
                End If
            End Get
            Set
                Me(Me.tableReportTestDetails.ReplicateNumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ABSValue() As String
            Get
                If Me.IsABSValueNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableReportTestDetails.ABSValueColumn),String)
                End If
            End Get
            Set
                Me(Me.tableReportTestDetails.ABSValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CONC_Value() As String
            Get
                If Me.IsCONC_ValueNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableReportTestDetails.CONC_ValueColumn),String)
                End If
            End Get
            Set
                Me(Me.tableReportTestDetails.CONC_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MeasureUnit() As String
            Get
                If Me.IsMeasureUnitNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableReportTestDetails.MeasureUnitColumn),String)
                End If
            End Get
            Set
                Me(Me.tableReportTestDetails.MeasureUnitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CalibratorFactor() As String
            Get
                If Me.IsCalibratorFactorNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableReportTestDetails.CalibratorFactorColumn),String)
                End If
            End Get
            Set
                Me(Me.tableReportTestDetails.CalibratorFactorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ResultDate() As String
            Get
                If Me.IsResultDateNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableReportTestDetails.ResultDateColumn),String)
                End If
            End Get
            Set
                Me(Me.tableReportTestDetails.ResultDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ReportTestMasterRow() As ReportTestMasterRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("ReportTestMaster_ReportTestDetails")),ReportTestMasterRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("ReportTestMaster_ReportTestDetails"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTestTypeTestIDNull() As Boolean
            Return Me.IsNull(Me.tableReportTestDetails.TestTypeTestIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTestTypeTestIDNull()
            Me(Me.tableReportTestDetails.TestTypeTestIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSampleClassNull() As Boolean
            Return Me.IsNull(Me.tableReportTestDetails.SampleClassColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSampleClassNull()
            Me(Me.tableReportTestDetails.SampleClassColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNameNull() As Boolean
            Return Me.IsNull(Me.tableReportTestDetails.NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNameNull()
            Me(Me.tableReportTestDetails.NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSampleTypeNull() As Boolean
            Return Me.IsNull(Me.tableReportTestDetails.SampleTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSampleTypeNull()
            Me(Me.tableReportTestDetails.SampleTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsReplicateNumberNull() As Boolean
            Return Me.IsNull(Me.tableReportTestDetails.ReplicateNumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetReplicateNumberNull()
            Me(Me.tableReportTestDetails.ReplicateNumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsABSValueNull() As Boolean
            Return Me.IsNull(Me.tableReportTestDetails.ABSValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetABSValueNull()
            Me(Me.tableReportTestDetails.ABSValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCONC_ValueNull() As Boolean
            Return Me.IsNull(Me.tableReportTestDetails.CONC_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCONC_ValueNull()
            Me(Me.tableReportTestDetails.CONC_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMeasureUnitNull() As Boolean
            Return Me.IsNull(Me.tableReportTestDetails.MeasureUnitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMeasureUnitNull()
            Me(Me.tableReportTestDetails.MeasureUnitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCalibratorFactorNull() As Boolean
            Return Me.IsNull(Me.tableReportTestDetails.CalibratorFactorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCalibratorFactorNull()
            Me(Me.tableReportTestDetails.CalibratorFactorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsResultDateNull() As Boolean
            Return Me.IsNull(Me.tableReportTestDetails.ResultDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetResultDateNull()
            Me(Me.tableReportTestDetails.ResultDateColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ReportCalibCurveRow
        Inherits Global.System.Data.DataRow
        
        Private tableReportCalibCurve As ReportCalibCurveDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableReportCalibCurve = CType(Me.Table,ReportCalibCurveDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CurveResultsID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableReportCalibCurve.CurveResultsIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CurveResultsID' in table 'ReportCalibCurve' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableReportCalibCurve.CurveResultsIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SampleType() As String
            Get
                If Me.IsSampleTypeNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableReportCalibCurve.SampleTypeColumn),String)
                End If
            End Get
            Set
                Me(Me.tableReportCalibCurve.SampleTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CurveGrowthType() As String
            Get
                If Me.IsCurveGrowthTypeNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableReportCalibCurve.CurveGrowthTypeColumn),String)
                End If
            End Get
            Set
                Me(Me.tableReportCalibCurve.CurveGrowthTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CurveType() As String
            Get
                If Me.IsCurveTypeNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableReportCalibCurve.CurveTypeColumn),String)
                End If
            End Get
            Set
                Me(Me.tableReportCalibCurve.CurveTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CurveAxisXType() As String
            Get
                If Me.IsCurveAxisXTypeNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableReportCalibCurve.CurveAxisXTypeColumn),String)
                End If
            End Get
            Set
                Me(Me.tableReportCalibCurve.CurveAxisXTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CurveAxisYType() As String
            Get
                If Me.IsCurveAxisYTypeNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableReportCalibCurve.CurveAxisYTypeColumn),String)
                End If
            End Get
            Set
                Me(Me.tableReportCalibCurve.CurveAxisYTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CalibrationError() As String
            Get
                If Me.IsCalibrationErrorNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableReportCalibCurve.CalibrationErrorColumn),String)
                End If
            End Get
            Set
                Me(Me.tableReportCalibCurve.CalibrationErrorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MeasureUnit() As String
            Get
                If Me.IsMeasureUnitNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableReportCalibCurve.MeasureUnitColumn),String)
                End If
            End Get
            Set
                Me(Me.tableReportCalibCurve.MeasureUnitColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MultiPointNumber() As String
            Get
                If Me.IsMultiPointNumberNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableReportCalibCurve.MultiPointNumberColumn),String)
                End If
            End Get
            Set
                Me(Me.tableReportCalibCurve.MultiPointNumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ABSValue() As String
            Get
                If Me.IsABSValueNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableReportCalibCurve.ABSValueColumn),String)
                End If
            End Get
            Set
                Me(Me.tableReportCalibCurve.ABSValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CONC_Value() As String
            Get
                If Me.IsCONC_ValueNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableReportCalibCurve.CONC_ValueColumn),String)
                End If
            End Get
            Set
                Me(Me.tableReportCalibCurve.CONC_ValueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TheoricalConcentration() As String
            Get
                If Me.IsTheoricalConcentrationNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableReportCalibCurve.TheoricalConcentrationColumn),String)
                End If
            End Get
            Set
                Me(Me.tableReportCalibCurve.TheoricalConcentrationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RelativeErrorCurve() As String
            Get
                If Me.IsRelativeErrorCurveNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tableReportCalibCurve.RelativeErrorCurveColumn),String)
                End If
            End Get
            Set
                Me(Me.tableReportCalibCurve.RelativeErrorCurveColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CurveSlope() As Single
            Get
                Try 
                    Return CType(Me(Me.tableReportCalibCurve.CurveSlopeColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CurveSlope' in table 'ReportCalibCurve' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableReportCalibCurve.CurveSlopeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CurveOffset() As Single
            Get
                Try 
                    Return CType(Me(Me.tableReportCalibCurve.CurveOffsetColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CurveOffset' in table 'ReportCalibCurve' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableReportCalibCurve.CurveOffsetColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CurveCorrelation() As Single
            Get
                Try 
                    Return CType(Me(Me.tableReportCalibCurve.CurveCorrelationColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CurveCorrelation' in table 'ReportCalibCurve' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableReportCalibCurve.CurveCorrelationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CalibratorBlankAbsUsed() As Single
            Get
                Try 
                    Return CType(Me(Me.tableReportCalibCurve.CalibratorBlankAbsUsedColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CalibratorBlankAbsUsed' in table 'ReportCalibCurve' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableReportCalibCurve.CalibratorBlankAbsUsedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCurveResultsIDNull() As Boolean
            Return Me.IsNull(Me.tableReportCalibCurve.CurveResultsIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCurveResultsIDNull()
            Me(Me.tableReportCalibCurve.CurveResultsIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSampleTypeNull() As Boolean
            Return Me.IsNull(Me.tableReportCalibCurve.SampleTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSampleTypeNull()
            Me(Me.tableReportCalibCurve.SampleTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCurveGrowthTypeNull() As Boolean
            Return Me.IsNull(Me.tableReportCalibCurve.CurveGrowthTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCurveGrowthTypeNull()
            Me(Me.tableReportCalibCurve.CurveGrowthTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCurveTypeNull() As Boolean
            Return Me.IsNull(Me.tableReportCalibCurve.CurveTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCurveTypeNull()
            Me(Me.tableReportCalibCurve.CurveTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCurveAxisXTypeNull() As Boolean
            Return Me.IsNull(Me.tableReportCalibCurve.CurveAxisXTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCurveAxisXTypeNull()
            Me(Me.tableReportCalibCurve.CurveAxisXTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCurveAxisYTypeNull() As Boolean
            Return Me.IsNull(Me.tableReportCalibCurve.CurveAxisYTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCurveAxisYTypeNull()
            Me(Me.tableReportCalibCurve.CurveAxisYTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCalibrationErrorNull() As Boolean
            Return Me.IsNull(Me.tableReportCalibCurve.CalibrationErrorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCalibrationErrorNull()
            Me(Me.tableReportCalibCurve.CalibrationErrorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMeasureUnitNull() As Boolean
            Return Me.IsNull(Me.tableReportCalibCurve.MeasureUnitColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMeasureUnitNull()
            Me(Me.tableReportCalibCurve.MeasureUnitColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMultiPointNumberNull() As Boolean
            Return Me.IsNull(Me.tableReportCalibCurve.MultiPointNumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMultiPointNumberNull()
            Me(Me.tableReportCalibCurve.MultiPointNumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsABSValueNull() As Boolean
            Return Me.IsNull(Me.tableReportCalibCurve.ABSValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetABSValueNull()
            Me(Me.tableReportCalibCurve.ABSValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCONC_ValueNull() As Boolean
            Return Me.IsNull(Me.tableReportCalibCurve.CONC_ValueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCONC_ValueNull()
            Me(Me.tableReportCalibCurve.CONC_ValueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTheoricalConcentrationNull() As Boolean
            Return Me.IsNull(Me.tableReportCalibCurve.TheoricalConcentrationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTheoricalConcentrationNull()
            Me(Me.tableReportCalibCurve.TheoricalConcentrationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRelativeErrorCurveNull() As Boolean
            Return Me.IsNull(Me.tableReportCalibCurve.RelativeErrorCurveColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRelativeErrorCurveNull()
            Me(Me.tableReportCalibCurve.RelativeErrorCurveColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCurveSlopeNull() As Boolean
            Return Me.IsNull(Me.tableReportCalibCurve.CurveSlopeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCurveSlopeNull()
            Me(Me.tableReportCalibCurve.CurveSlopeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCurveOffsetNull() As Boolean
            Return Me.IsNull(Me.tableReportCalibCurve.CurveOffsetColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCurveOffsetNull()
            Me(Me.tableReportCalibCurve.CurveOffsetColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCurveCorrelationNull() As Boolean
            Return Me.IsNull(Me.tableReportCalibCurve.CurveCorrelationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCurveCorrelationNull()
            Me(Me.tableReportCalibCurve.CurveCorrelationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCalibratorBlankAbsUsedNull() As Boolean
            Return Me.IsNull(Me.tableReportCalibCurve.CalibratorBlankAbsUsedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCalibratorBlankAbsUsedNull()
            Me(Me.tableReportCalibCurve.CalibratorBlankAbsUsedColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class twksResultsRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As twksResultsRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As twksResultsRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As twksResultsRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class vwksResultsRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As vwksResultsRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As vwksResultsRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As vwksResultsRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class vwksResultsAlarmsRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As vwksResultsAlarmsRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As vwksResultsAlarmsRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As vwksResultsAlarmsRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class XtraSamplesRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As XtraSamplesRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As XtraSamplesRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As XtraSamplesRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class ReportSampleMasterRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ReportSampleMasterRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As ReportSampleMasterRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As ReportSampleMasterRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class ReportSampleDetailsRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ReportSampleDetailsRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As ReportSampleDetailsRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As ReportSampleDetailsRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class ReportTestMasterRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ReportTestMasterRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As ReportTestMasterRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As ReportTestMasterRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class ReportTestDetailsRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ReportTestDetailsRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As ReportTestDetailsRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As ReportTestDetailsRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class ReportCalibCurveRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ReportCalibCurveRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As ReportCalibCurveRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As ReportCalibCurveRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
