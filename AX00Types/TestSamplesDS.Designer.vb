'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.17929
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("TestSamplesDS"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class TestSamplesDS
    Inherits Global.System.Data.DataSet
    
    Private tabletparTestSamples As tparTestSamplesDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("tparTestSamples")) Is Nothing) Then
                MyBase.Tables.Add(New tparTestSamplesDataTable(ds.Tables("tparTestSamples")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property tparTestSamples() As tparTestSamplesDataTable
        Get
            Return Me.tabletparTestSamples
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As TestSamplesDS = CType(MyBase.Clone,TestSamplesDS)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("tparTestSamples")) Is Nothing) Then
                MyBase.Tables.Add(New tparTestSamplesDataTable(ds.Tables("tparTestSamples")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tabletparTestSamples = CType(MyBase.Tables("tparTestSamples"),tparTestSamplesDataTable)
        If (initTable = true) Then
            If (Not (Me.tabletparTestSamples) Is Nothing) Then
                Me.tabletparTestSamples.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "TestSamplesDS"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/TestSamplesDS.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tabletparTestSamples = New tparTestSamplesDataTable()
        MyBase.Tables.Add(Me.tabletparTestSamples)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializetparTestSamples() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As TestSamplesDS = New TestSamplesDS()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub tparTestSamplesRowChangeEventHandler(ByVal sender As Object, ByVal e As tparTestSamplesRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class tparTestSamplesDataTable
        Inherits Global.System.Data.TypedTableBase(Of tparTestSamplesRow)
        
        Private columnTestID As Global.System.Data.DataColumn
        
        Private columnSampleType As Global.System.Data.DataColumn
        
        Private columnTestLongName As Global.System.Data.DataColumn
        
        Private columnSampleVolume As Global.System.Data.DataColumn
        
        Private columnWashingVolume As Global.System.Data.DataColumn
        
        Private columnPredilutionUseFlag As Global.System.Data.DataColumn
        
        Private columnPredilutionFactor As Global.System.Data.DataColumn
        
        Private columnPredilutionMode As Global.System.Data.DataColumn
        
        Private columnRedPostdilutionFactor As Global.System.Data.DataColumn
        
        Private columnRedPostSampleVolume As Global.System.Data.DataColumn
        
        Private columnIncPostdilutionFactor As Global.System.Data.DataColumn
        
        Private columnIncPostSampleVolume As Global.System.Data.DataColumn
        
        Private columnAutomaticRerun As Global.System.Data.DataColumn
        
        Private columnAbsorbanceDilutionFactor As Global.System.Data.DataColumn
        
        Private columnBlankAbsorbanceLimit As Global.System.Data.DataColumn
        
        Private columnLinearityLimit As Global.System.Data.DataColumn
        
        Private columnDetectionLimit As Global.System.Data.DataColumn
        
        Private columnSlopeFactorA As Global.System.Data.DataColumn
        
        Private columnSlopeFactorB As Global.System.Data.DataColumn
        
        Private columnSubstrateDepletionValue As Global.System.Data.DataColumn
        
        Private columnRerunLowerLimit As Global.System.Data.DataColumn
        
        Private columnRerunUpperLimit As Global.System.Data.DataColumn
        
        Private columnActiveRangeType As Global.System.Data.DataColumn
        
        Private columnCalibratorType As Global.System.Data.DataColumn
        
        Private columnCalibrationFactor As Global.System.Data.DataColumn
        
        Private columnSampleTypeAlternative As Global.System.Data.DataColumn
        
        Private columnCalibratorReplicates As Global.System.Data.DataColumn
        
        Private columnNumberOfControls As Global.System.Data.DataColumn
        
        Private columnControlReplicates As Global.System.Data.DataColumn
        
        Private columnRejectionCriteria As Global.System.Data.DataColumn
        
        Private columnCalculationMode As Global.System.Data.DataColumn
        
        Private columnNumberOfSeries As Global.System.Data.DataColumn
        
        Private columnDefaultSampleType As Global.System.Data.DataColumn
        
        Private columnTS_User As Global.System.Data.DataColumn
        
        Private columnTS_DateTime As Global.System.Data.DataColumn
        
        Private columnSampleVolumeSteps As Global.System.Data.DataColumn
        
        Private columnWashingVolumeSteps As Global.System.Data.DataColumn
        
        Private columnRedPostSampleVolumeSteps As Global.System.Data.DataColumn
        
        Private columnIncPostSampleVolumeSteps As Global.System.Data.DataColumn
        
        Private columnIsNew As Global.System.Data.DataColumn
        
        Private columnExistCalibResult As Global.System.Data.DataColumn
        
        Private columnDeleteResultAnswer As Global.System.Data.DataColumn
        
        Private columnKineticsBlankLimit As Global.System.Data.DataColumn
        
        Private columnFactorLowerLimit As Global.System.Data.DataColumn
        
        Private columnFactorUpperLimit As Global.System.Data.DataColumn
        
        Private columnDiluentSolution As Global.System.Data.DataColumn
        
        Private columnPredilutedSampleVol As Global.System.Data.DataColumn
        
        Private columnPredilutedSampleVolSteps As Global.System.Data.DataColumn
        
        Private columnPredilutedDiluentVol As Global.System.Data.DataColumn
        
        Private columnPreDiluentVolSteps As Global.System.Data.DataColumn
        
        Private columnEnableStatus As Global.System.Data.DataColumn
        
        Private columnFactoryCalib As Global.System.Data.DataColumn
        
        Private columnQCActive As Global.System.Data.DataColumn
        
        Private columnTotalAllowedError As Global.System.Data.DataColumn
        
        Private columnItemIDDesc As Global.System.Data.DataColumn
        
        Private columnHistTestID As Global.System.Data.DataColumn
        
        Private columnTestVersionNumber As Global.System.Data.DataColumn
        
        Private columnReplicatesNumber As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "tparTestSamples"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TestIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTestID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SampleTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSampleType
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TestLongNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTestLongName
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SampleVolumeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSampleVolume
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property WashingVolumeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWashingVolume
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PredilutionUseFlagColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPredilutionUseFlag
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PredilutionFactorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPredilutionFactor
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PredilutionModeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPredilutionMode
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property RedPostdilutionFactorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRedPostdilutionFactor
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property RedPostSampleVolumeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRedPostSampleVolume
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IncPostdilutionFactorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIncPostdilutionFactor
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IncPostSampleVolumeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIncPostSampleVolume
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property AutomaticRerunColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAutomaticRerun
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property AbsorbanceDilutionFactorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAbsorbanceDilutionFactor
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property BlankAbsorbanceLimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBlankAbsorbanceLimit
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property LinearityLimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLinearityLimit
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DetectionLimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDetectionLimit
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SlopeFactorAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSlopeFactorA
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SlopeFactorBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSlopeFactorB
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SubstrateDepletionValueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubstrateDepletionValue
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property RerunLowerLimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRerunLowerLimit
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property RerunUpperLimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRerunUpperLimit
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ActiveRangeTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnActiveRangeType
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CalibratorTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCalibratorType
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CalibrationFactorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCalibrationFactor
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SampleTypeAlternativeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSampleTypeAlternative
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CalibratorReplicatesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCalibratorReplicates
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NumberOfControlsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumberOfControls
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ControlReplicatesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnControlReplicates
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property RejectionCriteriaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRejectionCriteria
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CalculationModeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCalculationMode
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NumberOfSeriesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumberOfSeries
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DefaultSampleTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDefaultSampleType
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TS_UserColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTS_User
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TS_DateTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTS_DateTime
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SampleVolumeStepsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSampleVolumeSteps
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property WashingVolumeStepsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWashingVolumeSteps
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property RedPostSampleVolumeStepsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRedPostSampleVolumeSteps
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IncPostSampleVolumeStepsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIncPostSampleVolumeSteps
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IsNewColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIsNew
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ExistCalibResultColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExistCalibResult
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DeleteResultAnswerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDeleteResultAnswer
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property KineticsBlankLimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKineticsBlankLimit
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FactorLowerLimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFactorLowerLimit
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FactorUpperLimitColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFactorUpperLimit
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DiluentSolutionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDiluentSolution
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PredilutedSampleVolColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPredilutedSampleVol
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PredilutedSampleVolStepsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPredilutedSampleVolSteps
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PredilutedDiluentVolColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPredilutedDiluentVol
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PreDiluentVolStepsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPreDiluentVolSteps
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property EnableStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEnableStatus
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FactoryCalibColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFactoryCalib
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property QCActiveColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQCActive
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TotalAllowedErrorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalAllowedError
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ItemIDDescColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnItemIDDesc
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property HistTestIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHistTestID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TestVersionNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTestVersionNumber
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ReplicatesNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReplicatesNumber
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As tparTestSamplesRow
            Get
                Return CType(Me.Rows(index), tparTestSamplesRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event tparTestSamplesRowChanging As tparTestSamplesRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event tparTestSamplesRowChanged As tparTestSamplesRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event tparTestSamplesRowDeleting As tparTestSamplesRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event tparTestSamplesRowDeleted As tparTestSamplesRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddtparTestSamplesRow(ByVal row As tparTestSamplesRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddtparTestSamplesRow( _
                    ByVal TestID As Integer, _
                    ByVal SampleType As String, _
                    ByVal TestLongName As String, _
                    ByVal SampleVolume As Single, _
                    ByVal WashingVolume As Single, _
                    ByVal PredilutionUseFlag As Boolean, _
                    ByVal PredilutionFactor As Single, _
                    ByVal PredilutionMode As String, _
                    ByVal RedPostdilutionFactor As Single, _
                    ByVal RedPostSampleVolume As Single, _
                    ByVal IncPostdilutionFactor As Single, _
                    ByVal IncPostSampleVolume As Single, _
                    ByVal AutomaticRerun As Boolean, _
                    ByVal AbsorbanceDilutionFactor As Single, _
                    ByVal BlankAbsorbanceLimit As Single, _
                    ByVal LinearityLimit As Single, _
                    ByVal DetectionLimit As Single, _
                    ByVal SlopeFactorA As Single, _
                    ByVal SlopeFactorB As Single, _
                    ByVal SubstrateDepletionValue As Single, _
                    ByVal RerunLowerLimit As Single, _
                    ByVal RerunUpperLimit As Single, _
                    ByVal ActiveRangeType As String, _
                    ByVal CalibratorType As String, _
                    ByVal CalibrationFactor As Single, _
                    ByVal SampleTypeAlternative As String, _
                    ByVal CalibratorReplicates As Integer, _
                    ByVal NumberOfControls As Integer, _
                    ByVal ControlReplicates As Integer, _
                    ByVal RejectionCriteria As Single, _
                    ByVal CalculationMode As String, _
                    ByVal NumberOfSeries As Integer, _
                    ByVal DefaultSampleType As Boolean, _
                    ByVal TS_User As String, _
                    ByVal TS_DateTime As Date, _
                    ByVal SampleVolumeSteps As Single, _
                    ByVal WashingVolumeSteps As Single, _
                    ByVal RedPostSampleVolumeSteps As Single, _
                    ByVal IncPostSampleVolumeSteps As Single, _
                    ByVal IsNew As Boolean, _
                    ByVal ExistCalibResult As Boolean, _
                    ByVal DeleteResultAnswer As Boolean, _
                    ByVal KineticsBlankLimit As Single, _
                    ByVal FactorLowerLimit As Single, _
                    ByVal FactorUpperLimit As Single, _
                    ByVal DiluentSolution As String, _
                    ByVal PredilutedSampleVol As Single, _
                    ByVal PredilutedSampleVolSteps As Single, _
                    ByVal PredilutedDiluentVol As Single, _
                    ByVal PreDiluentVolSteps As Single, _
                    ByVal EnableStatus As Boolean, _
                    ByVal FactoryCalib As Boolean, _
                    ByVal QCActive As Boolean, _
                    ByVal TotalAllowedError As Single, _
                    ByVal ItemIDDesc As String, _
                    ByVal HistTestID As Integer, _
                    ByVal TestVersionNumber As Integer, _
                    ByVal ReplicatesNumber As Integer) As tparTestSamplesRow
            Dim rowtparTestSamplesRow As tparTestSamplesRow = CType(Me.NewRow, tparTestSamplesRow)
            Dim columnValuesArray() As Object = New Object() {TestID, SampleType, TestLongName, SampleVolume, WashingVolume, PredilutionUseFlag, PredilutionFactor, PredilutionMode, RedPostdilutionFactor, RedPostSampleVolume, IncPostdilutionFactor, IncPostSampleVolume, AutomaticRerun, AbsorbanceDilutionFactor, BlankAbsorbanceLimit, LinearityLimit, DetectionLimit, SlopeFactorA, SlopeFactorB, SubstrateDepletionValue, RerunLowerLimit, RerunUpperLimit, ActiveRangeType, CalibratorType, CalibrationFactor, SampleTypeAlternative, CalibratorReplicates, NumberOfControls, ControlReplicates, RejectionCriteria, CalculationMode, NumberOfSeries, DefaultSampleType, TS_User, TS_DateTime, SampleVolumeSteps, WashingVolumeSteps, RedPostSampleVolumeSteps, IncPostSampleVolumeSteps, IsNew, ExistCalibResult, DeleteResultAnswer, KineticsBlankLimit, FactorLowerLimit, FactorUpperLimit, DiluentSolution, PredilutedSampleVol, PredilutedSampleVolSteps, PredilutedDiluentVol, PreDiluentVolSteps, EnableStatus, FactoryCalib, QCActive, TotalAllowedError, ItemIDDesc, HistTestID, TestVersionNumber, ReplicatesNumber}
            rowtparTestSamplesRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowtparTestSamplesRow)
            Return rowtparTestSamplesRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As tparTestSamplesDataTable = CType(MyBase.Clone, tparTestSamplesDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New tparTestSamplesDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnTestID = MyBase.Columns("TestID")
            Me.columnSampleType = MyBase.Columns("SampleType")
            Me.columnTestLongName = MyBase.Columns("TestLongName")
            Me.columnSampleVolume = MyBase.Columns("SampleVolume")
            Me.columnWashingVolume = MyBase.Columns("WashingVolume")
            Me.columnPredilutionUseFlag = MyBase.Columns("PredilutionUseFlag")
            Me.columnPredilutionFactor = MyBase.Columns("PredilutionFactor")
            Me.columnPredilutionMode = MyBase.Columns("PredilutionMode")
            Me.columnRedPostdilutionFactor = MyBase.Columns("RedPostdilutionFactor")
            Me.columnRedPostSampleVolume = MyBase.Columns("RedPostSampleVolume")
            Me.columnIncPostdilutionFactor = MyBase.Columns("IncPostdilutionFactor")
            Me.columnIncPostSampleVolume = MyBase.Columns("IncPostSampleVolume")
            Me.columnAutomaticRerun = MyBase.Columns("AutomaticRerun")
            Me.columnAbsorbanceDilutionFactor = MyBase.Columns("AbsorbanceDilutionFactor")
            Me.columnBlankAbsorbanceLimit = MyBase.Columns("BlankAbsorbanceLimit")
            Me.columnLinearityLimit = MyBase.Columns("LinearityLimit")
            Me.columnDetectionLimit = MyBase.Columns("DetectionLimit")
            Me.columnSlopeFactorA = MyBase.Columns("SlopeFactorA")
            Me.columnSlopeFactorB = MyBase.Columns("SlopeFactorB")
            Me.columnSubstrateDepletionValue = MyBase.Columns("SubstrateDepletionValue")
            Me.columnRerunLowerLimit = MyBase.Columns("RerunLowerLimit")
            Me.columnRerunUpperLimit = MyBase.Columns("RerunUpperLimit")
            Me.columnActiveRangeType = MyBase.Columns("ActiveRangeType")
            Me.columnCalibratorType = MyBase.Columns("CalibratorType")
            Me.columnCalibrationFactor = MyBase.Columns("CalibrationFactor")
            Me.columnSampleTypeAlternative = MyBase.Columns("SampleTypeAlternative")
            Me.columnCalibratorReplicates = MyBase.Columns("CalibratorReplicates")
            Me.columnNumberOfControls = MyBase.Columns("NumberOfControls")
            Me.columnControlReplicates = MyBase.Columns("ControlReplicates")
            Me.columnRejectionCriteria = MyBase.Columns("RejectionCriteria")
            Me.columnCalculationMode = MyBase.Columns("CalculationMode")
            Me.columnNumberOfSeries = MyBase.Columns("NumberOfSeries")
            Me.columnDefaultSampleType = MyBase.Columns("DefaultSampleType")
            Me.columnTS_User = MyBase.Columns("TS_User")
            Me.columnTS_DateTime = MyBase.Columns("TS_DateTime")
            Me.columnSampleVolumeSteps = MyBase.Columns("SampleVolumeSteps")
            Me.columnWashingVolumeSteps = MyBase.Columns("WashingVolumeSteps")
            Me.columnRedPostSampleVolumeSteps = MyBase.Columns("RedPostSampleVolumeSteps")
            Me.columnIncPostSampleVolumeSteps = MyBase.Columns("IncPostSampleVolumeSteps")
            Me.columnIsNew = MyBase.Columns("IsNew")
            Me.columnExistCalibResult = MyBase.Columns("ExistCalibResult")
            Me.columnDeleteResultAnswer = MyBase.Columns("DeleteResultAnswer")
            Me.columnKineticsBlankLimit = MyBase.Columns("KineticsBlankLimit")
            Me.columnFactorLowerLimit = MyBase.Columns("FactorLowerLimit")
            Me.columnFactorUpperLimit = MyBase.Columns("FactorUpperLimit")
            Me.columnDiluentSolution = MyBase.Columns("DiluentSolution")
            Me.columnPredilutedSampleVol = MyBase.Columns("PredilutedSampleVol")
            Me.columnPredilutedSampleVolSteps = MyBase.Columns("PredilutedSampleVolSteps")
            Me.columnPredilutedDiluentVol = MyBase.Columns("PredilutedDiluentVol")
            Me.columnPreDiluentVolSteps = MyBase.Columns("PreDiluentVolSteps")
            Me.columnEnableStatus = MyBase.Columns("EnableStatus")
            Me.columnFactoryCalib = MyBase.Columns("FactoryCalib")
            Me.columnQCActive = MyBase.Columns("QCActive")
            Me.columnTotalAllowedError = MyBase.Columns("TotalAllowedError")
            Me.columnItemIDDesc = MyBase.Columns("ItemIDDesc")
            Me.columnHistTestID = MyBase.Columns("HistTestID")
            Me.columnTestVersionNumber = MyBase.Columns("TestVersionNumber")
            Me.columnReplicatesNumber = MyBase.Columns("ReplicatesNumber")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnTestID = New Global.System.Data.DataColumn("TestID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTestID)
            Me.columnSampleType = New Global.System.Data.DataColumn("SampleType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSampleType)
            Me.columnTestLongName = New Global.System.Data.DataColumn("TestLongName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTestLongName)
            Me.columnSampleVolume = New Global.System.Data.DataColumn("SampleVolume", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSampleVolume)
            Me.columnWashingVolume = New Global.System.Data.DataColumn("WashingVolume", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWashingVolume)
            Me.columnPredilutionUseFlag = New Global.System.Data.DataColumn("PredilutionUseFlag", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPredilutionUseFlag)
            Me.columnPredilutionFactor = New Global.System.Data.DataColumn("PredilutionFactor", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPredilutionFactor)
            Me.columnPredilutionMode = New Global.System.Data.DataColumn("PredilutionMode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPredilutionMode)
            Me.columnRedPostdilutionFactor = New Global.System.Data.DataColumn("RedPostdilutionFactor", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRedPostdilutionFactor)
            Me.columnRedPostSampleVolume = New Global.System.Data.DataColumn("RedPostSampleVolume", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRedPostSampleVolume)
            Me.columnIncPostdilutionFactor = New Global.System.Data.DataColumn("IncPostdilutionFactor", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIncPostdilutionFactor)
            Me.columnIncPostSampleVolume = New Global.System.Data.DataColumn("IncPostSampleVolume", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIncPostSampleVolume)
            Me.columnAutomaticRerun = New Global.System.Data.DataColumn("AutomaticRerun", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAutomaticRerun)
            Me.columnAbsorbanceDilutionFactor = New Global.System.Data.DataColumn("AbsorbanceDilutionFactor", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAbsorbanceDilutionFactor)
            Me.columnBlankAbsorbanceLimit = New Global.System.Data.DataColumn("BlankAbsorbanceLimit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBlankAbsorbanceLimit)
            Me.columnLinearityLimit = New Global.System.Data.DataColumn("LinearityLimit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLinearityLimit)
            Me.columnDetectionLimit = New Global.System.Data.DataColumn("DetectionLimit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDetectionLimit)
            Me.columnSlopeFactorA = New Global.System.Data.DataColumn("SlopeFactorA", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSlopeFactorA)
            Me.columnSlopeFactorB = New Global.System.Data.DataColumn("SlopeFactorB", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSlopeFactorB)
            Me.columnSubstrateDepletionValue = New Global.System.Data.DataColumn("SubstrateDepletionValue", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubstrateDepletionValue)
            Me.columnRerunLowerLimit = New Global.System.Data.DataColumn("RerunLowerLimit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRerunLowerLimit)
            Me.columnRerunUpperLimit = New Global.System.Data.DataColumn("RerunUpperLimit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRerunUpperLimit)
            Me.columnActiveRangeType = New Global.System.Data.DataColumn("ActiveRangeType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnActiveRangeType)
            Me.columnCalibratorType = New Global.System.Data.DataColumn("CalibratorType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCalibratorType)
            Me.columnCalibrationFactor = New Global.System.Data.DataColumn("CalibrationFactor", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCalibrationFactor)
            Me.columnSampleTypeAlternative = New Global.System.Data.DataColumn("SampleTypeAlternative", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSampleTypeAlternative)
            Me.columnCalibratorReplicates = New Global.System.Data.DataColumn("CalibratorReplicates", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCalibratorReplicates)
            Me.columnNumberOfControls = New Global.System.Data.DataColumn("NumberOfControls", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumberOfControls)
            Me.columnControlReplicates = New Global.System.Data.DataColumn("ControlReplicates", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnControlReplicates)
            Me.columnRejectionCriteria = New Global.System.Data.DataColumn("RejectionCriteria", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRejectionCriteria)
            Me.columnCalculationMode = New Global.System.Data.DataColumn("CalculationMode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCalculationMode)
            Me.columnNumberOfSeries = New Global.System.Data.DataColumn("NumberOfSeries", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumberOfSeries)
            Me.columnDefaultSampleType = New Global.System.Data.DataColumn("DefaultSampleType", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDefaultSampleType)
            Me.columnTS_User = New Global.System.Data.DataColumn("TS_User", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTS_User)
            Me.columnTS_DateTime = New Global.System.Data.DataColumn("TS_DateTime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTS_DateTime)
            Me.columnSampleVolumeSteps = New Global.System.Data.DataColumn("SampleVolumeSteps", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSampleVolumeSteps)
            Me.columnWashingVolumeSteps = New Global.System.Data.DataColumn("WashingVolumeSteps", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWashingVolumeSteps)
            Me.columnRedPostSampleVolumeSteps = New Global.System.Data.DataColumn("RedPostSampleVolumeSteps", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRedPostSampleVolumeSteps)
            Me.columnIncPostSampleVolumeSteps = New Global.System.Data.DataColumn("IncPostSampleVolumeSteps", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIncPostSampleVolumeSteps)
            Me.columnIsNew = New Global.System.Data.DataColumn("IsNew", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIsNew)
            Me.columnExistCalibResult = New Global.System.Data.DataColumn("ExistCalibResult", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExistCalibResult)
            Me.columnDeleteResultAnswer = New Global.System.Data.DataColumn("DeleteResultAnswer", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDeleteResultAnswer)
            Me.columnKineticsBlankLimit = New Global.System.Data.DataColumn("KineticsBlankLimit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKineticsBlankLimit)
            Me.columnFactorLowerLimit = New Global.System.Data.DataColumn("FactorLowerLimit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFactorLowerLimit)
            Me.columnFactorUpperLimit = New Global.System.Data.DataColumn("FactorUpperLimit", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFactorUpperLimit)
            Me.columnDiluentSolution = New Global.System.Data.DataColumn("DiluentSolution", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDiluentSolution)
            Me.columnPredilutedSampleVol = New Global.System.Data.DataColumn("PredilutedSampleVol", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPredilutedSampleVol)
            Me.columnPredilutedSampleVolSteps = New Global.System.Data.DataColumn("PredilutedSampleVolSteps", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPredilutedSampleVolSteps)
            Me.columnPredilutedDiluentVol = New Global.System.Data.DataColumn("PredilutedDiluentVol", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPredilutedDiluentVol)
            Me.columnPreDiluentVolSteps = New Global.System.Data.DataColumn("PreDiluentVolSteps", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPreDiluentVolSteps)
            Me.columnEnableStatus = New Global.System.Data.DataColumn("EnableStatus", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEnableStatus)
            Me.columnFactoryCalib = New Global.System.Data.DataColumn("FactoryCalib", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFactoryCalib)
            Me.columnQCActive = New Global.System.Data.DataColumn("QCActive", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQCActive)
            Me.columnTotalAllowedError = New Global.System.Data.DataColumn("TotalAllowedError", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalAllowedError)
            Me.columnItemIDDesc = New Global.System.Data.DataColumn("ItemIDDesc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItemIDDesc)
            Me.columnHistTestID = New Global.System.Data.DataColumn("HistTestID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHistTestID)
            Me.columnTestVersionNumber = New Global.System.Data.DataColumn("TestVersionNumber", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTestVersionNumber)
            Me.columnReplicatesNumber = New Global.System.Data.DataColumn("ReplicatesNumber", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReplicatesNumber)
            Me.columnSampleType.DefaultValue = CType("", String)
            Me.columnIsNew.DefaultValue = CType(False, Boolean)
            Me.columnDeleteResultAnswer.DefaultValue = CType(False, Boolean)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewtparTestSamplesRow() As tparTestSamplesRow
            Return CType(Me.NewRow, tparTestSamplesRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New tparTestSamplesRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(tparTestSamplesRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.tparTestSamplesRowChangedEvent) Is Nothing) Then
                RaiseEvent tparTestSamplesRowChanged(Me, New tparTestSamplesRowChangeEvent(CType(e.Row, tparTestSamplesRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.tparTestSamplesRowChangingEvent) Is Nothing) Then
                RaiseEvent tparTestSamplesRowChanging(Me, New tparTestSamplesRowChangeEvent(CType(e.Row, tparTestSamplesRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.tparTestSamplesRowDeletedEvent) Is Nothing) Then
                RaiseEvent tparTestSamplesRowDeleted(Me, New tparTestSamplesRowChangeEvent(CType(e.Row, tparTestSamplesRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.tparTestSamplesRowDeletingEvent) Is Nothing) Then
                RaiseEvent tparTestSamplesRowDeleting(Me, New tparTestSamplesRowChangeEvent(CType(e.Row, tparTestSamplesRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemovetparTestSamplesRow(ByVal row As tparTestSamplesRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As TestSamplesDS = New TestSamplesDS()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "tparTestSamplesDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class tparTestSamplesRow
        Inherits Global.System.Data.DataRow

        Private tabletparTestSamples As tparTestSamplesDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabletparTestSamples = CType(Me.Table, tparTestSamplesDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TestID() As Integer
            Get
                Try
                    Return CType(Me(Me.tabletparTestSamples.TestIDColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TestID' in table 'tparTestSamples' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tabletparTestSamples.TestIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SampleType() As String
            Get
                If Me.IsSampleTypeNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tabletparTestSamples.SampleTypeColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tabletparTestSamples.SampleTypeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TestLongName() As String
            Get
                If Me.IsTestLongNameNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tabletparTestSamples.TestLongNameColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tabletparTestSamples.TestLongNameColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SampleVolume() As Single
            Get
                Try
                    Return CType(Me(Me.tabletparTestSamples.SampleVolumeColumn), Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SampleVolume' in table 'tparTestSamples' is DBNull.", e)
                End Try
            End Get
            Set(value As Single)
                Me(Me.tabletparTestSamples.SampleVolumeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property WashingVolume() As Single
            Get
                Try
                    Return CType(Me(Me.tabletparTestSamples.WashingVolumeColumn), Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WashingVolume' in table 'tparTestSamples' is DBNull.", e)
                End Try
            End Get
            Set(value As Single)
                Me(Me.tabletparTestSamples.WashingVolumeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PredilutionUseFlag() As Boolean
            Get
                Try
                    Return CType(Me(Me.tabletparTestSamples.PredilutionUseFlagColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PredilutionUseFlag' in table 'tparTestSamples' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tabletparTestSamples.PredilutionUseFlagColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PredilutionFactor() As Single
            Get
                Try
                    Return CType(Me(Me.tabletparTestSamples.PredilutionFactorColumn), Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PredilutionFactor' in table 'tparTestSamples' is DBNull.", e)
                End Try
            End Get
            Set(value As Single)
                Me(Me.tabletparTestSamples.PredilutionFactorColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PredilutionMode() As String
            Get
                If Me.IsPredilutionModeNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tabletparTestSamples.PredilutionModeColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tabletparTestSamples.PredilutionModeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RedPostdilutionFactor() As Single
            Get
                Try
                    Return CType(Me(Me.tabletparTestSamples.RedPostdilutionFactorColumn), Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RedPostdilutionFactor' in table 'tparTestSamples' is DBNull" & _
                            ".", e)
                End Try
            End Get
            Set(value As Single)
                Me(Me.tabletparTestSamples.RedPostdilutionFactorColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RedPostSampleVolume() As Single
            Get
                Try
                    Return CType(Me(Me.tabletparTestSamples.RedPostSampleVolumeColumn), Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RedPostSampleVolume' in table 'tparTestSamples' is DBNull.", e)
                End Try
            End Get
            Set(value As Single)
                Me(Me.tabletparTestSamples.RedPostSampleVolumeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IncPostdilutionFactor() As Single
            Get
                Try
                    Return CType(Me(Me.tabletparTestSamples.IncPostdilutionFactorColumn), Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IncPostdilutionFactor' in table 'tparTestSamples' is DBNull" & _
                            ".", e)
                End Try
            End Get
            Set(value As Single)
                Me(Me.tabletparTestSamples.IncPostdilutionFactorColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IncPostSampleVolume() As Single
            Get
                Try
                    Return CType(Me(Me.tabletparTestSamples.IncPostSampleVolumeColumn), Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IncPostSampleVolume' in table 'tparTestSamples' is DBNull.", e)
                End Try
            End Get
            Set(value As Single)
                Me(Me.tabletparTestSamples.IncPostSampleVolumeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property AutomaticRerun() As Boolean
            Get
                Try
                    Return CType(Me(Me.tabletparTestSamples.AutomaticRerunColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AutomaticRerun' in table 'tparTestSamples' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tabletparTestSamples.AutomaticRerunColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property AbsorbanceDilutionFactor() As Single
            Get
                Try
                    Return CType(Me(Me.tabletparTestSamples.AbsorbanceDilutionFactorColumn), Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AbsorbanceDilutionFactor' in table 'tparTestSamples' is DBN" & _
                            "ull.", e)
                End Try
            End Get
            Set(value As Single)
                Me(Me.tabletparTestSamples.AbsorbanceDilutionFactorColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property BlankAbsorbanceLimit() As Single
            Get
                Try
                    Return CType(Me(Me.tabletparTestSamples.BlankAbsorbanceLimitColumn), Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BlankAbsorbanceLimit' in table 'tparTestSamples' is DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As Single)
                Me(Me.tabletparTestSamples.BlankAbsorbanceLimitColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property LinearityLimit() As Single
            Get
                Try
                    Return CType(Me(Me.tabletparTestSamples.LinearityLimitColumn), Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LinearityLimit' in table 'tparTestSamples' is DBNull.", e)
                End Try
            End Get
            Set(value As Single)
                Me(Me.tabletparTestSamples.LinearityLimitColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DetectionLimit() As Single
            Get
                Try
                    Return CType(Me(Me.tabletparTestSamples.DetectionLimitColumn), Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DetectionLimit' in table 'tparTestSamples' is DBNull.", e)
                End Try
            End Get
            Set(value As Single)
                Me(Me.tabletparTestSamples.DetectionLimitColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SlopeFactorA() As Single
            Get
                Try
                    Return CType(Me(Me.tabletparTestSamples.SlopeFactorAColumn), Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SlopeFactorA' in table 'tparTestSamples' is DBNull.", e)
                End Try
            End Get
            Set(value As Single)
                Me(Me.tabletparTestSamples.SlopeFactorAColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SlopeFactorB() As Single
            Get
                Try
                    Return CType(Me(Me.tabletparTestSamples.SlopeFactorBColumn), Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SlopeFactorB' in table 'tparTestSamples' is DBNull.", e)
                End Try
            End Get
            Set(value As Single)
                Me(Me.tabletparTestSamples.SlopeFactorBColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SubstrateDepletionValue() As Single
            Get
                Try
                    Return CType(Me(Me.tabletparTestSamples.SubstrateDepletionValueColumn), Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SubstrateDepletionValue' in table 'tparTestSamples' is DBNu" & _
                            "ll.", e)
                End Try
            End Get
            Set(value As Single)
                Me(Me.tabletparTestSamples.SubstrateDepletionValueColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RerunLowerLimit() As Single
            Get
                Try
                    Return CType(Me(Me.tabletparTestSamples.RerunLowerLimitColumn), Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RerunLowerLimit' in table 'tparTestSamples' is DBNull.", e)
                End Try
            End Get
            Set(value As Single)
                Me(Me.tabletparTestSamples.RerunLowerLimitColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RerunUpperLimit() As Single
            Get
                Try
                    Return CType(Me(Me.tabletparTestSamples.RerunUpperLimitColumn), Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RerunUpperLimit' in table 'tparTestSamples' is DBNull.", e)
                End Try
            End Get
            Set(value As Single)
                Me(Me.tabletparTestSamples.RerunUpperLimitColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ActiveRangeType() As String
            Get
                Try
                    Return CType(Me(Me.tabletparTestSamples.ActiveRangeTypeColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ActiveRangeType' in table 'tparTestSamples' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabletparTestSamples.ActiveRangeTypeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CalibratorType() As String
            Get
                If Me.IsCalibratorTypeNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tabletparTestSamples.CalibratorTypeColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tabletparTestSamples.CalibratorTypeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CalibrationFactor() As Single
            Get
                Try
                    Return CType(Me(Me.tabletparTestSamples.CalibrationFactorColumn), Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CalibrationFactor' in table 'tparTestSamples' is DBNull.", e)
                End Try
            End Get
            Set(value As Single)
                Me(Me.tabletparTestSamples.CalibrationFactorColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SampleTypeAlternative() As String
            Get
                If Me.IsSampleTypeAlternativeNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tabletparTestSamples.SampleTypeAlternativeColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tabletparTestSamples.SampleTypeAlternativeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CalibratorReplicates() As Integer
            Get
                Try
                    Return CType(Me(Me.tabletparTestSamples.CalibratorReplicatesColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CalibratorReplicates' in table 'tparTestSamples' is DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tabletparTestSamples.CalibratorReplicatesColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NumberOfControls() As Integer
            Get
                Try
                    Return CType(Me(Me.tabletparTestSamples.NumberOfControlsColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NumberOfControls' in table 'tparTestSamples' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tabletparTestSamples.NumberOfControlsColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ControlReplicates() As Integer
            Get
                Try
                    Return CType(Me(Me.tabletparTestSamples.ControlReplicatesColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ControlReplicates' in table 'tparTestSamples' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tabletparTestSamples.ControlReplicatesColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RejectionCriteria() As Single
            Get
                Try
                    Return CType(Me(Me.tabletparTestSamples.RejectionCriteriaColumn), Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RejectionCriteria' in table 'tparTestSamples' is DBNull.", e)
                End Try
            End Get
            Set(value As Single)
                Me(Me.tabletparTestSamples.RejectionCriteriaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CalculationMode() As String
            Get
                If Me.IsCalculationModeNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tabletparTestSamples.CalculationModeColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tabletparTestSamples.CalculationModeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NumberOfSeries() As Integer
            Get
                Try
                    Return CType(Me(Me.tabletparTestSamples.NumberOfSeriesColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NumberOfSeries' in table 'tparTestSamples' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tabletparTestSamples.NumberOfSeriesColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DefaultSampleType() As Boolean
            Get
                Try
                    Return CType(Me(Me.tabletparTestSamples.DefaultSampleTypeColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DefaultSampleType' in table 'tparTestSamples' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tabletparTestSamples.DefaultSampleTypeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TS_User() As String
            Get
                If Me.IsTS_UserNull Then
                    Return String.Empty
                Else
                    Return CType(Me(Me.tabletparTestSamples.TS_UserColumn), String)
                End If
            End Get
            Set(value As String)
                Me(Me.tabletparTestSamples.TS_UserColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TS_DateTime() As Date
            Get
                Try
                    Return CType(Me(Me.tabletparTestSamples.TS_DateTimeColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TS_DateTime' in table 'tparTestSamples' is DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tabletparTestSamples.TS_DateTimeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SampleVolumeSteps() As Single
            Get
                Try
                    Return CType(Me(Me.tabletparTestSamples.SampleVolumeStepsColumn), Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SampleVolumeSteps' in table 'tparTestSamples' is DBNull.", e)
                End Try
            End Get
            Set(value As Single)
                Me(Me.tabletparTestSamples.SampleVolumeStepsColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property WashingVolumeSteps() As Single
            Get
                Try
                    Return CType(Me(Me.tabletparTestSamples.WashingVolumeStepsColumn), Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WashingVolumeSteps' in table 'tparTestSamples' is DBNull.", e)
                End Try
            End Get
            Set(value As Single)
                Me(Me.tabletparTestSamples.WashingVolumeStepsColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RedPostSampleVolumeSteps() As Single
            Get
                Try
                    Return CType(Me(Me.tabletparTestSamples.RedPostSampleVolumeStepsColumn), Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RedPostSampleVolumeSteps' in table 'tparTestSamples' is DBN" & _
                            "ull.", e)
                End Try
            End Get
            Set(value As Single)
                Me(Me.tabletparTestSamples.RedPostSampleVolumeStepsColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IncPostSampleVolumeSteps() As Single
            Get
                Try
                    Return CType(Me(Me.tabletparTestSamples.IncPostSampleVolumeStepsColumn), Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IncPostSampleVolumeSteps' in table 'tparTestSamples' is DBN" & _
                            "ull.", e)
                End Try
            End Get
            Set(value As Single)
                Me(Me.tabletparTestSamples.IncPostSampleVolumeStepsColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IsNew() As Boolean
            Get
                Try
                    Return CType(Me(Me.tabletparTestSamples.IsNewColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IsNew' in table 'tparTestSamples' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tabletparTestSamples.IsNewColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ExistCalibResult() As Boolean
            Get
                Try
                    Return CType(Me(Me.tabletparTestSamples.ExistCalibResultColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ExistCalibResult' in table 'tparTestSamples' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tabletparTestSamples.ExistCalibResultColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DeleteResultAnswer() As Boolean
            Get
                Try
                    Return CType(Me(Me.tabletparTestSamples.DeleteResultAnswerColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DeleteResultAnswer' in table 'tparTestSamples' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tabletparTestSamples.DeleteResultAnswerColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property KineticsBlankLimit() As Single
            Get
                Try
                    Return CType(Me(Me.tabletparTestSamples.KineticsBlankLimitColumn), Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KineticsBlankLimit' in table 'tparTestSamples' is DBNull.", e)
                End Try
            End Get
            Set(value As Single)
                Me(Me.tabletparTestSamples.KineticsBlankLimitColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FactorLowerLimit() As Single
            Get
                Try
                    Return CType(Me(Me.tabletparTestSamples.FactorLowerLimitColumn), Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FactorLowerLimit' in table 'tparTestSamples' is DBNull.", e)
                End Try
            End Get
            Set(value As Single)
                Me(Me.tabletparTestSamples.FactorLowerLimitColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FactorUpperLimit() As Single
            Get
                Try
                    Return CType(Me(Me.tabletparTestSamples.FactorUpperLimitColumn), Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FactorUpperLimit' in table 'tparTestSamples' is DBNull.", e)
                End Try
            End Get
            Set(value As Single)
                Me(Me.tabletparTestSamples.FactorUpperLimitColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DiluentSolution() As String
            Get
                Try
                    Return CType(Me(Me.tabletparTestSamples.DiluentSolutionColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DiluentSolution' in table 'tparTestSamples' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabletparTestSamples.DiluentSolutionColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PredilutedSampleVol() As Single
            Get
                Try
                    Return CType(Me(Me.tabletparTestSamples.PredilutedSampleVolColumn), Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PredilutedSampleVol' in table 'tparTestSamples' is DBNull.", e)
                End Try
            End Get
            Set(value As Single)
                Me(Me.tabletparTestSamples.PredilutedSampleVolColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PredilutedSampleVolSteps() As Single
            Get
                Try
                    Return CType(Me(Me.tabletparTestSamples.PredilutedSampleVolStepsColumn), Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PredilutedSampleVolSteps' in table 'tparTestSamples' is DBN" & _
                            "ull.", e)
                End Try
            End Get
            Set(value As Single)
                Me(Me.tabletparTestSamples.PredilutedSampleVolStepsColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PredilutedDiluentVol() As Single
            Get
                Try
                    Return CType(Me(Me.tabletparTestSamples.PredilutedDiluentVolColumn), Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PredilutedDiluentVol' in table 'tparTestSamples' is DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As Single)
                Me(Me.tabletparTestSamples.PredilutedDiluentVolColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PreDiluentVolSteps() As Single
            Get
                Try
                    Return CType(Me(Me.tabletparTestSamples.PreDiluentVolStepsColumn), Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PreDiluentVolSteps' in table 'tparTestSamples' is DBNull.", e)
                End Try
            End Get
            Set(value As Single)
                Me(Me.tabletparTestSamples.PreDiluentVolStepsColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property EnableStatus() As Boolean
            Get
                Try
                    Return CType(Me(Me.tabletparTestSamples.EnableStatusColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EnableStatus' in table 'tparTestSamples' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tabletparTestSamples.EnableStatusColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FactoryCalib() As Boolean
            Get
                Try
                    Return CType(Me(Me.tabletparTestSamples.FactoryCalibColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FactoryCalib' in table 'tparTestSamples' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tabletparTestSamples.FactoryCalibColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property QCActive() As Boolean
            Get
                Try
                    Return CType(Me(Me.tabletparTestSamples.QCActiveColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QCActive' in table 'tparTestSamples' is DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tabletparTestSamples.QCActiveColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TotalAllowedError() As Single
            Get
                Try
                    Return CType(Me(Me.tabletparTestSamples.TotalAllowedErrorColumn), Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TotalAllowedError' in table 'tparTestSamples' is DBNull.", e)
                End Try
            End Get
            Set(value As Single)
                Me(Me.tabletparTestSamples.TotalAllowedErrorColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ItemIDDesc() As String
            Get
                Try
                    Return CType(Me(Me.tabletparTestSamples.ItemIDDescColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ItemIDDesc' in table 'tparTestSamples' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tabletparTestSamples.ItemIDDescColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property HistTestID() As Integer
            Get
                Try
                    Return CType(Me(Me.tabletparTestSamples.HistTestIDColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HistTestID' in table 'tparTestSamples' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tabletparTestSamples.HistTestIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TestVersionNumber() As Integer
            Get
                Try
                    Return CType(Me(Me.tabletparTestSamples.TestVersionNumberColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TestVersionNumber' in table 'tparTestSamples' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tabletparTestSamples.TestVersionNumberColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ReplicatesNumber() As Integer
            Get
                Try
                    Return CType(Me(Me.tabletparTestSamples.ReplicatesNumberColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ReplicatesNumber' in table 'tparTestSamples' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tabletparTestSamples.ReplicatesNumberColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTestIDNull() As Boolean
            Return Me.IsNull(Me.tabletparTestSamples.TestIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTestIDNull()
            Me(Me.tabletparTestSamples.TestIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSampleTypeNull() As Boolean
            Return Me.IsNull(Me.tabletparTestSamples.SampleTypeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSampleTypeNull()
            Me(Me.tabletparTestSamples.SampleTypeColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTestLongNameNull() As Boolean
            Return Me.IsNull(Me.tabletparTestSamples.TestLongNameColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTestLongNameNull()
            Me(Me.tabletparTestSamples.TestLongNameColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSampleVolumeNull() As Boolean
            Return Me.IsNull(Me.tabletparTestSamples.SampleVolumeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSampleVolumeNull()
            Me(Me.tabletparTestSamples.SampleVolumeColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsWashingVolumeNull() As Boolean
            Return Me.IsNull(Me.tabletparTestSamples.WashingVolumeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetWashingVolumeNull()
            Me(Me.tabletparTestSamples.WashingVolumeColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPredilutionUseFlagNull() As Boolean
            Return Me.IsNull(Me.tabletparTestSamples.PredilutionUseFlagColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPredilutionUseFlagNull()
            Me(Me.tabletparTestSamples.PredilutionUseFlagColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPredilutionFactorNull() As Boolean
            Return Me.IsNull(Me.tabletparTestSamples.PredilutionFactorColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPredilutionFactorNull()
            Me(Me.tabletparTestSamples.PredilutionFactorColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPredilutionModeNull() As Boolean
            Return Me.IsNull(Me.tabletparTestSamples.PredilutionModeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPredilutionModeNull()
            Me(Me.tabletparTestSamples.PredilutionModeColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRedPostdilutionFactorNull() As Boolean
            Return Me.IsNull(Me.tabletparTestSamples.RedPostdilutionFactorColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRedPostdilutionFactorNull()
            Me(Me.tabletparTestSamples.RedPostdilutionFactorColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRedPostSampleVolumeNull() As Boolean
            Return Me.IsNull(Me.tabletparTestSamples.RedPostSampleVolumeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRedPostSampleVolumeNull()
            Me(Me.tabletparTestSamples.RedPostSampleVolumeColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsIncPostdilutionFactorNull() As Boolean
            Return Me.IsNull(Me.tabletparTestSamples.IncPostdilutionFactorColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetIncPostdilutionFactorNull()
            Me(Me.tabletparTestSamples.IncPostdilutionFactorColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsIncPostSampleVolumeNull() As Boolean
            Return Me.IsNull(Me.tabletparTestSamples.IncPostSampleVolumeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetIncPostSampleVolumeNull()
            Me(Me.tabletparTestSamples.IncPostSampleVolumeColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsAutomaticRerunNull() As Boolean
            Return Me.IsNull(Me.tabletparTestSamples.AutomaticRerunColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetAutomaticRerunNull()
            Me(Me.tabletparTestSamples.AutomaticRerunColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsAbsorbanceDilutionFactorNull() As Boolean
            Return Me.IsNull(Me.tabletparTestSamples.AbsorbanceDilutionFactorColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetAbsorbanceDilutionFactorNull()
            Me(Me.tabletparTestSamples.AbsorbanceDilutionFactorColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsBlankAbsorbanceLimitNull() As Boolean
            Return Me.IsNull(Me.tabletparTestSamples.BlankAbsorbanceLimitColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetBlankAbsorbanceLimitNull()
            Me(Me.tabletparTestSamples.BlankAbsorbanceLimitColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsLinearityLimitNull() As Boolean
            Return Me.IsNull(Me.tabletparTestSamples.LinearityLimitColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetLinearityLimitNull()
            Me(Me.tabletparTestSamples.LinearityLimitColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDetectionLimitNull() As Boolean
            Return Me.IsNull(Me.tabletparTestSamples.DetectionLimitColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDetectionLimitNull()
            Me(Me.tabletparTestSamples.DetectionLimitColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSlopeFactorANull() As Boolean
            Return Me.IsNull(Me.tabletparTestSamples.SlopeFactorAColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSlopeFactorANull()
            Me(Me.tabletparTestSamples.SlopeFactorAColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSlopeFactorBNull() As Boolean
            Return Me.IsNull(Me.tabletparTestSamples.SlopeFactorBColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSlopeFactorBNull()
            Me(Me.tabletparTestSamples.SlopeFactorBColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSubstrateDepletionValueNull() As Boolean
            Return Me.IsNull(Me.tabletparTestSamples.SubstrateDepletionValueColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSubstrateDepletionValueNull()
            Me(Me.tabletparTestSamples.SubstrateDepletionValueColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRerunLowerLimitNull() As Boolean
            Return Me.IsNull(Me.tabletparTestSamples.RerunLowerLimitColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRerunLowerLimitNull()
            Me(Me.tabletparTestSamples.RerunLowerLimitColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRerunUpperLimitNull() As Boolean
            Return Me.IsNull(Me.tabletparTestSamples.RerunUpperLimitColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRerunUpperLimitNull()
            Me(Me.tabletparTestSamples.RerunUpperLimitColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsActiveRangeTypeNull() As Boolean
            Return Me.IsNull(Me.tabletparTestSamples.ActiveRangeTypeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetActiveRangeTypeNull()
            Me(Me.tabletparTestSamples.ActiveRangeTypeColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCalibratorTypeNull() As Boolean
            Return Me.IsNull(Me.tabletparTestSamples.CalibratorTypeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCalibratorTypeNull()
            Me(Me.tabletparTestSamples.CalibratorTypeColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCalibrationFactorNull() As Boolean
            Return Me.IsNull(Me.tabletparTestSamples.CalibrationFactorColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCalibrationFactorNull()
            Me(Me.tabletparTestSamples.CalibrationFactorColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSampleTypeAlternativeNull() As Boolean
            Return Me.IsNull(Me.tabletparTestSamples.SampleTypeAlternativeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSampleTypeAlternativeNull()
            Me(Me.tabletparTestSamples.SampleTypeAlternativeColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCalibratorReplicatesNull() As Boolean
            Return Me.IsNull(Me.tabletparTestSamples.CalibratorReplicatesColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCalibratorReplicatesNull()
            Me(Me.tabletparTestSamples.CalibratorReplicatesColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNumberOfControlsNull() As Boolean
            Return Me.IsNull(Me.tabletparTestSamples.NumberOfControlsColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNumberOfControlsNull()
            Me(Me.tabletparTestSamples.NumberOfControlsColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsControlReplicatesNull() As Boolean
            Return Me.IsNull(Me.tabletparTestSamples.ControlReplicatesColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetControlReplicatesNull()
            Me(Me.tabletparTestSamples.ControlReplicatesColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRejectionCriteriaNull() As Boolean
            Return Me.IsNull(Me.tabletparTestSamples.RejectionCriteriaColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRejectionCriteriaNull()
            Me(Me.tabletparTestSamples.RejectionCriteriaColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCalculationModeNull() As Boolean
            Return Me.IsNull(Me.tabletparTestSamples.CalculationModeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCalculationModeNull()
            Me(Me.tabletparTestSamples.CalculationModeColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNumberOfSeriesNull() As Boolean
            Return Me.IsNull(Me.tabletparTestSamples.NumberOfSeriesColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNumberOfSeriesNull()
            Me(Me.tabletparTestSamples.NumberOfSeriesColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDefaultSampleTypeNull() As Boolean
            Return Me.IsNull(Me.tabletparTestSamples.DefaultSampleTypeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDefaultSampleTypeNull()
            Me(Me.tabletparTestSamples.DefaultSampleTypeColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTS_UserNull() As Boolean
            Return Me.IsNull(Me.tabletparTestSamples.TS_UserColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTS_UserNull()
            Me(Me.tabletparTestSamples.TS_UserColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTS_DateTimeNull() As Boolean
            Return Me.IsNull(Me.tabletparTestSamples.TS_DateTimeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTS_DateTimeNull()
            Me(Me.tabletparTestSamples.TS_DateTimeColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSampleVolumeStepsNull() As Boolean
            Return Me.IsNull(Me.tabletparTestSamples.SampleVolumeStepsColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSampleVolumeStepsNull()
            Me(Me.tabletparTestSamples.SampleVolumeStepsColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsWashingVolumeStepsNull() As Boolean
            Return Me.IsNull(Me.tabletparTestSamples.WashingVolumeStepsColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetWashingVolumeStepsNull()
            Me(Me.tabletparTestSamples.WashingVolumeStepsColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRedPostSampleVolumeStepsNull() As Boolean
            Return Me.IsNull(Me.tabletparTestSamples.RedPostSampleVolumeStepsColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRedPostSampleVolumeStepsNull()
            Me(Me.tabletparTestSamples.RedPostSampleVolumeStepsColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsIncPostSampleVolumeStepsNull() As Boolean
            Return Me.IsNull(Me.tabletparTestSamples.IncPostSampleVolumeStepsColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetIncPostSampleVolumeStepsNull()
            Me(Me.tabletparTestSamples.IncPostSampleVolumeStepsColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsIsNewNull() As Boolean
            Return Me.IsNull(Me.tabletparTestSamples.IsNewColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetIsNewNull()
            Me(Me.tabletparTestSamples.IsNewColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsExistCalibResultNull() As Boolean
            Return Me.IsNull(Me.tabletparTestSamples.ExistCalibResultColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetExistCalibResultNull()
            Me(Me.tabletparTestSamples.ExistCalibResultColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDeleteResultAnswerNull() As Boolean
            Return Me.IsNull(Me.tabletparTestSamples.DeleteResultAnswerColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDeleteResultAnswerNull()
            Me(Me.tabletparTestSamples.DeleteResultAnswerColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsKineticsBlankLimitNull() As Boolean
            Return Me.IsNull(Me.tabletparTestSamples.KineticsBlankLimitColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetKineticsBlankLimitNull()
            Me(Me.tabletparTestSamples.KineticsBlankLimitColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFactorLowerLimitNull() As Boolean
            Return Me.IsNull(Me.tabletparTestSamples.FactorLowerLimitColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFactorLowerLimitNull()
            Me(Me.tabletparTestSamples.FactorLowerLimitColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFactorUpperLimitNull() As Boolean
            Return Me.IsNull(Me.tabletparTestSamples.FactorUpperLimitColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFactorUpperLimitNull()
            Me(Me.tabletparTestSamples.FactorUpperLimitColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDiluentSolutionNull() As Boolean
            Return Me.IsNull(Me.tabletparTestSamples.DiluentSolutionColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDiluentSolutionNull()
            Me(Me.tabletparTestSamples.DiluentSolutionColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPredilutedSampleVolNull() As Boolean
            Return Me.IsNull(Me.tabletparTestSamples.PredilutedSampleVolColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPredilutedSampleVolNull()
            Me(Me.tabletparTestSamples.PredilutedSampleVolColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPredilutedSampleVolStepsNull() As Boolean
            Return Me.IsNull(Me.tabletparTestSamples.PredilutedSampleVolStepsColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPredilutedSampleVolStepsNull()
            Me(Me.tabletparTestSamples.PredilutedSampleVolStepsColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPredilutedDiluentVolNull() As Boolean
            Return Me.IsNull(Me.tabletparTestSamples.PredilutedDiluentVolColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPredilutedDiluentVolNull()
            Me(Me.tabletparTestSamples.PredilutedDiluentVolColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPreDiluentVolStepsNull() As Boolean
            Return Me.IsNull(Me.tabletparTestSamples.PreDiluentVolStepsColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPreDiluentVolStepsNull()
            Me(Me.tabletparTestSamples.PreDiluentVolStepsColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsEnableStatusNull() As Boolean
            Return Me.IsNull(Me.tabletparTestSamples.EnableStatusColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetEnableStatusNull()
            Me(Me.tabletparTestSamples.EnableStatusColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFactoryCalibNull() As Boolean
            Return Me.IsNull(Me.tabletparTestSamples.FactoryCalibColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFactoryCalibNull()
            Me(Me.tabletparTestSamples.FactoryCalibColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsQCActiveNull() As Boolean
            Return Me.IsNull(Me.tabletparTestSamples.QCActiveColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetQCActiveNull()
            Me(Me.tabletparTestSamples.QCActiveColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTotalAllowedErrorNull() As Boolean
            Return Me.IsNull(Me.tabletparTestSamples.TotalAllowedErrorColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTotalAllowedErrorNull()
            Me(Me.tabletparTestSamples.TotalAllowedErrorColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsItemIDDescNull() As Boolean
            Return Me.IsNull(Me.tabletparTestSamples.ItemIDDescColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetItemIDDescNull()
            Me(Me.tabletparTestSamples.ItemIDDescColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsHistTestIDNull() As Boolean
            Return Me.IsNull(Me.tabletparTestSamples.HistTestIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetHistTestIDNull()
            Me(Me.tabletparTestSamples.HistTestIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTestVersionNumberNull() As Boolean
            Return Me.IsNull(Me.tabletparTestSamples.TestVersionNumberColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTestVersionNumberNull()
            Me(Me.tabletparTestSamples.TestVersionNumberColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsReplicatesNumberNull() As Boolean
            Return Me.IsNull(Me.tabletparTestSamples.ReplicatesNumberColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetReplicatesNumberNull()
            Me(Me.tabletparTestSamples.ReplicatesNumberColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class tparTestSamplesRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As tparTestSamplesRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As tparTestSamplesRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As tparTestSamplesRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
